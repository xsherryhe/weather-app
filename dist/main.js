(()=>{"use strict";var n={689:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,":root {\n  --site-font: 'Helvetica', sans-serif;\n  --background-color: rgb(255, 255, 165);\n  --secondary-color: rgb(0, 70, 162);\n  --light-secondary-color: rgb(200, 224, 255);\n  --box-shadow-color: rgb(80, 80, 80);\n  --sunny-color: var(--background-color);\n  --sunny-font-color: var(--secondary-color);\n  --cloud-color: rgb(165, 204, 255);\n  --cloud-font-color: black;\n  --lowVis-color: rgb(70, 70, 70);\n  --lowVis-font-color: white;\n  --rain-color: var(--secondary-color);\n  --rain-font-color: rgb(165, 204, 255);\n  --snow-color: white;\n  --snow-font-color: black;\n  --thunder-color: black;\n  --thunder-font-color: var(--background-color);\n}\n\nhtml {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: var(--site-font);\n  min-height: 100vh;\n  background-color: var(--light-secondary-color);\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\na {\n  color: var(--secondary-color);\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\nbutton {\n  font-size: 1rem;\n  padding: 0.5rem 1.5rem;\n  cursor: pointer;\n  background-color: var(--secondary-color);\n  color: white;\n  border-radius: 0.2rem;\n}\n\nbutton:hover {\n  background-color: var(--light-secondary-color);\n  color: black;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.error {\n  color: red;\n}\n\n.icon {\n  width: 1.25rem;\n}\n\n@media (max-width: 575px) {\n  html {\n    font-size: 16px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/all.css"],names:[],mappings:"AAAA;EACE,oCAAoC;EACpC,sCAAsC;EACtC,kCAAkC;EAClC,2CAA2C;EAC3C,mCAAmC;EACnC,sCAAsC;EACtC,0CAA0C;EAC1C,iCAAiC;EACjC,yBAAyB;EACzB,+BAA+B;EAC/B,0BAA0B;EAC1B,oCAAoC;EACpC,qCAAqC;EACrC,mBAAmB;EACnB,wBAAwB;EACxB,sBAAsB;EACtB,6CAA6C;AAC/C;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,6BAA6B;EAC7B,iBAAiB;EACjB,8CAA8C;EAC9C,SAAS;EACT,UAAU;EACV,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,6BAA6B;EAC7B,qBAAqB;AACvB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,eAAe;EACf,sBAAsB;EACtB,eAAe;EACf,wCAAwC;EACxC,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,8CAA8C;EAC9C,YAAY;AACd;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE;IACE,eAAe;EACjB;AACF",sourcesContent:[":root {\n  --site-font: 'Helvetica', sans-serif;\n  --background-color: rgb(255, 255, 165);\n  --secondary-color: rgb(0, 70, 162);\n  --light-secondary-color: rgb(200, 224, 255);\n  --box-shadow-color: rgb(80, 80, 80);\n  --sunny-color: var(--background-color);\n  --sunny-font-color: var(--secondary-color);\n  --cloud-color: rgb(165, 204, 255);\n  --cloud-font-color: black;\n  --lowVis-color: rgb(70, 70, 70);\n  --lowVis-font-color: white;\n  --rain-color: var(--secondary-color);\n  --rain-font-color: rgb(165, 204, 255);\n  --snow-color: white;\n  --snow-font-color: black;\n  --thunder-color: black;\n  --thunder-font-color: var(--background-color);\n}\n\nhtml {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: var(--site-font);\n  min-height: 100vh;\n  background-color: var(--light-secondary-color);\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\na {\n  color: var(--secondary-color);\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\nbutton {\n  font-size: 1rem;\n  padding: 0.5rem 1.5rem;\n  cursor: pointer;\n  background-color: var(--secondary-color);\n  color: white;\n  border-radius: 0.2rem;\n}\n\nbutton:hover {\n  background-color: var(--light-secondary-color);\n  color: black;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.error {\n  color: red;\n}\n\n.icon {\n  width: 1.25rem;\n}\n\n@media (max-width: 575px) {\n  html {\n    font-size: 16px;\n  }\n}\n"],sourceRoot:""}]);const A=i},713:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,"form {\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  row-gap: 1rem;\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n  gap: 0.1rem;\n}\n\ninput, select {\n  min-width: 18rem;\n  min-height: 1rem;\n  padding: 0.25rem;\n  font-size: 1rem;\n}\n\nselect {\n  cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/styles/form.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,qBAAqB;EACrB,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB",sourcesContent:["form {\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  row-gap: 1rem;\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n  gap: 0.1rem;\n}\n\ninput, select {\n  min-width: 18rem;\n  min-height: 1rem;\n  padding: 0.25rem;\n  font-size: 1rem;\n}\n\nselect {\n  cursor: pointer;\n}\n"],sourceRoot:""}]);const A=i},176:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".login {\n  margin: 4rem 1rem;\n  height: max-content;\n  padding: 2rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 6px double var(--secondary-color);\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.login .link {\n  margin-top: 0.5rem;\n  text-align: center;\n}\n\n.login .loading {\n  color: var(--secondary-color);\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n}\n\n.login .loading-img {\n  width: 1.5rem;\n}\n\n@media (max-height: 575px) {\n  .login {\n    margin: 1rem;\n  }\n}\n\n@media (max-width: 450px) {\n  .login {\n    margin: 0.25rem;\n    padding: 0.5rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/login-view.css"],names:[],mappings:"AAAA;EACE,iBAAiB;EACjB,mBAAmB;EACnB,oBAAoB;EACpB,qBAAqB;EACrB,yCAAyC;EACzC,uBAAuB;EACvB,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;EAC7B,aAAa;EACb,WAAW;EACX,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,eAAe;IACf,eAAe;EACjB;AACF",sourcesContent:[".login {\n  margin: 4rem 1rem;\n  height: max-content;\n  padding: 2rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 6px double var(--secondary-color);\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.login .link {\n  margin-top: 0.5rem;\n  text-align: center;\n}\n\n.login .loading {\n  color: var(--secondary-color);\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n}\n\n.login .loading-img {\n  width: 1.5rem;\n}\n\n@media (max-height: 575px) {\n  .login {\n    margin: 1rem;\n  }\n}\n\n@media (max-width: 450px) {\n  .login {\n    margin: 0.25rem;\n    padding: 0.5rem;\n  }\n}\n"],sourceRoot:""}]);const A=i},607:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".settings {\n  position: absolute;\n  z-index: 1;\n  min-height: 100vh;\n  width: 100%;\n  padding: 2rem;\n  background-color: rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: center;\n  align-items: start;\n}\n\n.settings form {\n  background-color: white;\n  margin: 4rem 0;\n  min-width: 45vw;\n  padding: 0.5rem 0.5rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n}\n\n.settings .hide {\n  justify-self: end;\n  padding: 0.25rem;\n  height: 2rem;\n  width: 2rem;\n  font-weight: 900;\n}\n\n@media (max-width: 515px) {\n  .settings form {\n    margin: 0;\n  }\n}\n\n@media (max-width: 375px) {\n  .settings {\n    padding: 1rem;\n    justify-content: stretch;\n  }\n\n  .settings form {\n    width: 100%;\n  }\n\n  .settings select {\n    min-width: 16rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/settings-view.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,UAAU;EACV,iBAAiB;EACjB,WAAW;EACX,aAAa;EACb,qCAAqC;EACrC,aAAa;EACb,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,cAAc;EACd,eAAe;EACf,6BAA6B;EAC7B,qBAAqB;EACrB,wCAAwC;AAC1C;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE;IACE,SAAS;EACX;AACF;;AAEA;EACE;IACE,aAAa;IACb,wBAAwB;EAC1B;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,gBAAgB;EAClB;AACF",sourcesContent:[".settings {\n  position: absolute;\n  z-index: 1;\n  min-height: 100vh;\n  width: 100%;\n  padding: 2rem;\n  background-color: rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: center;\n  align-items: start;\n}\n\n.settings form {\n  background-color: white;\n  margin: 4rem 0;\n  min-width: 45vw;\n  padding: 0.5rem 0.5rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n}\n\n.settings .hide {\n  justify-self: end;\n  padding: 0.25rem;\n  height: 2rem;\n  width: 2rem;\n  font-weight: 900;\n}\n\n@media (max-width: 515px) {\n  .settings form {\n    margin: 0;\n  }\n}\n\n@media (max-width: 375px) {\n  .settings {\n    padding: 1rem;\n    justify-content: stretch;\n  }\n\n  .settings form {\n    width: 100%;\n  }\n\n  .settings select {\n    min-width: 16rem;\n  }\n}\n"],sourceRoot:""}]);const A=i},67:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".weather {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n.weather > * {\n  padding: 1rem;\n  border-radius: 0.2rem;\n  border: 6px double var(--secondary-color);\n}\n\n.weather > form.search {\n  padding: 1.5rem 1rem;\n  width: 100vw;\n  border-radius: 0;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  box-shadow: 0 0 10px var(--box-shadow-color);\n  grid-template: 1.2rem 2rem max-content / repeat(3, max-content);\n  column-gap: 0.5rem;\n  row-gap: 0;\n  justify-content: center;\n  align-items: stretch;\n}\n\n.weather form.search .field {\n  grid-row: 1 / span 3;\n}\n\n.weather form.search input {\n  height: 2rem;\n}\n\n.weather form.search button {\n  padding: 0.25rem 0.5rem;\n}\n\n.weather form.search button[type=\"submit\"] {\n  grid-row: 2;\n  grid-column: 2;\n}\n\n.weather form.search button.show-settings {\n  grid-row: 2;\n  grid-column: 3;\n}\n\n.weather > .loading.loading {\n  border: none;\n  background-color: transparent;\n  color: var(--secondary-color);\n  margin-top: 5rem;\n  font-size: 3rem;\n  display: flex;\n  gap: 0.5rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .loading-img {\n  width: 5rem;\n}\n\n.weather .weather-body {\n  max-width: 95vw;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  box-shadow: 0 0 10px var(--box-shadow-color);\n}\n\n.weather .weather-body .main {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n  justify-content: center;\n  font-weight: 800;\n}\n\n.weather .weather-body .main-img-container {\n  max-width: 45vw;\n  height: 30vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .weather-body .main-img {\n  border-radius: 0.2rem;\n  object-fit: cover;\n  max-width: 45vw;\n  height: 30vh;\n}\n\n.weather .weather-body .main-info {\n  font-size: 3rem;\n  text-align: center;\n}\n\n.weather .weather-body .details {\n  display: grid;\n  grid-template: repeat(2, max-content) / repeat(2, max-content);\n  justify-content: space-evenly;\n  column-gap: 1rem;\n}\n\n.weather .weather-body .temperatures {\n  grid-row: 1 / span 2;\n}\n\n.weather[data-weather='Sunny'] > * {\n  background-color: var(--sunny-color);\n  color: var(--sunny-font-color);\n  border-color: var(--sunny-font-color);\n}\n\n.weather[data-weather='Sunny'] button:not(:hover) {\n  background-color: var(--sunny-font-color);\n  color: var(--sunny-color);\n}\n\n.weather[data-weather='Clouds']>* {\n  background-color: var(--cloud-color);\n  color: var(--cloud-font-color);\n  border-color: var(--cloud-font-color);\n}\n\n.weather[data-weather='Clouds'] button:not(:hover) {\n  background-color: var(--cloud-font-color);\n  color: var(--cloud-color);\n}\n\n.weather[data-weather='Foggy'] > *,\n.weather[data-weather='Dusty'] > * {\n  background-color: var(--lowVis-color);\n  color: var(--lowVis-font-color);\n  border-color: var(--lowVis-font-color);\n}\n\n.weather[data-weather='Foggy'] button:not(:hover),\n.weather[data-weather='Dusty'] button:not(:hover) {\n  background-color: var(--lowVis-font-color);\n  color: var(--lowVis-color);\n}\n\n.weather[data-weather='Rain'] > * {\n  background-color: var(--rain-color);\n  color: var(--rain-font-color);\n  border-color: var(--rain-font-color);\n}\n\n.weather[data-weather='Rain'] button:not(:hover) {\n  background-color: var(--rain-font-color);\n  color: var(--rain-color);\n}\n\n.weather[data-weather='Snow'] > * {\n  background-color: var(--snow-color);\n  color: var(--snow-font-color);\n  border-color: var(--snow-font-color);\n}\n\n.weather[data-weather='Snow'] button:not(:hover) {\n  background-color: var(--snow-font-color);\n  color: var(--snow-color);\n}\n\n.weather[data-weather='Thunderstorm'] > * {\n  background-color: var(--thunder-color);\n  color: var(--thunder-font-color);\n  border-color: var(--thunder-font-color);\n}\n\n.weather[data-weather='Thunderstorm'] button:not(:hover) {\n  background-color: var(--thunder-font-color);\n  color: var(--thunder-color);\n}\n\n@media (max-width: 575px) {\n  .weather {\n    padding: 0.5rem;\n    gap: 0.5rem;\n    align-items: stretch;\n  }\n\n  .weather .weather-body {\n    gap: 0.5rem;\n  }\n\n  .weather .weather-body .main {\n    gap: 1rem;\n    justify-content: space-evenly;\n  }\n}\n\n@media (max-width: 515px) {\n  .weather form.search {\n    column-gap: 0.25rem;\n    grid-template: 1.2rem 2rem max-content / 1fr max-content max-content;\n    justify-items: stretch;\n  }\n\n  .weather form.search input {\n    min-width: 14rem;\n  }\n\n  .weather form.search button[type=\"submit\"],\n  .weather form.search button.show-settings {\n    padding: 0.25rem;\n    display: flex;\n    align-items: center;\n  }\n\n  .weather .weather-body .main-info {\n    font-size: 1.5rem;\n  }\n\n  /*\n  .weather .weather-body .main-img-container {\n    width: 40vw;\n  }\n\n  .weather .weather-body .main-img {\n    width: 40vw;\n  }\n  */\n\n  .weather .weather-body .details {\n    grid-template: repeat(3, max-content) / max-content;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/weather-view.css"],names:[],mappings:"AAAA;EACE,iBAAiB;EACjB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,yCAAyC;AAC3C;;AAEA;EACE,oBAAoB;EACpB,YAAY;EACZ,gBAAgB;EAChB,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,4CAA4C;EAC5C,+DAA+D;EAC/D,kBAAkB;EAClB,UAAU;EACV,uBAAuB;EACvB,oBAAoB;AACtB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,6BAA6B;EAC7B,6BAA6B;EAC7B,gBAAgB;EAChB,eAAe;EACf,aAAa;EACb,WAAW;EACX,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,4CAA4C;AAC9C;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,uBAAuB;EACvB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,iBAAiB;EACjB,eAAe;EACf,YAAY;AACd;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8DAA8D;EAC9D,6BAA6B;EAC7B,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,oCAAoC;EACpC,8BAA8B;EAC9B,qCAAqC;AACvC;;AAEA;EACE,yCAAyC;EACzC,yBAAyB;AAC3B;;AAEA;EACE,oCAAoC;EACpC,8BAA8B;EAC9B,qCAAqC;AACvC;;AAEA;EACE,yCAAyC;EACzC,yBAAyB;AAC3B;;AAEA;;EAEE,qCAAqC;EACrC,+BAA+B;EAC/B,sCAAsC;AACxC;;AAEA;;EAEE,0CAA0C;EAC1C,0BAA0B;AAC5B;;AAEA;EACE,mCAAmC;EACnC,6BAA6B;EAC7B,oCAAoC;AACtC;;AAEA;EACE,wCAAwC;EACxC,wBAAwB;AAC1B;;AAEA;EACE,mCAAmC;EACnC,6BAA6B;EAC7B,oCAAoC;AACtC;;AAEA;EACE,wCAAwC;EACxC,wBAAwB;AAC1B;;AAEA;EACE,sCAAsC;EACtC,gCAAgC;EAChC,uCAAuC;AACzC;;AAEA;EACE,2CAA2C;EAC3C,2BAA2B;AAC7B;;AAEA;EACE;IACE,eAAe;IACf,WAAW;IACX,oBAAoB;EACtB;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,SAAS;IACT,6BAA6B;EAC/B;AACF;;AAEA;EACE;IACE,mBAAmB;IACnB,oEAAoE;IACpE,sBAAsB;EACxB;;EAEA;IACE,gBAAgB;EAClB;;EAEA;;IAEE,gBAAgB;IAChB,aAAa;IACb,mBAAmB;EACrB;;EAEA;IACE,iBAAiB;EACnB;;EAEA;;;;;;;;GAQC;;EAED;IACE,mDAAmD;EACrD;AACF",sourcesContent:[".weather {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n.weather > * {\n  padding: 1rem;\n  border-radius: 0.2rem;\n  border: 6px double var(--secondary-color);\n}\n\n.weather > form.search {\n  padding: 1.5rem 1rem;\n  width: 100vw;\n  border-radius: 0;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  box-shadow: 0 0 10px var(--box-shadow-color);\n  grid-template: 1.2rem 2rem max-content / repeat(3, max-content);\n  column-gap: 0.5rem;\n  row-gap: 0;\n  justify-content: center;\n  align-items: stretch;\n}\n\n.weather form.search .field {\n  grid-row: 1 / span 3;\n}\n\n.weather form.search input {\n  height: 2rem;\n}\n\n.weather form.search button {\n  padding: 0.25rem 0.5rem;\n}\n\n.weather form.search button[type=\"submit\"] {\n  grid-row: 2;\n  grid-column: 2;\n}\n\n.weather form.search button.show-settings {\n  grid-row: 2;\n  grid-column: 3;\n}\n\n.weather > .loading.loading {\n  border: none;\n  background-color: transparent;\n  color: var(--secondary-color);\n  margin-top: 5rem;\n  font-size: 3rem;\n  display: flex;\n  gap: 0.5rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .loading-img {\n  width: 5rem;\n}\n\n.weather .weather-body {\n  max-width: 95vw;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  box-shadow: 0 0 10px var(--box-shadow-color);\n}\n\n.weather .weather-body .main {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n  justify-content: center;\n  font-weight: 800;\n}\n\n.weather .weather-body .main-img-container {\n  max-width: 45vw;\n  height: 30vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .weather-body .main-img {\n  border-radius: 0.2rem;\n  object-fit: cover;\n  max-width: 45vw;\n  height: 30vh;\n}\n\n.weather .weather-body .main-info {\n  font-size: 3rem;\n  text-align: center;\n}\n\n.weather .weather-body .details {\n  display: grid;\n  grid-template: repeat(2, max-content) / repeat(2, max-content);\n  justify-content: space-evenly;\n  column-gap: 1rem;\n}\n\n.weather .weather-body .temperatures {\n  grid-row: 1 / span 2;\n}\n\n.weather[data-weather='Sunny'] > * {\n  background-color: var(--sunny-color);\n  color: var(--sunny-font-color);\n  border-color: var(--sunny-font-color);\n}\n\n.weather[data-weather='Sunny'] button:not(:hover) {\n  background-color: var(--sunny-font-color);\n  color: var(--sunny-color);\n}\n\n.weather[data-weather='Clouds']>* {\n  background-color: var(--cloud-color);\n  color: var(--cloud-font-color);\n  border-color: var(--cloud-font-color);\n}\n\n.weather[data-weather='Clouds'] button:not(:hover) {\n  background-color: var(--cloud-font-color);\n  color: var(--cloud-color);\n}\n\n.weather[data-weather='Foggy'] > *,\n.weather[data-weather='Dusty'] > * {\n  background-color: var(--lowVis-color);\n  color: var(--lowVis-font-color);\n  border-color: var(--lowVis-font-color);\n}\n\n.weather[data-weather='Foggy'] button:not(:hover),\n.weather[data-weather='Dusty'] button:not(:hover) {\n  background-color: var(--lowVis-font-color);\n  color: var(--lowVis-color);\n}\n\n.weather[data-weather='Rain'] > * {\n  background-color: var(--rain-color);\n  color: var(--rain-font-color);\n  border-color: var(--rain-font-color);\n}\n\n.weather[data-weather='Rain'] button:not(:hover) {\n  background-color: var(--rain-font-color);\n  color: var(--rain-color);\n}\n\n.weather[data-weather='Snow'] > * {\n  background-color: var(--snow-color);\n  color: var(--snow-font-color);\n  border-color: var(--snow-font-color);\n}\n\n.weather[data-weather='Snow'] button:not(:hover) {\n  background-color: var(--snow-font-color);\n  color: var(--snow-color);\n}\n\n.weather[data-weather='Thunderstorm'] > * {\n  background-color: var(--thunder-color);\n  color: var(--thunder-font-color);\n  border-color: var(--thunder-font-color);\n}\n\n.weather[data-weather='Thunderstorm'] button:not(:hover) {\n  background-color: var(--thunder-font-color);\n  color: var(--thunder-color);\n}\n\n@media (max-width: 575px) {\n  .weather {\n    padding: 0.5rem;\n    gap: 0.5rem;\n    align-items: stretch;\n  }\n\n  .weather .weather-body {\n    gap: 0.5rem;\n  }\n\n  .weather .weather-body .main {\n    gap: 1rem;\n    justify-content: space-evenly;\n  }\n}\n\n@media (max-width: 515px) {\n  .weather form.search {\n    column-gap: 0.25rem;\n    grid-template: 1.2rem 2rem max-content / 1fr max-content max-content;\n    justify-items: stretch;\n  }\n\n  .weather form.search input {\n    min-width: 14rem;\n  }\n\n  .weather form.search button[type=\"submit\"],\n  .weather form.search button.show-settings {\n    padding: 0.25rem;\n    display: flex;\n    align-items: center;\n  }\n\n  .weather .weather-body .main-info {\n    font-size: 1.5rem;\n  }\n\n  /*\n  .weather .weather-body .main-img-container {\n    width: 40vw;\n  }\n\n  .weather .weather-body .main-img {\n    width: 40vw;\n  }\n  */\n\n  .weather .weather-body .details {\n    grid-template: repeat(3, max-content) / max-content;\n  }\n}\n"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),r&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=r):d[2]=r),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=t.base?c[0]+t.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var u=r(l),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var h=o(m,t);t.byIndex=A,e.splice(A,0,{identifier:l,updater:h,references:1})}i.push(l)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=r(a[i]);e[A].references--}for(var c=t(n,o),s=0;s<a.length;s++){var d=r(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.nc=void 0;var t={};(()=>{r.d(t,{S:()=>Q}),r.p;const n=r.p+"c7576af9857e0429a475.svg",e=r.p+"23c0bc44e1d51ac1497b.svg",o=r.p+"a7dbc20f5847419b1f94.svg",a=r.p+"844f95577173a5fddf4c.svg";var i=r(379),A=r.n(i),c=r(795),s=r.n(c),d=r(569),l=r.n(d),u=r(565),m=r.n(u),h=r(216),C=r.n(h),w=r(589),g=r.n(w),E=r(689),f={};f.styleTagTransform=g(),f.setAttributes=m(),f.insert=l().bind(null,"head"),f.domAPI=s(),f.insertStyleElement=C(),A()(E.Z,f),E.Z&&E.Z.locals&&E.Z.locals;var p=r(713),y={};y.styleTagTransform=g(),y.setAttributes=m(),y.insert=l().bind(null,"head"),y.domAPI=s(),y.insertStyleElement=C(),A()(p.Z,y),p.Z&&p.Z.locals&&p.Z.locals;var B=r(176),b={};b.styleTagTransform=g(),b.setAttributes=m(),b.insert=l().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=C(),A()(B.Z,b),B.Z&&B.Z.locals&&B.Z.locals;var v=r(607),x={};x.styleTagTransform=g(),x.setAttributes=m(),x.insert=l().bind(null,"head"),x.domAPI=s(),x.insertStyleElement=C(),A()(v.Z,x),v.Z&&v.Z.locals&&v.Z.locals;var S=r(67),k={};k.styleTagTransform=g(),k.setAttributes=m(),k.insert=l().bind(null,"head"),k.domAPI=s(),k.insertStyleElement=C(),A()(S.Z,k),S.Z&&S.Z.locals&&S.Z.locals;const q={},j={temp:1,speed:1,time:1},I=["K","°F","°C"],L=["meter,second","mile,hour"],Z=["hr24","hr12"];async function T(n,e=q.openWeatherMap){const r=function(n){return n.replace(" ","+")}(n),t=await fetch(`https://api.openweathermap.org/data/2.5/weather?appid=${e}&q=${r}`);if(401===t.status)throw new Error("Invalid API Key");if(404===t.status)throw new Error("City not found");const{name:o,main:{feels_like:a,temp:i,temp_max:A,temp_min:c},sys:{country:s,sunrise:d,sunset:l},timezone:u,weather:[{main:m,description:h}],wind:{deg:C,speed:w}}=await t.json();return{name:o,country:s,weather:h,weatherKeyword:"Atmosphere"===m?h:m,temp:i,tempMin:c,tempMax:A,tempFeels:a,windSpeed:w,windDirection:C,sunrise:d,sunset:l,timeZoneOffset:u}}function D(n,e){return Number(n).toFixed(e)}function z(n){return n.split(" ").map((n=>n[0].toUpperCase()+n.slice(1))).join(" ")}function W(n){return D(n,0)}function F(n){return W(n-273.15)}function $(n){return W(n+273.15)}function M(n){return W(5/9*(n-32))}function V(n){return W(1.8*n+32)}function Y(n){return W(V(F(n)))}function N(n){return W($(M(n)))}function R(n){return D(n,2)}function P(n){return R(2.237*n)}function K(n){return R(n/2.237)}function U(n){return String(n).padStart(2,"0")}function O(n){const[e,r]=n.split(":");return`${Number(e)}:${r}`}function X(n){const[e,r]=n.split(":").map(Number);let[t,o]=e<=11?["AM",0]:["PM",1];return 0===e&&(o+=12),`${e%13+o}:${U(r)} ${t}`}function H(n){const[e,r]=n.split(" "),[t,o]=e.split(":").map(Number);let a="PM"===r?12:0;return 12===t&&"AM"===r&&(a-=12),`${t+a}:${U(o)}`}function _(n,e){const r=Number(n)+Number(e);return O(new Date(1e3*r).toISOString().slice(11,16))}function J(n,e){return X(_(n,e))}const G={body:{},error:""},Q=G;function nn(n,e){["temp","tempMax","tempMin","tempFeels"].forEach((r=>{const t=n[r];t&&(n[r]=function(n,e,r=I[j.temp]){const t="number"==typeof n?n:Number(n.match(/\d+(\.\d+)?/)[0]);return({"K-°F":Y,"K-°C":F,"°F-K":N,"°F-°C":M,"°C-K":$,"°C-°F":V}[`${e}-${r}`]||(n=>n))(t)+r}(t,e))}))}function en(n,e){["sunrise","sunset"].forEach((r=>{const t=n[r];t&&(n[r]=function(n,e,r,t=Z[j.time]){return({"unix-hr24":_,"unix-hr12":J,"hr24-hr12":X,"hr12-hr24":H}[`${r}-${t}`]||O)(n,e)}(t,n.timeZoneOffset||0,e))}))}function rn(n,e){const r=n.windSpeed;r&&(n.windSpeed=function(n,e,r=L[j.speed]){const t="number"==typeof n?n:Number(n.match(/\d+(\.\d+)?/)[0]),o=({"meter,second-mile,hour":P,"mile,hour-meter,second":K}[`${e}-${r}`]||(n=>n))(t),a=r.split(",");return`${o} ${a[0]}${1===o?"":"s"} per ${a[1]}`}(r,e))}async function tn(n,e=T){G.error="";try{const r=await e(n);!function(n){(function(n){!function(n){const e=n.weather;e&&(n.weather=z(e))}(n),function(n){const e=Object.entries({Sunny:["Clear","Clear Sky","Sunny","Sun"],Rain:["Rain","Drizzle","Shower"],Clouds:["Cloud"],Foggy:["Haze","Mist","Smoke","Fog"],Dusty:["Dust","Ash","Sand"],Snow:["Snow","Sleet","Hail"],Thunderstorm:["Thunder","Thunderstorm","Lightning"]});let r=n.weatherKeyword;if(r){r=z(r),n.weatherKeyword=r;for(let t=0;t<e.length;t+=1){const[o,a]=e[t];if(a.some((n=>r.includes(n))))return void(n.weatherKeyword=o)}}}(n)})(n),nn(n,"K"),en(n,"unix"),rn(n,"meter,second"),function(n){const e=n.windDirection;e&&(n.windDirection=function(n){const e=n-22.5;return["N","NE","E","SE","S","SW","W","NW"][e>0&&e<315?Math.ceil(e/45):0]}(e))}(n)}(r),G.body=r}catch(n){G.error=n.message}return G}const on=document.querySelector(".login"),an=document.querySelector(".login form"),An=document.querySelector('.login form button[type="submit"]'),cn=document.querySelector(".login .loading"),sn=document.querySelector(".weather"),dn=document.querySelector(".weather form.search"),ln=document.querySelector(".weather .error"),un=document.querySelector('.weather form.search button[type="submit"]'),mn=document.querySelector(".weather .loading"),hn=document.querySelector(".weather .weather-body"),Cn=document.querySelector("button.show-settings"),wn=document.querySelector(".settings"),gn=document.querySelector(".settings form"),En=document.querySelector(".settings .hide"),fn=document.querySelector(".weather .city"),pn=document.querySelector(".weather .country"),yn=document.querySelector(".weather .main-temperature"),Bn=document.querySelector(".weather .main-img"),bn=document.querySelector(".weather .main-img-container .loading-img"),vn=document.querySelector(".weather .main-weather"),xn=document.querySelector(".weather .feels-temperature"),Sn=document.querySelector(".weather .min-temperature"),kn=document.querySelector(".weather .max-temperature"),qn=document.querySelector(".weather .wind-speed"),jn=document.querySelector(".weather .wind-direction"),In=document.querySelector(".weather .sunrise"),Ln=document.querySelector(".weather .sunset");async function Zn(n,e=q.giphy){const r=await fetch(`https://api.giphy.com/v1/gifs/translate?api_key=${e}&s=${n}`);if(401===r.status)throw new Error("Invalid API Key");return(await r.json()).data.images.original.url}async function Tn(n){const e=n.querySelectorAll(".error"),r=[...n.querySelectorAll("input")];return function(n,e){n.forEach((n=>n.setCustomValidity(""))),e.forEach((n=>{n.textContent="",n.classList.add("hidden")}))}(r,e),await Promise.all(r.map((n=>n.id.includes("api-key")?async function(n){if(!n.checkValidity())return;const[e,r]={"open-weather-map":[T,["New York"]],giphy:[Zn,["cats"]]}[n.id.replace("-api-key","")];if(e)try{await e(...r,n.value)}catch(e){n.setCustomValidity(e.message)}}(n):Promise.resolve()))),r.forEach((e=>{if(!e.checkValidity()){const r=n.querySelector(`#${e.id}+.error`);r.textContent=e.validationMessage,r.classList.remove("hidden")}})),n.checkValidity()}const Dn={url:"#"},zn=Dn,Wn=[{name:"get-weather",regular:n,alternate:o,hover:o},{name:"show-settings",regular:e,alternate:a,hover:a}];function Fn(n,e=function(n){const e=n.closest(".weather").dataset.weather;return["Foggy","Dusty","Thunderstorm"].includes(e)?"alternate":"regular"}(n)){n.querySelector(".icon").src=Wn.find((({name:e})=>n.classList.contains(e)))[e]}function $n(){mn.classList.remove("hidden"),hn.classList.add("hidden")}function Mn(){mn.classList.add("hidden"),hn.classList.remove("hidden")}function Vn(){on.classList.add("hidden"),wn.classList.add("hidden"),sn.classList.remove("hidden"),ln.textContent="",ln.classList.add("hidden"),Mn()}function Yn({withImage:n=!0}={}){if(Vn(),Q.error)return ln.textContent=Q.error,void ln.classList.remove("hidden");var e;e=Q.body,sn.dataset.weather=e.weatherKeyword,fn.textContent=e.name,pn.textContent=e.country,yn.textContent=e.temp,vn.textContent=e.weather,xn.textContent=e.tempFeels,Sn.textContent=e.tempMin,kn.textContent=e.tempMax,qn.textContent=e.windSpeed,jn.textContent=e.windDirection,In.textContent=e.sunrise,Ln.textContent=e.sunset,[un,Cn].forEach((n=>Fn(n))),n&&async function(n){bn.classList.remove("hidden"),Bn.classList.add("hidden"),await async function(n,e=Zn){try{Dn.url=await e(n)}catch(n){Dn.url="#"}return Dn}(n.weatherKeyword),Bn.src=zn.url}(Q.body)}function Nn(){[un,Cn].forEach((n=>{n.querySelector(".text").classList.add("hidden"),n.querySelector(".icon").classList.remove("hidden")}))}function Rn(){[un,Cn].forEach((n=>{n.querySelector(".text").classList.remove("hidden"),n.querySelector(".icon").classList.add("hidden")}))}function Pn(){(window.innerWidth<=515?Nn:Rn)()}function Kn(n){Fn(n.target.closest("button"))}function Un(n){Fn(n.target.closest("button"),"hover")}an.addEventListener("submit",(async function(n){if(n.preventDefault(),cn.classList.remove("hidden"),An.classList.add("hidden"),!await Tn(an))return on.classList.remove("hidden"),An.classList.remove("hidden"),void cn.classList.add("hidden");var e;e={openWeatherMap:an.querySelector("#open-weather-map-api-key").value,giphy:an.querySelector("#giphy-api-key").value},Object.assign(q,e),Vn(),$n(),await tn("New York City"),Yn()})),dn.addEventListener("submit",(async function(n){if(n.preventDefault(),$n(),!await Tn(dn))return Mn();await tn(dn.querySelector("#location").value),Yn()})),Cn.addEventListener("click",(function(n){n.preventDefault(),wn.classList.remove("hidden")})),gn.addEventListener("submit",(async function(n){if(n.preventDefault(),!await Tn(gn))return;const e={...j};var r;r=Object.fromEntries(new FormData(gn).entries()),Object.keys(r).forEach((n=>{j[n]=+r[n]})),function(n){const e=G.body;nn(e,I[n.temp]),en(e,Z[n.time]),rn(e,L[n.speed])}(e),Yn({withImage:!1})})),En.addEventListener("click",(function(n){n.preventDefault(),Vn()})),window.addEventListener("load",Pn),window.addEventListener("resize",Pn),[un,Cn].forEach((n=>{n.addEventListener("mouseover",Un),n.addEventListener("mouseout",Kn)})),Bn.addEventListener("load",(function(){bn.classList.add("hidden"),Bn.classList.remove("hidden")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,