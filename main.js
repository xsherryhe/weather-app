(()=>{"use strict";var n={689:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,":root {\n  --site-font: 'Helvetica', sans-serif;\n  --background-color: rgb(255, 255, 165);\n  --secondary-color: rgb(0, 70, 162);\n  --light-secondary-color: rgb(200, 224, 255);\n  --sunny-color: rgb(255, 255, 165);\n  --sunny-font-color: black;\n  --cloud-color: rgb(165, 204, 255);\n  --cloud-font-color: black;\n  --lowVis-color: rgb(70, 70, 70);\n  --lowVis-font-color: white;\n  --rain-color: rgb(0, 70, 162);\n  --rain-font-color: rgb(200, 224, 255);\n  --snow-color: white;\n  --snow-font-color: black;\n  --thunder-color: black;\n  --thunder-font-color: yellow;\n}\n\nhtml {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: var(--site-font);\n  min-height: 100vh;\n  background-color: var(--sunny-color);\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\na {\n  color: var(--secondary-color);\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\nbutton {\n  font-size: 1rem;\n  padding: 0.5rem 1.5rem;\n  cursor: pointer;\n  background-color: var(--secondary-color);\n  color: white;\n  border-radius: 0.2rem;\n}\n\nbutton:hover {\n  background-color: var(--light-secondary-color);\n  color: black;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.error {\n  color: red;\n}\n\n.icon {\n  width: 1.25rem;\n}\n\n@media (max-width: 575px) {\n  html {\n    font-size: 16px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/all.css"],names:[],mappings:"AAAA;EACE,oCAAoC;EACpC,sCAAsC;EACtC,kCAAkC;EAClC,2CAA2C;EAC3C,iCAAiC;EACjC,yBAAyB;EACzB,iCAAiC;EACjC,yBAAyB;EACzB,+BAA+B;EAC/B,0BAA0B;EAC1B,6BAA6B;EAC7B,qCAAqC;EACrC,mBAAmB;EACnB,wBAAwB;EACxB,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,6BAA6B;EAC7B,iBAAiB;EACjB,oCAAoC;EACpC,SAAS;EACT,UAAU;EACV,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,6BAA6B;EAC7B,qBAAqB;AACvB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,eAAe;EACf,sBAAsB;EACtB,eAAe;EACf,wCAAwC;EACxC,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,8CAA8C;EAC9C,YAAY;AACd;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE;IACE,eAAe;EACjB;AACF",sourcesContent:[":root {\n  --site-font: 'Helvetica', sans-serif;\n  --background-color: rgb(255, 255, 165);\n  --secondary-color: rgb(0, 70, 162);\n  --light-secondary-color: rgb(200, 224, 255);\n  --sunny-color: rgb(255, 255, 165);\n  --sunny-font-color: black;\n  --cloud-color: rgb(165, 204, 255);\n  --cloud-font-color: black;\n  --lowVis-color: rgb(70, 70, 70);\n  --lowVis-font-color: white;\n  --rain-color: rgb(0, 70, 162);\n  --rain-font-color: rgb(200, 224, 255);\n  --snow-color: white;\n  --snow-font-color: black;\n  --thunder-color: black;\n  --thunder-font-color: yellow;\n}\n\nhtml {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: var(--site-font);\n  min-height: 100vh;\n  background-color: var(--sunny-color);\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\na {\n  color: var(--secondary-color);\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\nbutton {\n  font-size: 1rem;\n  padding: 0.5rem 1.5rem;\n  cursor: pointer;\n  background-color: var(--secondary-color);\n  color: white;\n  border-radius: 0.2rem;\n}\n\nbutton:hover {\n  background-color: var(--light-secondary-color);\n  color: black;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.error {\n  color: red;\n}\n\n.icon {\n  width: 1.25rem;\n}\n\n@media (max-width: 575px) {\n  html {\n    font-size: 16px;\n  }\n}\n"],sourceRoot:""}]);const A=i},713:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"form {\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  row-gap: 1rem;\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n  gap: 0.1rem;\n}\n\ninput, select {\n  min-width: 18rem;\n  min-height: 1rem;\n  padding: 0.25rem;\n  font-size: 1rem;\n}\n\nselect {\n  cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/styles/form.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,qBAAqB;EACrB,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB",sourcesContent:["form {\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  row-gap: 1rem;\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n  gap: 0.1rem;\n}\n\ninput, select {\n  min-width: 18rem;\n  min-height: 1rem;\n  padding: 0.25rem;\n  font-size: 1rem;\n}\n\nselect {\n  cursor: pointer;\n}\n"],sourceRoot:""}]);const A=i},176:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".login {\n  margin: 4rem 1rem;\n  height: max-content;\n  padding: 2rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.login .link {\n  margin-top: 0.5rem;\n  text-align: center;\n}\n\n.login .loading {\n  color: var(--secondary-color);\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n}\n\n.login .loading-img {\n  width: 1.5rem;\n}\n\n@media (max-height: 575px) {\n  .login {\n    margin: 1rem;\n  }\n}\n\n@media (max-width: 450px) {\n  .login {\n    margin: 0.25rem;\n    padding: 0.5rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/login-view.css"],names:[],mappings:"AAAA;EACE,iBAAiB;EACjB,mBAAmB;EACnB,oBAAoB;EACpB,qBAAqB;EACrB,wCAAwC;EACxC,uBAAuB;EACvB,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;EAC7B,aAAa;EACb,WAAW;EACX,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,eAAe;IACf,eAAe;EACjB;AACF",sourcesContent:[".login {\n  margin: 4rem 1rem;\n  height: max-content;\n  padding: 2rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.login .link {\n  margin-top: 0.5rem;\n  text-align: center;\n}\n\n.login .loading {\n  color: var(--secondary-color);\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n}\n\n.login .loading-img {\n  width: 1.5rem;\n}\n\n@media (max-height: 575px) {\n  .login {\n    margin: 1rem;\n  }\n}\n\n@media (max-width: 450px) {\n  .login {\n    margin: 0.25rem;\n    padding: 0.5rem;\n  }\n}\n"],sourceRoot:""}]);const A=i},607:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".settings {\n  position: absolute;\n  z-index: 1;\n  min-height: 100vh;\n  width: 100%;\n  padding: 2rem;\n  background-color: rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: center;\n  align-items: start;\n}\n\n.settings form {\n  background-color: white;\n  margin: 4rem 0;\n  min-width: 45vw;\n  padding: 0.5rem 0.5rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n}\n\n.settings .hide {\n  justify-self: end;\n  padding: 0.25rem;\n  height: 2rem;\n  width: 2rem;\n  font-weight: 900;\n}\n\n@media (max-width: 515px) {\n  .settings form {\n    margin: 0;\n  }\n}\n\n@media (max-width: 375px) {\n  .settings {\n    padding: 1rem;\n    justify-content: stretch;\n  }\n\n  .settings form {\n    width: 100%;\n  }\n\n  .settings select {\n    min-width: 16rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/settings-view.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,UAAU;EACV,iBAAiB;EACjB,WAAW;EACX,aAAa;EACb,qCAAqC;EACrC,aAAa;EACb,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,cAAc;EACd,eAAe;EACf,6BAA6B;EAC7B,qBAAqB;EACrB,wCAAwC;AAC1C;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE;IACE,SAAS;EACX;AACF;;AAEA;EACE;IACE,aAAa;IACb,wBAAwB;EAC1B;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,gBAAgB;EAClB;AACF",sourcesContent:[".settings {\n  position: absolute;\n  z-index: 1;\n  min-height: 100vh;\n  width: 100%;\n  padding: 2rem;\n  background-color: rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: center;\n  align-items: start;\n}\n\n.settings form {\n  background-color: white;\n  margin: 4rem 0;\n  min-width: 45vw;\n  padding: 0.5rem 0.5rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n}\n\n.settings .hide {\n  justify-self: end;\n  padding: 0.25rem;\n  height: 2rem;\n  width: 2rem;\n  font-weight: 900;\n}\n\n@media (max-width: 515px) {\n  .settings form {\n    margin: 0;\n  }\n}\n\n@media (max-width: 375px) {\n  .settings {\n    padding: 1rem;\n    justify-content: stretch;\n  }\n\n  .settings form {\n    width: 100%;\n  }\n\n  .settings select {\n    min-width: 16rem;\n  }\n}\n"],sourceRoot:""}]);const A=i},67:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".weather {\n  align-self: stretch;\n  min-height: 100vh;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n.weather form.search {\n  grid-template: 1.2rem 2rem max-content / repeat(3, max-content);\n  column-gap: 0.5rem;\n  row-gap: 0;\n}\n\n.weather form.search .field {\n  grid-row: 1 / span 3;\n}\n\n.weather form.search input {\n  height: 2rem;\n}\n\n.weather form.search button {\n  padding: 0.25rem 0.5rem;\n}\n\n.weather form.search button[type=\"submit\"] {\n  grid-row: 2;\n  grid-column: 2;\n}\n\n.weather form.search button.show-settings {\n  grid-row: 2;\n  grid-column: 3;\n}\n\n.weather .loading {\n  margin-top: 5rem;\n  color: var(--secondary-color);\n  font-size: 3rem;\n  display: flex;\n  gap: 0.5rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .loading-img {\n  width: 5rem;\n}\n\n.weather .weather-body {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.weather .weather-body .main {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n  justify-content: space-between;\n}\n\n.weather .weather-body .main-img-container {\n  width: 30vw;\n  height: 30vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .weather-body .main-img {\n  object-fit: cover;\n  width: 30vw;\n  height: 30vh;\n}\n\n.weather .weather-body .main-info {\n  font-size: 3rem;\n  text-align: center;\n}\n\n.weather .weather-body .details {\n  display: grid;\n  grid-template: repeat(2, max-content) / repeat(2, max-content);\n  justify-content: space-evenly;\n  column-gap: 1rem;\n}\n\n.weather .weather-body .temperatures {\n  grid-row: 1 / span 2;\n}\n\n.weather[data-weather='Sunny'] {\n  background-color: var(--sunny-color);\n  color: var(--sunny-font-color);\n}\n\n.weather[data-weather='Clouds'] {\n  background-color: var(--cloud-color);\n  color: var(--cloud-font-color);\n}\n\n.weather[data-weather='Foggy'],\n.weather[data-weather='Dusty'] {\n  background-color: var(--lowVis-color);\n  color: var(--lowVis-font-color);\n}\n\n.weather[data-weather='Rain'] {\n  background-color: var(--rain-color);\n  color: var(--rain-font-color);\n}\n\n.weather[data-weather='Snow'] {\n  background-color: var(--snow-color);\n  color: var(--snow-font-color);\n}\n\n.weather[data-weather='Thunderstorm'] {\n  background-color: var(--thunder-color);\n  color: var(--thunder-font-color);\n}\n\n@media (max-width: 575px) {\n  .weather {\n    padding: 0.5rem;\n    gap: 0.5rem;\n    align-items: stretch;\n  }\n\n  .weather .weather-body {\n    gap: 0.5rem;\n  }\n\n  .weather .weather-body .main {\n    gap: 1rem;\n    justify-content: space-evenly;\n  }\n}\n\n@media (max-width: 515px) {\n  .weather form.search {\n    column-gap: 0.25rem;\n    grid-template: 1.2rem 2rem max-content / 1fr max-content max-content;\n    justify-items: stretch;\n  }\n\n  .weather form.search input {\n    min-width: 14rem;\n  }\n\n  .weather form.search button[type=\"submit\"],\n  .weather form.search button.show-settings {\n    padding: 0.25rem;\n    display: flex;\n    align-items: center;\n  }\n\n  .weather .weather-body .main-info {\n    font-size: 1.5rem;\n  }\n\n  .weather .weather-body .main-img-container {\n    width: 40vw;\n  }\n\n  .weather .weather-body .main-img {\n    width: 40vw;\n  }\n\n  .weather .weather-body .details {\n    grid-template: repeat(3, max-content) / max-content;\n  }\n}\n\n/*\n.weather form.search {\n  grid-template: 1.2rem 2rem max-content 2rem/ repeat(2, 1fr);\n  align-items: stretch;\n}\n\n.weather form.search .field {\n  grid-column: 1 / span 2;\n}\n\n.weather form.search button[type=\"submit\"],\n.weather form.search button.show-settings {\n  grid-row: 4;\n  width: 100%;\n}\n\n.weather form.search button[type=\"submit\"] {\n  grid-column: 1;\n}\n\n.weather form.search button.show-settings {\n  grid-column: 2;\n}\n*/\n","",{version:3,sources:["webpack://./src/styles/weather-view.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,iBAAiB;EACjB,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,+DAA+D;EAC/D,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,gBAAgB;EAChB,6BAA6B;EAC7B,eAAe;EACf,aAAa;EACb,WAAW;EACX,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,8BAA8B;AAChC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8DAA8D;EAC9D,6BAA6B;EAC7B,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,oCAAoC;EACpC,8BAA8B;AAChC;;AAEA;EACE,oCAAoC;EACpC,8BAA8B;AAChC;;AAEA;;EAEE,qCAAqC;EACrC,+BAA+B;AACjC;;AAEA;EACE,mCAAmC;EACnC,6BAA6B;AAC/B;;AAEA;EACE,mCAAmC;EACnC,6BAA6B;AAC/B;;AAEA;EACE,sCAAsC;EACtC,gCAAgC;AAClC;;AAEA;EACE;IACE,eAAe;IACf,WAAW;IACX,oBAAoB;EACtB;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,SAAS;IACT,6BAA6B;EAC/B;AACF;;AAEA;EACE;IACE,mBAAmB;IACnB,oEAAoE;IACpE,sBAAsB;EACxB;;EAEA;IACE,gBAAgB;EAClB;;EAEA;;IAEE,gBAAgB;IAChB,aAAa;IACb,mBAAmB;EACrB;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,mDAAmD;EACrD;AACF;;AAEA;;;;;;;;;;;;;;;;;;;;;;;CAuBC",sourcesContent:[".weather {\n  align-self: stretch;\n  min-height: 100vh;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n.weather form.search {\n  grid-template: 1.2rem 2rem max-content / repeat(3, max-content);\n  column-gap: 0.5rem;\n  row-gap: 0;\n}\n\n.weather form.search .field {\n  grid-row: 1 / span 3;\n}\n\n.weather form.search input {\n  height: 2rem;\n}\n\n.weather form.search button {\n  padding: 0.25rem 0.5rem;\n}\n\n.weather form.search button[type=\"submit\"] {\n  grid-row: 2;\n  grid-column: 2;\n}\n\n.weather form.search button.show-settings {\n  grid-row: 2;\n  grid-column: 3;\n}\n\n.weather .loading {\n  margin-top: 5rem;\n  color: var(--secondary-color);\n  font-size: 3rem;\n  display: flex;\n  gap: 0.5rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .loading-img {\n  width: 5rem;\n}\n\n.weather .weather-body {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.weather .weather-body .main {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n  justify-content: space-between;\n}\n\n.weather .weather-body .main-img-container {\n  width: 30vw;\n  height: 30vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .weather-body .main-img {\n  object-fit: cover;\n  width: 30vw;\n  height: 30vh;\n}\n\n.weather .weather-body .main-info {\n  font-size: 3rem;\n  text-align: center;\n}\n\n.weather .weather-body .details {\n  display: grid;\n  grid-template: repeat(2, max-content) / repeat(2, max-content);\n  justify-content: space-evenly;\n  column-gap: 1rem;\n}\n\n.weather .weather-body .temperatures {\n  grid-row: 1 / span 2;\n}\n\n.weather[data-weather='Sunny'] {\n  background-color: var(--sunny-color);\n  color: var(--sunny-font-color);\n}\n\n.weather[data-weather='Clouds'] {\n  background-color: var(--cloud-color);\n  color: var(--cloud-font-color);\n}\n\n.weather[data-weather='Foggy'],\n.weather[data-weather='Dusty'] {\n  background-color: var(--lowVis-color);\n  color: var(--lowVis-font-color);\n}\n\n.weather[data-weather='Rain'] {\n  background-color: var(--rain-color);\n  color: var(--rain-font-color);\n}\n\n.weather[data-weather='Snow'] {\n  background-color: var(--snow-color);\n  color: var(--snow-font-color);\n}\n\n.weather[data-weather='Thunderstorm'] {\n  background-color: var(--thunder-color);\n  color: var(--thunder-font-color);\n}\n\n@media (max-width: 575px) {\n  .weather {\n    padding: 0.5rem;\n    gap: 0.5rem;\n    align-items: stretch;\n  }\n\n  .weather .weather-body {\n    gap: 0.5rem;\n  }\n\n  .weather .weather-body .main {\n    gap: 1rem;\n    justify-content: space-evenly;\n  }\n}\n\n@media (max-width: 515px) {\n  .weather form.search {\n    column-gap: 0.25rem;\n    grid-template: 1.2rem 2rem max-content / 1fr max-content max-content;\n    justify-items: stretch;\n  }\n\n  .weather form.search input {\n    min-width: 14rem;\n  }\n\n  .weather form.search button[type=\"submit\"],\n  .weather form.search button.show-settings {\n    padding: 0.25rem;\n    display: flex;\n    align-items: center;\n  }\n\n  .weather .weather-body .main-info {\n    font-size: 1.5rem;\n  }\n\n  .weather .weather-body .main-img-container {\n    width: 40vw;\n  }\n\n  .weather .weather-body .main-img {\n    width: 40vw;\n  }\n\n  .weather .weather-body .details {\n    grid-template: repeat(3, max-content) / max-content;\n  }\n}\n\n/*\n.weather form.search {\n  grid-template: 1.2rem 2rem max-content 2rem/ repeat(2, 1fr);\n  align-items: stretch;\n}\n\n.weather form.search .field {\n  grid-column: 1 / span 2;\n}\n\n.weather form.search button[type=\"submit\"],\n.weather form.search button.show-settings {\n  grid-row: 4;\n  width: 100%;\n}\n\n.weather form.search button[type=\"submit\"] {\n  grid-column: 1;\n}\n\n.weather form.search button.show-settings {\n  grid-column: 2;\n}\n*/\n"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=r.base?c[0]+r.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var m=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var h=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:h,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=r(n,o),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0;var r={};(()=>{t.d(r,{S:()=>J}),t.p;const n=t.p+"c7576af9857e0429a475.svg",e=t.p+"23c0bc44e1d51ac1497b.svg";var o=t(379),a=t.n(o),i=t(795),A=t.n(i),c=t(569),s=t.n(c),d=t(565),l=t.n(d),m=t(216),u=t.n(m),h=t(589),p=t.n(h),g=t(689),C={};C.styleTagTransform=p(),C.setAttributes=l(),C.insert=s().bind(null,"head"),C.domAPI=A(),C.insertStyleElement=u(),a()(g.Z,C),g.Z&&g.Z.locals&&g.Z.locals;var f=t(713),w={};w.styleTagTransform=p(),w.setAttributes=l(),w.insert=s().bind(null,"head"),w.domAPI=A(),w.insertStyleElement=u(),a()(f.Z,w),f.Z&&f.Z.locals&&f.Z.locals;var E=t(176),y={};y.styleTagTransform=p(),y.setAttributes=l(),y.insert=s().bind(null,"head"),y.domAPI=A(),y.insertStyleElement=u(),a()(E.Z,y),E.Z&&E.Z.locals&&E.Z.locals;var B=t(607),b={};b.styleTagTransform=p(),b.setAttributes=l(),b.insert=s().bind(null,"head"),b.domAPI=A(),b.insertStyleElement=u(),a()(B.Z,b),B.Z&&B.Z.locals&&B.Z.locals;var v=t(67),x={};x.styleTagTransform=p(),x.setAttributes=l(),x.insert=s().bind(null,"head"),x.domAPI=A(),x.insertStyleElement=u(),a()(v.Z,x),v.Z&&v.Z.locals&&v.Z.locals;const S={},k={temp:1,speed:1,time:1},q=["K","°F","°C"],j=["meter,second","mile,hour"],I=["hr24","hr12"];async function L(n,e=S.openWeatherMap){const t=function(n){return n.replace(" ","+")}(n),r=await fetch(`https://api.openweathermap.org/data/2.5/weather?appid=${e}&q=${t}`);if(401===r.status)throw new Error("Invalid API Key");if(404===r.status)throw new Error("City not found");const{name:o,main:{feels_like:a,temp:i,temp_max:A,temp_min:c},sys:{country:s,sunrise:d,sunset:l},timezone:m,weather:[{main:u,description:h}],wind:{deg:p,speed:g}}=await r.json();return{name:o,country:s,weather:h,weatherKeyword:"Atmosphere"===u?h:u,temp:i,tempMin:c,tempMax:A,tempFeels:a,windSpeed:g,windDirection:p,sunrise:d,sunset:l,timeZoneOffset:m}}function W(n,e){return Number(n).toFixed(e)}function Z(n){return n.split(" ").map((n=>n[0].toUpperCase()+n.slice(1))).join(" ")}function T(n){return W(n,0)}function z(n){return T(n-273.15)}function D(n){return T(n+273.15)}function $(n){return T(5/9*(n-32))}function F(n){return T(1.8*n+32)}function M(n){return T(F(z(n)))}function N(n){return T(D($(n)))}function Y(n){return W(n,2)}function P(n){return Y(2.237*n)}function R(n){return Y(n/2.237)}function V(n){return String(n).padStart(2,"0")}function K(n){const[e,t]=n.split(":");return`${Number(e)}:${t}`}function U(n){const[e,t]=n.split(":").map(Number);let[r,o]=e<=11?["AM",0]:["PM",1];return 0===e&&(o+=12),`${e%13+o}:${V(t)} ${r}`}function X(n){const[e,t]=n.split(" "),[r,o]=e.split(":").map(Number);let a="PM"===t?12:0;return 12===r&&"AM"===t&&(a-=12),`${r+a}:${V(o)}`}function O(n,e){const t=Number(n)+Number(e);return K(new Date(1e3*t).toISOString().slice(11,16))}function H(n,e){return U(O(n,e))}const _={body:{},error:""},J=_;function G(n,e){["temp","tempMax","tempMin","tempFeels"].forEach((t=>{const r=n[t];r&&(n[t]=function(n,e,t=q[k.temp]){const r="number"==typeof n?n:Number(n.match(/\d+(\.\d+)?/)[0]);return({"K-°F":M,"K-°C":z,"°F-K":N,"°F-°C":$,"°C-K":D,"°C-°F":F}[`${e}-${t}`]||(n=>n))(r)+t}(r,e))}))}function Q(n,e){["sunrise","sunset"].forEach((t=>{const r=n[t];r&&(n[t]=function(n,e,t,r=I[k.time]){return({"unix-hr24":O,"unix-hr12":H,"hr24-hr12":U,"hr12-hr24":X}[`${t}-${r}`]||K)(n,e)}(r,n.timeZoneOffset||0,e))}))}function nn(n,e){const t=n.windSpeed;t&&(n.windSpeed=function(n,e,t=j[k.speed]){const r="number"==typeof n?n:Number(n.match(/\d+(\.\d+)?/)[0]),o=({"meter,second-mile,hour":P,"mile,hour-meter,second":R}[`${e}-${t}`]||(n=>n))(r),a=t.split(",");return`${o} ${a[0]}${1===o?"":"s"} per ${a[1]}`}(t,e))}async function en(n,e=L){_.error="";try{const t=await e(n);!function(n){(function(n){!function(n){const e=n.weather;e&&(n.weather=Z(e))}(n),function(n){const e=Object.entries({Sunny:["Clear","Clear Sky","Sunny","Sun"],Rain:["Rain","Drizzle","Shower"],Clouds:["Cloud"],Foggy:["Haze","Mist","Smoke","Fog"],Dusty:["Dust","Ash","Sand"],Snow:["Snow","Sleet","Hail"],Thunderstorm:["Thunder","Thunderstorm","Lightning"]});let t=n.weatherKeyword;if(t){t=Z(t),n.weatherKeyword=t;for(let r=0;r<e.length;r+=1){const[o,a]=e[r];if(a.some((n=>t.includes(n))))return void(n.weatherKeyword=o)}}}(n)})(n),G(n,"K"),Q(n,"unix"),nn(n,"meter,second"),function(n){const e=n.windDirection;e&&(n.windDirection=function(n){const e=n-22.5;return["N","NE","E","SE","S","SW","W","NW"][e>0&&e<315?Math.ceil(e/45):0]}(e))}(n)}(t),_.body=t}catch(n){_.error=n.message}return _}const tn=document.querySelector(".login"),rn=document.querySelector(".login form"),on=document.querySelector('.login form button[type="submit"]'),an=document.querySelector(".login .loading"),An=document.querySelector(".weather"),cn=document.querySelector(".weather form.search"),sn=document.querySelector(".weather .error"),dn=document.querySelector('.weather form.search button[type="submit"]'),ln=document.querySelector(".weather .loading"),mn=document.querySelector(".weather .weather-body"),un=document.querySelector("button.show-settings"),hn=document.querySelector(".settings"),pn=document.querySelector(".settings form"),gn=document.querySelector(".settings .hide"),Cn=document.querySelector(".weather .city"),fn=document.querySelector(".weather .country"),wn=document.querySelector(".weather .main-temperature"),En=document.querySelector(".weather .main-img"),yn=document.querySelector(".weather .main-img-container .loading-img"),Bn=document.querySelector(".weather .main-weather"),bn=document.querySelector(".weather .feels-temperature"),vn=document.querySelector(".weather .min-temperature"),xn=document.querySelector(".weather .max-temperature"),Sn=document.querySelector(".weather .wind-speed"),kn=document.querySelector(".weather .wind-direction"),qn=document.querySelector(".weather .sunrise"),jn=document.querySelector(".weather .sunset");async function In(n,e=S.giphy){const t=await fetch(`https://api.giphy.com/v1/gifs/translate?api_key=${e}&s=${n}`);if(401===t.status)throw new Error("Invalid API Key");return(await t.json()).data.images.original.url}async function Ln(n){const e=n.querySelectorAll(".error"),t=[...n.querySelectorAll("input")];return function(n,e){n.forEach((n=>n.setCustomValidity(""))),e.forEach((n=>{n.textContent="",n.classList.add("hidden")}))}(t,e),await Promise.all(t.map((n=>n.id.includes("api-key")?async function(n){if(!n.checkValidity())return;const[e,t]={"open-weather-map":[L,["New York"]],giphy:[In,["cats"]]}[n.id.replace("-api-key","")];if(e)try{await e(...t,n.value)}catch(e){n.setCustomValidity(e.message)}}(n):Promise.resolve()))),t.forEach((e=>{if(!e.checkValidity()){const t=n.querySelector(`#${e.id}+.error`);t.textContent=e.validationMessage,t.classList.remove("hidden")}})),n.checkValidity()}const Wn={url:"#"},Zn=Wn;function Tn(){ln.classList.add("hidden"),mn.classList.remove("hidden")}function zn(){tn.classList.add("hidden"),hn.classList.add("hidden"),An.classList.remove("hidden"),sn.textContent="",sn.classList.add("hidden"),Tn()}function Dn({withImage:n=!0}={}){if(zn(),J.error)return sn.textContent=J.error,void sn.classList.remove("hidden");var e;e=J.body,An.dataset.weather=e.weatherKeyword,Cn.textContent=e.name,fn.textContent=e.country,wn.textContent=e.temp,Bn.textContent=e.weather,bn.textContent=e.tempFeels,vn.textContent=e.tempMin,xn.textContent=e.tempMax,Sn.textContent=e.windSpeed,kn.textContent=e.windDirection,qn.textContent=e.sunrise,jn.textContent=e.sunset,n&&async function(n){yn.classList.remove("hidden"),En.classList.add("hidden"),await async function(n,e=In){try{Wn.url=await e(n)}catch(n){Wn.url="#"}return Wn}(n.weatherKeyword),En.src=Zn.url,yn.classList.add("hidden"),En.classList.remove("hidden")}(J.body)}function $n(){[dn,un].forEach((n=>{n.querySelector(".text").classList.add("hidden"),n.querySelector(".icon").classList.remove("hidden")}))}const Fn=[{name:"get-weather",normal:n,hover:t.p+"a7dbc20f5847419b1f94.svg"},{name:"show-settings",normal:e,hover:t.p+"844f95577173a5fddf4c.svg"}];function Mn(n,e){n.querySelector(".icon").src=Fn.find((({name:e})=>n.classList.contains(e)))[e]}function Nn(){[dn,un].forEach((n=>{n.querySelector(".text").classList.remove("hidden"),n.querySelector(".icon").classList.add("hidden")}))}function Yn(){(window.innerWidth<=515?$n:Nn)()}function Pn(n){Mn(n.target.closest("button"),"normal")}function Rn(n){Mn(n.target.closest("button"),"hover")}rn.addEventListener("submit",(async function(n){if(n.preventDefault(),an.classList.remove("hidden"),on.classList.add("hidden"),!await Ln(rn))return tn.classList.remove("hidden"),on.classList.remove("hidden"),void an.classList.add("hidden");var e;e={openWeatherMap:rn.querySelector("#open-weather-map-api-key").value,giphy:rn.querySelector("#giphy-api-key").value},Object.assign(S,e),zn(),await en("New York City"),Dn()})),cn.addEventListener("submit",(async function(n){if(n.preventDefault(),ln.classList.remove("hidden"),mn.classList.add("hidden"),!await Ln(cn))return Tn();await en(cn.querySelector("#location").value),Dn()})),un.addEventListener("click",(function(n){n.preventDefault(),hn.classList.remove("hidden")})),pn.addEventListener("submit",(async function(n){if(n.preventDefault(),!await Ln(pn))return;const e={...k};var t;t=Object.fromEntries(new FormData(pn).entries()),Object.keys(t).forEach((n=>{k[n]=+t[n]})),function(n){const e=_.body;G(e,q[n.temp]),Q(e,I[n.time]),nn(e,j[n.speed])}(e),Dn({withImage:!1})})),gn.addEventListener("click",(function(n){n.preventDefault(),zn()})),window.addEventListener("load",Yn),window.addEventListener("resize",Yn),[dn,un].forEach((n=>{n.addEventListener("mouseover",Rn),n.addEventListener("mouseout",Pn)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,