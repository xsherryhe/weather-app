(()=>{"use strict";var n={689:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,":root {\n  --site-font: 'Helvetica', sans-serif;\n  --background-color: rgb(255, 255, 165);\n  --secondary-color: rgb(0, 70, 162);\n  --light-secondary-color: rgb(200, 224, 255);\n  --box-shadow-color: rgb(80, 80, 80);\n  --sunny-color: var(--background-color);\n  --sunny-font-color: var(--secondary-color);\n  --cloud-color: rgb(165, 204, 255);\n  --cloud-font-color: black;\n  --lowVis-color: rgb(70, 70, 70);\n  --lowVis-font-color: white;\n  --rain-color: var(--secondary-color);\n  --rain-font-color: rgb(165, 204, 255);\n  --snow-color: white;\n  --snow-font-color: black;\n  --thunder-color: black;\n  --thunder-font-color: var(--background-color);\n}\n\nhtml {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: var(--site-font);\n  min-height: 100vh;\n  background-color: var(--light-secondary-color);\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\na {\n  color: var(--secondary-color);\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\nbutton {\n  font-size: 1rem;\n  padding: 0.5rem 1.5rem;\n  cursor: pointer;\n  background-color: var(--secondary-color);\n  color: white;\n  border-radius: 0.2rem;\n}\n\nbutton:hover {\n  background-color: var(--light-secondary-color);\n  color: black;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.error {\n  color: red;\n}\n\n.icon {\n  width: 1.25rem;\n}\n\n@media (max-width: 575px) {\n  html {\n    font-size: 16px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/all.css"],names:[],mappings:"AAAA;EACE,oCAAoC;EACpC,sCAAsC;EACtC,kCAAkC;EAClC,2CAA2C;EAC3C,mCAAmC;EACnC,sCAAsC;EACtC,0CAA0C;EAC1C,iCAAiC;EACjC,yBAAyB;EACzB,+BAA+B;EAC/B,0BAA0B;EAC1B,oCAAoC;EACpC,qCAAqC;EACrC,mBAAmB;EACnB,wBAAwB;EACxB,sBAAsB;EACtB,6CAA6C;AAC/C;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,6BAA6B;EAC7B,iBAAiB;EACjB,8CAA8C;EAC9C,SAAS;EACT,UAAU;EACV,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,6BAA6B;EAC7B,qBAAqB;AACvB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,eAAe;EACf,sBAAsB;EACtB,eAAe;EACf,wCAAwC;EACxC,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,8CAA8C;EAC9C,YAAY;AACd;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE;IACE,eAAe;EACjB;AACF",sourcesContent:[":root {\n  --site-font: 'Helvetica', sans-serif;\n  --background-color: rgb(255, 255, 165);\n  --secondary-color: rgb(0, 70, 162);\n  --light-secondary-color: rgb(200, 224, 255);\n  --box-shadow-color: rgb(80, 80, 80);\n  --sunny-color: var(--background-color);\n  --sunny-font-color: var(--secondary-color);\n  --cloud-color: rgb(165, 204, 255);\n  --cloud-font-color: black;\n  --lowVis-color: rgb(70, 70, 70);\n  --lowVis-font-color: white;\n  --rain-color: var(--secondary-color);\n  --rain-font-color: rgb(165, 204, 255);\n  --snow-color: white;\n  --snow-font-color: black;\n  --thunder-color: black;\n  --thunder-font-color: var(--background-color);\n}\n\nhtml {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: var(--site-font);\n  min-height: 100vh;\n  background-color: var(--light-secondary-color);\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\na {\n  color: var(--secondary-color);\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\nbutton {\n  font-size: 1rem;\n  padding: 0.5rem 1.5rem;\n  cursor: pointer;\n  background-color: var(--secondary-color);\n  color: white;\n  border-radius: 0.2rem;\n}\n\nbutton:hover {\n  background-color: var(--light-secondary-color);\n  color: black;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.error {\n  color: red;\n}\n\n.icon {\n  width: 1.25rem;\n}\n\n@media (max-width: 575px) {\n  html {\n    font-size: 16px;\n  }\n}\n"],sourceRoot:""}]);const A=i},713:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,"form {\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  row-gap: 1rem;\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n  gap: 0.1rem;\n}\n\ninput, select {\n  min-width: 18rem;\n  min-height: 1rem;\n  padding: 0.25rem;\n  font-size: 1rem;\n}\n\nselect {\n  cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/styles/form.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,qBAAqB;EACrB,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB",sourcesContent:["form {\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  row-gap: 1rem;\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n  gap: 0.1rem;\n}\n\ninput, select {\n  min-width: 18rem;\n  min-height: 1rem;\n  padding: 0.25rem;\n  font-size: 1rem;\n}\n\nselect {\n  cursor: pointer;\n}\n"],sourceRoot:""}]);const A=i},176:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".login {\n  margin: 4rem 1rem;\n  height: max-content;\n  padding: 2rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 6px double var(--secondary-color);\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.login .link {\n  margin-top: 0.5rem;\n  text-align: center;\n}\n\n.login .loading {\n  color: var(--secondary-color);\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n}\n\n.login .loading-img {\n  width: 1.5rem;\n}\n\n@media (max-height: 575px) {\n  .login {\n    margin: 1rem;\n  }\n}\n\n@media (max-width: 450px) {\n  .login {\n    margin: 0.25rem;\n    padding: 0.5rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/login-view.css"],names:[],mappings:"AAAA;EACE,iBAAiB;EACjB,mBAAmB;EACnB,oBAAoB;EACpB,qBAAqB;EACrB,yCAAyC;EACzC,uBAAuB;EACvB,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;EAC7B,aAAa;EACb,WAAW;EACX,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,eAAe;IACf,eAAe;EACjB;AACF",sourcesContent:[".login {\n  margin: 4rem 1rem;\n  height: max-content;\n  padding: 2rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 6px double var(--secondary-color);\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.login .link {\n  margin-top: 0.5rem;\n  text-align: center;\n}\n\n.login .loading {\n  color: var(--secondary-color);\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n}\n\n.login .loading-img {\n  width: 1.5rem;\n}\n\n@media (max-height: 575px) {\n  .login {\n    margin: 1rem;\n  }\n}\n\n@media (max-width: 450px) {\n  .login {\n    margin: 0.25rem;\n    padding: 0.5rem;\n  }\n}\n"],sourceRoot:""}]);const A=i},607:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".settings {\n  position: absolute;\n  z-index: 1;\n  min-height: 100vh;\n  width: 100%;\n  padding: 2rem;\n  background-color: rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: center;\n  align-items: start;\n}\n\n.settings form {\n  background-color: white;\n  margin: 4rem 0;\n  min-width: 45vw;\n  padding: 0.5rem 0.5rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n}\n\n.settings .hide {\n  justify-self: end;\n  padding: 0.25rem;\n  height: 2rem;\n  width: 2rem;\n  font-weight: 900;\n}\n\n@media (max-width: 515px) {\n  .settings form {\n    margin: 0;\n  }\n}\n\n@media (max-width: 375px) {\n  .settings {\n    padding: 1rem;\n    justify-content: stretch;\n  }\n\n  .settings form {\n    width: 100%;\n  }\n\n  .settings select {\n    min-width: 16rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/settings-view.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,UAAU;EACV,iBAAiB;EACjB,WAAW;EACX,aAAa;EACb,qCAAqC;EACrC,aAAa;EACb,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,cAAc;EACd,eAAe;EACf,6BAA6B;EAC7B,qBAAqB;EACrB,wCAAwC;AAC1C;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE;IACE,SAAS;EACX;AACF;;AAEA;EACE;IACE,aAAa;IACb,wBAAwB;EAC1B;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,gBAAgB;EAClB;AACF",sourcesContent:[".settings {\n  position: absolute;\n  z-index: 1;\n  min-height: 100vh;\n  width: 100%;\n  padding: 2rem;\n  background-color: rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: center;\n  align-items: start;\n}\n\n.settings form {\n  background-color: white;\n  margin: 4rem 0;\n  min-width: 45vw;\n  padding: 0.5rem 0.5rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n}\n\n.settings .hide {\n  justify-self: end;\n  padding: 0.25rem;\n  height: 2rem;\n  width: 2rem;\n  font-weight: 900;\n}\n\n@media (max-width: 515px) {\n  .settings form {\n    margin: 0;\n  }\n}\n\n@media (max-width: 375px) {\n  .settings {\n    padding: 1rem;\n    justify-content: stretch;\n  }\n\n  .settings form {\n    width: 100%;\n  }\n\n  .settings select {\n    min-width: 16rem;\n  }\n}\n"],sourceRoot:""}]);const A=i},67:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".weather {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n  padding-bottom: 1rem;\n}\n\n.weather > * {\n  padding: 1rem;\n  border-radius: 0.2rem;\n  border: 6px double var(--secondary-color);\n}\n\n.weather > form.search {\n  padding: 1.5rem 1rem;\n  width: 100vw;\n  border-radius: 0;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  box-shadow: 0 0 10px var(--box-shadow-color);\n  grid-template: 1.2rem 2rem max-content / repeat(3, max-content);\n  column-gap: 0.5rem;\n  row-gap: 0;\n  justify-content: center;\n  align-items: stretch;\n}\n\n.weather form.search .field {\n  grid-row: 1 / span 3;\n}\n\n.weather form.search input {\n  height: 2rem;\n}\n\n.weather form.search button {\n  padding: 0.25rem 0.5rem;\n}\n\n.weather form.search button[type=\"submit\"] {\n  grid-row: 2;\n  grid-column: 2;\n}\n\n.weather form.search button.show-settings {\n  grid-row: 2;\n  grid-column: 3;\n}\n\n.weather > .loading.loading {\n  border: none;\n  background-color: transparent;\n  color: var(--secondary-color);\n  margin-top: 5rem;\n  font-size: 3rem;\n  display: flex;\n  gap: 0.5rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .loading-img {\n  width: 5rem;\n}\n\n.weather .weather-body {\n  max-width: 95vw;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  box-shadow: 0 0 10px var(--box-shadow-color);\n}\n\n.weather .weather-body .main {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n  justify-content: center;\n  font-weight: 800;\n}\n\n.weather .weather-body .main-img-container {\n  max-width: 45vw;\n  height: 30vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .weather-body .main-img {\n  border-radius: 0.2rem;\n  object-fit: cover;\n  max-width: 45vw;\n  height: 30vh;\n}\n\n.weather .weather-body .main-info {\n  font-size: 3rem;\n  text-align: center;\n}\n\n.weather .weather-body .details {\n  display: grid;\n  grid-template: repeat(2, max-content) / repeat(2, max-content);\n  justify-content: space-evenly;\n  column-gap: 1rem;\n}\n\n.weather .weather-body .temperatures {\n  grid-row: 1 / span 2;\n}\n\n.weather[data-weather='Sunny'] > * {\n  background-color: var(--sunny-color);\n  color: var(--sunny-font-color);\n  border-color: var(--sunny-font-color);\n}\n\n.weather[data-weather='Sunny'] button:not(:hover) {\n  background-color: var(--sunny-font-color);\n  color: var(--sunny-color);\n}\n\n.weather[data-weather='Clouds']>* {\n  background-color: var(--cloud-color);\n  color: var(--cloud-font-color);\n  border-color: var(--cloud-font-color);\n}\n\n.weather[data-weather='Clouds'] button:not(:hover) {\n  background-color: var(--cloud-font-color);\n  color: var(--cloud-color);\n}\n\n.weather[data-weather='Foggy'] > *,\n.weather[data-weather='Dusty'] > * {\n  background-color: var(--lowVis-color);\n  color: var(--lowVis-font-color);\n  border-color: var(--lowVis-font-color);\n}\n\n.weather[data-weather='Foggy'] button:not(:hover),\n.weather[data-weather='Dusty'] button:not(:hover) {\n  background-color: var(--lowVis-font-color);\n  color: var(--lowVis-color);\n}\n\n.weather[data-weather='Rain'] > * {\n  background-color: var(--rain-color);\n  color: var(--rain-font-color);\n  border-color: var(--rain-font-color);\n}\n\n.weather[data-weather='Rain'] button:not(:hover) {\n  background-color: var(--rain-font-color);\n  color: var(--rain-color);\n}\n\n.weather[data-weather='Snow'] > * {\n  background-color: var(--snow-color);\n  color: var(--snow-font-color);\n  border-color: var(--snow-font-color);\n}\n\n.weather[data-weather='Snow'] button:not(:hover) {\n  background-color: var(--snow-font-color);\n  color: var(--snow-color);\n}\n\n.weather[data-weather='Thunderstorm'] > * {\n  background-color: var(--thunder-color);\n  color: var(--thunder-font-color);\n  border-color: var(--thunder-font-color);\n}\n\n.weather[data-weather='Thunderstorm'] button:not(:hover) {\n  background-color: var(--thunder-font-color);\n  color: var(--thunder-color);\n}\n\n@media (max-width: 575px) {\n  .weather {\n    gap: 1rem;\n  }\n\n  .weather .weather-body {\n    gap: 0.5rem;\n  }\n\n  .weather .weather-body .main {\n    gap: 1rem;\n    justify-content: space-evenly;\n  }\n}\n\n@media (max-width: 515px) {\n  .weather form.search {\n    column-gap: 0.25rem;\n    grid-template: 1.2rem 2rem max-content / 1fr max-content max-content;\n    justify-items: stretch;\n  }\n\n  .weather form.search input {\n    min-width: 14rem;\n  }\n\n  .weather form.search button[type=\"submit\"],\n  .weather form.search button.show-settings {\n    padding: 0.25rem;\n    display: flex;\n    align-items: center;\n  }\n\n  .weather .weather-body .main-info {\n    font-size: 1.5rem;\n  }\n\n  .weather .weather-body .details {\n    grid-template: repeat(3, max-content) / max-content;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/weather-view.css"],names:[],mappings:"AAAA;EACE,iBAAiB;EACjB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;EACT,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,yCAAyC;AAC3C;;AAEA;EACE,oBAAoB;EACpB,YAAY;EACZ,gBAAgB;EAChB,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,4CAA4C;EAC5C,+DAA+D;EAC/D,kBAAkB;EAClB,UAAU;EACV,uBAAuB;EACvB,oBAAoB;AACtB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,6BAA6B;EAC7B,6BAA6B;EAC7B,gBAAgB;EAChB,eAAe;EACf,aAAa;EACb,WAAW;EACX,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,4CAA4C;AAC9C;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,uBAAuB;EACvB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,iBAAiB;EACjB,eAAe;EACf,YAAY;AACd;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8DAA8D;EAC9D,6BAA6B;EAC7B,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,oCAAoC;EACpC,8BAA8B;EAC9B,qCAAqC;AACvC;;AAEA;EACE,yCAAyC;EACzC,yBAAyB;AAC3B;;AAEA;EACE,oCAAoC;EACpC,8BAA8B;EAC9B,qCAAqC;AACvC;;AAEA;EACE,yCAAyC;EACzC,yBAAyB;AAC3B;;AAEA;;EAEE,qCAAqC;EACrC,+BAA+B;EAC/B,sCAAsC;AACxC;;AAEA;;EAEE,0CAA0C;EAC1C,0BAA0B;AAC5B;;AAEA;EACE,mCAAmC;EACnC,6BAA6B;EAC7B,oCAAoC;AACtC;;AAEA;EACE,wCAAwC;EACxC,wBAAwB;AAC1B;;AAEA;EACE,mCAAmC;EACnC,6BAA6B;EAC7B,oCAAoC;AACtC;;AAEA;EACE,wCAAwC;EACxC,wBAAwB;AAC1B;;AAEA;EACE,sCAAsC;EACtC,gCAAgC;EAChC,uCAAuC;AACzC;;AAEA;EACE,2CAA2C;EAC3C,2BAA2B;AAC7B;;AAEA;EACE;IACE,SAAS;EACX;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,SAAS;IACT,6BAA6B;EAC/B;AACF;;AAEA;EACE;IACE,mBAAmB;IACnB,oEAAoE;IACpE,sBAAsB;EACxB;;EAEA;IACE,gBAAgB;EAClB;;EAEA;;IAEE,gBAAgB;IAChB,aAAa;IACb,mBAAmB;EACrB;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,mDAAmD;EACrD;AACF",sourcesContent:[".weather {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n  padding-bottom: 1rem;\n}\n\n.weather > * {\n  padding: 1rem;\n  border-radius: 0.2rem;\n  border: 6px double var(--secondary-color);\n}\n\n.weather > form.search {\n  padding: 1.5rem 1rem;\n  width: 100vw;\n  border-radius: 0;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  box-shadow: 0 0 10px var(--box-shadow-color);\n  grid-template: 1.2rem 2rem max-content / repeat(3, max-content);\n  column-gap: 0.5rem;\n  row-gap: 0;\n  justify-content: center;\n  align-items: stretch;\n}\n\n.weather form.search .field {\n  grid-row: 1 / span 3;\n}\n\n.weather form.search input {\n  height: 2rem;\n}\n\n.weather form.search button {\n  padding: 0.25rem 0.5rem;\n}\n\n.weather form.search button[type=\"submit\"] {\n  grid-row: 2;\n  grid-column: 2;\n}\n\n.weather form.search button.show-settings {\n  grid-row: 2;\n  grid-column: 3;\n}\n\n.weather > .loading.loading {\n  border: none;\n  background-color: transparent;\n  color: var(--secondary-color);\n  margin-top: 5rem;\n  font-size: 3rem;\n  display: flex;\n  gap: 0.5rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .loading-img {\n  width: 5rem;\n}\n\n.weather .weather-body {\n  max-width: 95vw;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  box-shadow: 0 0 10px var(--box-shadow-color);\n}\n\n.weather .weather-body .main {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n  justify-content: center;\n  font-weight: 800;\n}\n\n.weather .weather-body .main-img-container {\n  max-width: 45vw;\n  height: 30vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.weather .weather-body .main-img {\n  border-radius: 0.2rem;\n  object-fit: cover;\n  max-width: 45vw;\n  height: 30vh;\n}\n\n.weather .weather-body .main-info {\n  font-size: 3rem;\n  text-align: center;\n}\n\n.weather .weather-body .details {\n  display: grid;\n  grid-template: repeat(2, max-content) / repeat(2, max-content);\n  justify-content: space-evenly;\n  column-gap: 1rem;\n}\n\n.weather .weather-body .temperatures {\n  grid-row: 1 / span 2;\n}\n\n.weather[data-weather='Sunny'] > * {\n  background-color: var(--sunny-color);\n  color: var(--sunny-font-color);\n  border-color: var(--sunny-font-color);\n}\n\n.weather[data-weather='Sunny'] button:not(:hover) {\n  background-color: var(--sunny-font-color);\n  color: var(--sunny-color);\n}\n\n.weather[data-weather='Clouds']>* {\n  background-color: var(--cloud-color);\n  color: var(--cloud-font-color);\n  border-color: var(--cloud-font-color);\n}\n\n.weather[data-weather='Clouds'] button:not(:hover) {\n  background-color: var(--cloud-font-color);\n  color: var(--cloud-color);\n}\n\n.weather[data-weather='Foggy'] > *,\n.weather[data-weather='Dusty'] > * {\n  background-color: var(--lowVis-color);\n  color: var(--lowVis-font-color);\n  border-color: var(--lowVis-font-color);\n}\n\n.weather[data-weather='Foggy'] button:not(:hover),\n.weather[data-weather='Dusty'] button:not(:hover) {\n  background-color: var(--lowVis-font-color);\n  color: var(--lowVis-color);\n}\n\n.weather[data-weather='Rain'] > * {\n  background-color: var(--rain-color);\n  color: var(--rain-font-color);\n  border-color: var(--rain-font-color);\n}\n\n.weather[data-weather='Rain'] button:not(:hover) {\n  background-color: var(--rain-font-color);\n  color: var(--rain-color);\n}\n\n.weather[data-weather='Snow'] > * {\n  background-color: var(--snow-color);\n  color: var(--snow-font-color);\n  border-color: var(--snow-font-color);\n}\n\n.weather[data-weather='Snow'] button:not(:hover) {\n  background-color: var(--snow-font-color);\n  color: var(--snow-color);\n}\n\n.weather[data-weather='Thunderstorm'] > * {\n  background-color: var(--thunder-color);\n  color: var(--thunder-font-color);\n  border-color: var(--thunder-font-color);\n}\n\n.weather[data-weather='Thunderstorm'] button:not(:hover) {\n  background-color: var(--thunder-font-color);\n  color: var(--thunder-color);\n}\n\n@media (max-width: 575px) {\n  .weather {\n    gap: 1rem;\n  }\n\n  .weather .weather-body {\n    gap: 0.5rem;\n  }\n\n  .weather .weather-body .main {\n    gap: 1rem;\n    justify-content: space-evenly;\n  }\n}\n\n@media (max-width: 515px) {\n  .weather form.search {\n    column-gap: 0.25rem;\n    grid-template: 1.2rem 2rem max-content / 1fr max-content max-content;\n    justify-items: stretch;\n  }\n\n  .weather form.search input {\n    min-width: 14rem;\n  }\n\n  .weather form.search button[type=\"submit\"],\n  .weather form.search button.show-settings {\n    padding: 0.25rem;\n    display: flex;\n    align-items: center;\n  }\n\n  .weather .weather-body .main-info {\n    font-size: 1.5rem;\n  }\n\n  .weather .weather-body .details {\n    grid-template: repeat(3, max-content) / max-content;\n  }\n}\n"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),r&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=r):d[2]=r),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=t.base?c[0]+t.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var u=r(l),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var h=o(m,t);t.byIndex=A,e.splice(A,0,{identifier:l,updater:h,references:1})}i.push(l)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=r(a[i]);e[A].references--}for(var c=t(n,o),s=0;s<a.length;s++){var d=r(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.nc=void 0;var t={};(()=>{r.d(t,{S:()=>nn}),r.p;const n=r.p+"c7576af9857e0429a475.svg",e=r.p+"23c0bc44e1d51ac1497b.svg",o=r.p+"a7dbc20f5847419b1f94.svg",a=r.p+"844f95577173a5fddf4c.svg";var i=r(379),A=r.n(i),c=r(795),s=r.n(c),d=r(569),l=r.n(d),u=r(565),m=r.n(u),h=r(216),C=r.n(h),E=r(589),g=r.n(E),w=r(689),f={};f.styleTagTransform=g(),f.setAttributes=m(),f.insert=l().bind(null,"head"),f.domAPI=s(),f.insertStyleElement=C(),A()(w.Z,f),w.Z&&w.Z.locals&&w.Z.locals;var p=r(713),y={};y.styleTagTransform=g(),y.setAttributes=m(),y.insert=l().bind(null,"head"),y.domAPI=s(),y.insertStyleElement=C(),A()(p.Z,y),p.Z&&p.Z.locals&&p.Z.locals;var B=r(176),b={};b.styleTagTransform=g(),b.setAttributes=m(),b.insert=l().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=C(),A()(B.Z,b),B.Z&&B.Z.locals&&B.Z.locals;var v=r(607),x={};x.styleTagTransform=g(),x.setAttributes=m(),x.insert=l().bind(null,"head"),x.domAPI=s(),x.insertStyleElement=C(),A()(v.Z,x),v.Z&&v.Z.locals&&v.Z.locals;var S=r(67),k={};k.styleTagTransform=g(),k.setAttributes=m(),k.insert=l().bind(null,"head"),k.domAPI=s(),k.insertStyleElement=C(),A()(S.Z,k),S.Z&&S.Z.locals&&S.Z.locals;const q={},j={temp:1,speed:1,time:1},L=["K","°F","°C"],I=["meter,second","mile,hour"],T=["hr24","hr12"];function Z(n,e){return Number(n).toFixed(e)}function z(n){return n.split(" ").map((n=>n[0].toUpperCase()+n.slice(1))).join(" ")}function D(n,...e){const r=new Promise(((e,r)=>{setTimeout((()=>r(new Error("Timed out. Please try again."))),n)}));return Promise.race([...e,r])}async function F(n,e=q.openWeatherMap){const r=function(n){return n.replace(" ","+")}(n),t=await D(8e3,fetch(`https://api.openweathermap.org/data/2.5/weather?appid=${e}&q=${r}`));if(401===t.status)throw new Error("Invalid API Key");if(404===t.status)throw new Error("City not found");const{name:o,main:{feels_like:a,temp:i,temp_max:A,temp_min:c},sys:{country:s,sunrise:d,sunset:l},timezone:u,weather:[{main:m,description:h}],wind:{deg:C,speed:E}}=await t.json();return{name:o,country:s,weather:h,weatherKeyword:"Atmosphere"===m?h:m,temp:i,tempMin:c,tempMax:A,tempFeels:a,windSpeed:E,windDirection:C,sunrise:d,sunset:l,timeZoneOffset:u}}function W(n){return Z(n,0)}function $(n){return W(n-273.15)}function M(n){return W(n+273.15)}function V(n){return W(5/9*(n-32))}function Y(n){return W(1.8*n+32)}function N(n){return W(Y($(n)))}function P(n){return W(M(V(n)))}function R(n){return Z(n,2)}function K(n){return R(2.237*n)}function U(n){return R(n/2.237)}function O(n){return String(n).padStart(2,"0")}function X(n){const[e,r]=n.split(":");return`${Number(e)}:${r}`}function H(n){const[e,r]=n.split(":").map(Number);let[t,o]=e<=11?["AM",0]:["PM",1];return 0===e&&(o+=12),`${e%13+o}:${O(r)} ${t}`}function _(n){const[e,r]=n.split(" "),[t,o]=e.split(":").map(Number);let a="PM"===r?12:0;return 12===t&&"AM"===r&&(a-=12),`${t+a}:${O(o)}`}function J(n,e){const r=Number(n)+Number(e);return X(new Date(1e3*r).toISOString().slice(11,16))}function G(n,e){return H(J(n,e))}const Q={body:{},error:""},nn=Q;function en(n,e){["temp","tempMax","tempMin","tempFeels"].forEach((r=>{const t=n[r];t&&(n[r]=function(n,e,r=L[j.temp]){const t="number"==typeof n?n:Number(n.match(/\d+(\.\d+)?/)[0]);return({"K-°F":N,"K-°C":$,"°F-K":P,"°F-°C":V,"°C-K":M,"°C-°F":Y}[`${e}-${r}`]||(n=>n))(t)+r}(t,e))}))}function rn(n,e){["sunrise","sunset"].forEach((r=>{const t=n[r];t&&(n[r]=function(n,e,r,t=T[j.time]){return({"unix-hr24":J,"unix-hr12":G,"hr24-hr12":H,"hr12-hr24":_}[`${r}-${t}`]||X)(n,e)}(t,n.timeZoneOffset||0,e))}))}function tn(n,e){const r=n.windSpeed;r&&(n.windSpeed=function(n,e,r=I[j.speed]){const t="number"==typeof n?n:Number(n.match(/\d+(\.\d+)?/)[0]),o=({"meter,second-mile,hour":K,"mile,hour-meter,second":U}[`${e}-${r}`]||(n=>n))(t),a=r.split(",");return`${o} ${a[0]}${1===o?"":"s"} per ${a[1]}`}(r,e))}async function on(n,e=F){Q.error="";try{const r=await e(n);!function(n){(function(n){!function(n){const e=n.weather;e&&(n.weather=z(e))}(n),function(n){const e=Object.entries({Sunny:["Clear","Clear Sky","Sunny","Sun"],Rain:["Rain","Drizzle","Shower"],Clouds:["Cloud"],Foggy:["Haze","Mist","Smoke","Fog"],Dusty:["Dust","Ash","Sand"],Snow:["Snow","Sleet","Hail"],Thunderstorm:["Thunder","Thunderstorm","Lightning"]});let r=n.weatherKeyword;if(r){r=z(r),n.weatherKeyword=r;for(let t=0;t<e.length;t+=1){const[o,a]=e[t];if(a.some((n=>r.includes(n))))return void(n.weatherKeyword=o)}}}(n)})(n),en(n,"K"),rn(n,"unix"),tn(n,"meter,second"),function(n){const e=n.windDirection;e&&(n.windDirection=function(n){const e=n-22.5;return["N","NE","E","SE","S","SW","W","NW"][e>0&&e<315?Math.ceil(e/45):0]}(e))}(n)}(r),Q.body=r}catch(n){Q.error=n.message}return Q}const an=document.querySelector(".login"),An=document.querySelector(".login form"),cn=document.querySelector('.login form button[type="submit"]'),sn=document.querySelector(".login .loading"),dn=document.querySelector(".weather"),ln=document.querySelector(".weather form.search"),un=document.querySelector(".weather .error"),mn=document.querySelector('.weather form.search button[type="submit"]'),hn=document.querySelector(".weather .loading"),Cn=document.querySelector(".weather .weather-body"),En=document.querySelector("button.show-settings"),gn=document.querySelector(".settings"),wn=document.querySelector(".settings form"),fn=document.querySelector(".settings .hide"),pn=document.querySelector(".weather .city"),yn=document.querySelector(".weather .country"),Bn=document.querySelector(".weather .main-temperature"),bn=document.querySelector(".weather .main-img"),vn=document.querySelector(".weather .main-img-container .loading-img"),xn=document.querySelector(".weather .main-weather"),Sn=document.querySelector(".weather .feels-temperature"),kn=document.querySelector(".weather .min-temperature"),qn=document.querySelector(".weather .max-temperature"),jn=document.querySelector(".weather .wind-speed"),Ln=document.querySelector(".weather .wind-direction"),In=document.querySelector(".weather .sunrise"),Tn=document.querySelector(".weather .sunset");async function Zn(n,e=q.giphy){const r=await D(8e3,fetch(`https://api.giphy.com/v1/gifs/translate?api_key=${e}&s=${n}`));if(401===r.status)throw new Error("Invalid API Key");return(await r.json()).data.images.original.url}async function zn(n){const e=n.querySelectorAll(".error"),r=[...n.querySelectorAll("input")];return function(n,e){n.forEach((n=>n.setCustomValidity(""))),e.forEach((n=>{n.textContent="",n.classList.add("hidden")}))}(r,e),await Promise.all(r.map((n=>n.id.includes("api-key")?async function(n){if(!n.checkValidity())return;const[e,r]={"open-weather-map":[F,["New York"]],giphy:[Zn,["cats"]]}[n.id.replace("-api-key","")];if(e)try{await e(...r,n.value)}catch(e){n.setCustomValidity(e.message)}}(n):Promise.resolve()))),r.forEach((e=>{if(!e.checkValidity()){const r=n.querySelector(`#${e.id}+.error`);r.textContent=e.validationMessage,r.classList.remove("hidden")}})),n.checkValidity()}const Dn={url:"#"},Fn=Dn,Wn=[{name:"get-weather",regular:n,alternate:o,hover:o},{name:"show-settings",regular:e,alternate:a,hover:a}];function $n(n,e=function(n){const e=n.closest(".weather").dataset.weather;return["Foggy","Dusty","Thunderstorm"].includes(e)?"alternate":"regular"}(n)){n.querySelector(".icon").src=Wn.find((({name:e})=>n.classList.contains(e)))[e]}function Mn(){vn.classList.add("hidden"),bn.classList.remove("hidden")}function Vn(){hn.classList.remove("hidden"),Cn.classList.add("hidden")}function Yn(){hn.classList.add("hidden"),Cn.classList.remove("hidden")}function Nn(){an.classList.add("hidden"),gn.classList.add("hidden"),dn.classList.remove("hidden"),un.textContent="",un.classList.add("hidden"),Yn()}function Pn({withImage:n=!0}={}){if(Nn(),nn.error)return un.textContent=nn.error,void un.classList.remove("hidden");var e;e=nn.body,dn.dataset.weather=e.weatherKeyword,pn.textContent=e.name,yn.textContent=e.country,Bn.textContent=e.temp,xn.textContent=e.weather,Sn.textContent=e.tempFeels,kn.textContent=e.tempMin,qn.textContent=e.tempMax,jn.textContent=e.windSpeed,Ln.textContent=e.windDirection,In.textContent=e.sunrise,Tn.textContent=e.sunset,[mn,En].forEach((n=>$n(n))),n&&async function(n){vn.classList.remove("hidden"),bn.classList.add("hidden"),await async function(n,e=Zn){try{Dn.url=await e(n)}catch(n){Dn.url="#"}return Dn}(n.weatherKeyword),bn.src=Fn.url,"#"===Fn.url&&Mn()}(nn.body)}function Rn(){[mn,En].forEach((n=>{n.querySelector(".text").classList.add("hidden"),n.querySelector(".icon").classList.remove("hidden")}))}function Kn(){[mn,En].forEach((n=>{n.querySelector(".text").classList.remove("hidden"),n.querySelector(".icon").classList.add("hidden")}))}function Un(){(window.innerWidth<=515?Rn:Kn)()}function On(n){$n(n.target.closest("button"))}function Xn(n){$n(n.target.closest("button"),"hover")}An.addEventListener("submit",(async function(n){if(n.preventDefault(),sn.classList.remove("hidden"),cn.classList.add("hidden"),!await zn(An))return an.classList.remove("hidden"),cn.classList.remove("hidden"),void sn.classList.add("hidden");var e;e={openWeatherMap:An.querySelector("#open-weather-map-api-key").value,giphy:An.querySelector("#giphy-api-key").value},Object.assign(q,e),Nn(),Vn(),await on("New York City"),Pn()})),ln.addEventListener("submit",(async function(n){if(n.preventDefault(),Vn(),!await zn(ln))return Yn();await on(ln.querySelector("#location").value),Pn()})),En.addEventListener("click",(function(n){n.preventDefault(),gn.classList.remove("hidden")})),wn.addEventListener("submit",(async function(n){if(n.preventDefault(),!await zn(wn))return;const e={...j};var r;r=Object.fromEntries(new FormData(wn).entries()),Object.keys(r).forEach((n=>{j[n]=+r[n]})),function(n){const e=Q.body;en(e,L[n.temp]),rn(e,T[n.time]),tn(e,I[n.speed])}(e),Pn({withImage:!1})})),fn.addEventListener("click",(function(n){n.preventDefault(),Nn()})),window.addEventListener("load",Un),window.addEventListener("resize",Un),[mn,En].forEach((n=>{n.addEventListener("mouseover",Xn),n.addEventListener("mouseout",On)})),bn.addEventListener("load",Mn)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QThCbkYsR0FFNUIsR0FEQUEsRUFBRXdSLHdCQUNVbEQsR0FBU3JCLElBQWdCLE9BRXJDLE1BQU0wRSxFQUFrQixJQUFLbk8sR2IzRHhCLElBQTRCb08sSWE0RGQxUCxPQUFPMlAsWUFBWSxJQUFJQyxTQUFTN0UsSUFBY3JDLFdiM0RqRTFJLE9BQU82UCxLQUFLSCxHQUFhekksU0FBUzZJLElBQ2hDeE8sRUFBYXdPLElBQVlKLEVBQVlJLEVBQVEsSU0rRjFDLFNBQXdCTCxHQUM3QixNQUFNMUksRUFBa0JKLEVBQVlDLEtBQ3BDRSxHQUF3QkMsRUFBaUJyRixFQUFVK04sRUFBZ0JsTyxPQUNuRWlHLEdBQXdCVCxFQUFpQm5GLEVBQVU2TixFQUFnQmhPLE9BQ25FcUcsR0FBeUJmLEVBQWlCcEYsRUFBVzhOLEVBQWdCak8sT0FDdkUsQ096Q0V1TyxDQUFlTixHQUNmaEIsR0FBWSxDQUFFQyxXQUFXLEdBQzNCLElBT0ExRCxHQUFtQnFFLGlCQUFpQixTQUpwQyxTQUFzQnZSLEdBQ3BCQSxFQUFFd1IsaUJBQ0ZkLElBQ0YsSUFRQTlRLE9BQU8yUixpQkFBaUIsT0FBUUosSUFDaEN2UixPQUFPMlIsaUJBQWlCLFNBQVVKLElBVWxDLENBQUN2RSxHQUFtQkcsSUFBZ0I1RCxTQUFTMEgsSUFDM0NBLEVBQU9VLGlCQUFpQixZQUFhRCxJQUNyQ1QsRUFBT1UsaUJBQWlCLFdBQVlGLEdBQWlCLElBR3ZEL0QsR0FBZWlFLGlCQUFpQixPQUFRaEIsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3N0eWxlcy9hbGwuY3NzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3N0eWxlcy9mb3JtLmNzcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zdHlsZXMvbG9naW4tdmlldy5jc3MiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvc3R5bGVzL3NldHRpbmdzLXZpZXcuY3NzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3N0eWxlcy93ZWF0aGVyLXZpZXcuY3NzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3dlYXRoZXItYXBwL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvc3R5bGVzL2FsbC5jc3M/MThlYyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zdHlsZXMvZm9ybS5jc3M/NzRlYSIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zdHlsZXMvbG9naW4tdmlldy5jc3M/N2ZiMiIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zdHlsZXMvc2V0dGluZ3Mtdmlldy5jc3M/YzlhOCIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zdHlsZXMvd2VhdGhlci12aWV3LmNzcz9lOWVlIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3NjcmlwdHMvc2V0dGluZ3MuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvc2NyaXB0cy91dGlsaXRpZXMuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvc2NyaXB0cy9vcGVuLXdlYXRoZXItbWFwLWFwaS1wcm92aWRlci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zY3JpcHRzL3RlbXAtY29udmVydC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zY3JpcHRzL3NwZWVkLWNvbnZlcnQuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvc2NyaXB0cy90aW1lLWNvbnZlcnQuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvc2NyaXB0cy93ZWF0aGVyLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3NjcmlwdHMvd2luZC1kaXJlY3Rpb24tY29udmVydC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zY3JpcHRzL2RvbS1lbGVtZW50cy5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zY3JpcHRzL2dpcGh5LWFwaS1wcm92aWRlci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zY3JpcHRzL2Zvcm0tdmFsaWRhdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zY3JpcHRzL3dlYXRoZXItZ2lmLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3NjcmlwdHMvdmlld3MuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvc2NyaXB0cy9kb20tZXZlbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcbiAgLS1zaXRlLWZvbnQ6ICdIZWx2ZXRpY2EnLCBzYW5zLXNlcmlmO1xcbiAgLS1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDE2NSk7XFxuICAtLXNlY29uZGFyeS1jb2xvcjogcmdiKDAsIDcwLCAxNjIpO1xcbiAgLS1saWdodC1zZWNvbmRhcnktY29sb3I6IHJnYigyMDAsIDIyNCwgMjU1KTtcXG4gIC0tYm94LXNoYWRvdy1jb2xvcjogcmdiKDgwLCA4MCwgODApO1xcbiAgLS1zdW5ueS1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1jb2xvcik7XFxuICAtLXN1bm55LWZvbnQtY29sb3I6IHZhcigtLXNlY29uZGFyeS1jb2xvcik7XFxuICAtLWNsb3VkLWNvbG9yOiByZ2IoMTY1LCAyMDQsIDI1NSk7XFxuICAtLWNsb3VkLWZvbnQtY29sb3I6IGJsYWNrO1xcbiAgLS1sb3dWaXMtY29sb3I6IHJnYig3MCwgNzAsIDcwKTtcXG4gIC0tbG93VmlzLWZvbnQtY29sb3I6IHdoaXRlO1xcbiAgLS1yYWluLWNvbG9yOiB2YXIoLS1zZWNvbmRhcnktY29sb3IpO1xcbiAgLS1yYWluLWZvbnQtY29sb3I6IHJnYigxNjUsIDIwNCwgMjU1KTtcXG4gIC0tc25vdy1jb2xvcjogd2hpdGU7XFxuICAtLXNub3ctZm9udC1jb2xvcjogYmxhY2s7XFxuICAtLXRodW5kZXItY29sb3I6IGJsYWNrO1xcbiAgLS10aHVuZGVyLWZvbnQtY29sb3I6IHZhcigtLWJhY2tncm91bmQtY29sb3IpO1xcbn1cXG5cXG5odG1sIHtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG59XFxuXFxuKiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG5ib2R5IHtcXG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1zaXRlLWZvbnQpO1xcbiAgbWluLWhlaWdodDogMTAwdmg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1saWdodC1zZWNvbmRhcnktY29sb3IpO1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuYSB7XFxuICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LWNvbG9yKTtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuXFxuYTpob3ZlciB7XFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXG59XFxuXFxuYnV0dG9uIHtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG4gIHBhZGRpbmc6IDAuNXJlbSAxLjVyZW07XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zZWNvbmRhcnktY29sb3IpO1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgYm9yZGVyLXJhZGl1czogMC4ycmVtO1xcbn1cXG5cXG5idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbGlnaHQtc2Vjb25kYXJ5LWNvbG9yKTtcXG4gIGNvbG9yOiBibGFjaztcXG59XFxuXFxuLmhpZGRlbiB7XFxuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XFxufVxcblxcbi5lcnJvciB7XFxuICBjb2xvcjogcmVkO1xcbn1cXG5cXG4uaWNvbiB7XFxuICB3aWR0aDogMS4yNXJlbTtcXG59XFxuXFxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NXB4KSB7XFxuICBodG1sIHtcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcbiAgfVxcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL2FsbC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxvQ0FBb0M7RUFDcEMsc0NBQXNDO0VBQ3RDLGtDQUFrQztFQUNsQywyQ0FBMkM7RUFDM0MsbUNBQW1DO0VBQ25DLHNDQUFzQztFQUN0QywwQ0FBMEM7RUFDMUMsaUNBQWlDO0VBQ2pDLHlCQUF5QjtFQUN6QiwrQkFBK0I7RUFDL0IsMEJBQTBCO0VBQzFCLG9DQUFvQztFQUNwQyxxQ0FBcUM7RUFDckMsbUJBQW1CO0VBQ25CLHdCQUF3QjtFQUN4QixzQkFBc0I7RUFDdEIsNkNBQTZDO0FBQy9DOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLDZCQUE2QjtFQUM3QixpQkFBaUI7RUFDakIsOENBQThDO0VBQzlDLFNBQVM7RUFDVCxVQUFVO0VBQ1YsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7RUFDN0IscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLHNCQUFzQjtFQUN0QixlQUFlO0VBQ2Ysd0NBQXdDO0VBQ3hDLFlBQVk7RUFDWixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSw4Q0FBOEM7RUFDOUMsWUFBWTtBQUNkOztBQUVBO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290IHtcXG4gIC0tc2l0ZS1mb250OiAnSGVsdmV0aWNhJywgc2Fucy1zZXJpZjtcXG4gIC0tYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAxNjUpO1xcbiAgLS1zZWNvbmRhcnktY29sb3I6IHJnYigwLCA3MCwgMTYyKTtcXG4gIC0tbGlnaHQtc2Vjb25kYXJ5LWNvbG9yOiByZ2IoMjAwLCAyMjQsIDI1NSk7XFxuICAtLWJveC1zaGFkb3ctY29sb3I6IHJnYig4MCwgODAsIDgwKTtcXG4gIC0tc3VubnktY29sb3I6IHZhcigtLWJhY2tncm91bmQtY29sb3IpO1xcbiAgLS1zdW5ueS1mb250LWNvbG9yOiB2YXIoLS1zZWNvbmRhcnktY29sb3IpO1xcbiAgLS1jbG91ZC1jb2xvcjogcmdiKDE2NSwgMjA0LCAyNTUpO1xcbiAgLS1jbG91ZC1mb250LWNvbG9yOiBibGFjaztcXG4gIC0tbG93VmlzLWNvbG9yOiByZ2IoNzAsIDcwLCA3MCk7XFxuICAtLWxvd1Zpcy1mb250LWNvbG9yOiB3aGl0ZTtcXG4gIC0tcmFpbi1jb2xvcjogdmFyKC0tc2Vjb25kYXJ5LWNvbG9yKTtcXG4gIC0tcmFpbi1mb250LWNvbG9yOiByZ2IoMTY1LCAyMDQsIDI1NSk7XFxuICAtLXNub3ctY29sb3I6IHdoaXRlO1xcbiAgLS1zbm93LWZvbnQtY29sb3I6IGJsYWNrO1xcbiAgLS10aHVuZGVyLWNvbG9yOiBibGFjaztcXG4gIC0tdGh1bmRlci1mb250LWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kLWNvbG9yKTtcXG59XFxuXFxuaHRtbCB7XFxuICBmb250LXNpemU6IDE4cHg7XFxufVxcblxcbioge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuYm9keSB7XFxuICBmb250LWZhbWlseTogdmFyKC0tc2l0ZS1mb250KTtcXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbGlnaHQtc2Vjb25kYXJ5LWNvbG9yKTtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbmEge1xcbiAgY29sb3I6IHZhcigtLXNlY29uZGFyeS1jb2xvcik7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxufVxcblxcbmE6aG92ZXIge1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XFxufVxcblxcbmJ1dHRvbiB7XFxuICBmb250LXNpemU6IDFyZW07XFxuICBwYWRkaW5nOiAwLjVyZW0gMS41cmVtO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc2Vjb25kYXJ5LWNvbG9yKTtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGJvcmRlci1yYWRpdXM6IDAuMnJlbTtcXG59XFxuXFxuYnV0dG9uOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWxpZ2h0LXNlY29uZGFyeS1jb2xvcik7XFxuICBjb2xvcjogYmxhY2s7XFxufVxcblxcbi5oaWRkZW4ge1xcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xcbn1cXG5cXG4uZXJyb3Ige1xcbiAgY29sb3I6IHJlZDtcXG59XFxuXFxuLmljb24ge1xcbiAgd2lkdGg6IDEuMjVyZW07XFxufVxcblxcbkBtZWRpYSAobWF4LXdpZHRoOiA1NzVweCkge1xcbiAgaHRtbCB7XFxuICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiZm9ybSB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAganVzdGlmeS1pdGVtczogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHJvdy1nYXA6IDFyZW07XFxufVxcblxcbi5maWVsZCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogMC4xcmVtO1xcbn1cXG5cXG5pbnB1dCwgc2VsZWN0IHtcXG4gIG1pbi13aWR0aDogMThyZW07XFxuICBtaW4taGVpZ2h0OiAxcmVtO1xcbiAgcGFkZGluZzogMC4yNXJlbTtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuXFxuc2VsZWN0IHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9mb3JtLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixxQkFBcUI7RUFDckIsbUJBQW1CO0VBQ25CLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsV0FBVztBQUNiOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7QUFDakJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiZm9ybSB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAganVzdGlmeS1pdGVtczogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHJvdy1nYXA6IDFyZW07XFxufVxcblxcbi5maWVsZCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogMC4xcmVtO1xcbn1cXG5cXG5pbnB1dCwgc2VsZWN0IHtcXG4gIG1pbi13aWR0aDogMThyZW07XFxuICBtaW4taGVpZ2h0OiAxcmVtO1xcbiAgcGFkZGluZzogMC4yNXJlbTtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuXFxuc2VsZWN0IHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmxvZ2luIHtcXG4gIG1hcmdpbjogNHJlbSAxcmVtO1xcbiAgaGVpZ2h0OiBtYXgtY29udGVudDtcXG4gIHBhZGRpbmc6IDJyZW0gMS41cmVtO1xcbiAgYm9yZGVyLXJhZGl1czogMC4ycmVtO1xcbiAgYm9yZGVyOiA2cHggZG91YmxlIHZhcigtLXNlY29uZGFyeS1jb2xvcik7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZ2FwOiAxcmVtO1xcbn1cXG5cXG4ubG9naW4gLmxpbmsge1xcbiAgbWFyZ2luLXRvcDogMC41cmVtO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4ubG9naW4gLmxvYWRpbmcge1xcbiAgY29sb3I6IHZhcigtLXNlY29uZGFyeS1jb2xvcik7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiAwLjVyZW07XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ubG9naW4gLmxvYWRpbmctaW1nIHtcXG4gIHdpZHRoOiAxLjVyZW07XFxufVxcblxcbkBtZWRpYSAobWF4LWhlaWdodDogNTc1cHgpIHtcXG4gIC5sb2dpbiB7XFxuICAgIG1hcmdpbjogMXJlbTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XFxuICAubG9naW4ge1xcbiAgICBtYXJnaW46IDAuMjVyZW07XFxuICAgIHBhZGRpbmc6IDAuNXJlbTtcXG4gIH1cXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9sb2dpbi12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLHFCQUFxQjtFQUNyQix5Q0FBeUM7RUFDekMsdUJBQXVCO0VBQ3ZCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsU0FBUztBQUNYOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLDZCQUE2QjtFQUM3QixhQUFhO0VBQ2IsV0FBVztFQUNYLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFO0lBQ0UsWUFBWTtFQUNkO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLGVBQWU7SUFDZixlQUFlO0VBQ2pCO0FBQ0ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmxvZ2luIHtcXG4gIG1hcmdpbjogNHJlbSAxcmVtO1xcbiAgaGVpZ2h0OiBtYXgtY29udGVudDtcXG4gIHBhZGRpbmc6IDJyZW0gMS41cmVtO1xcbiAgYm9yZGVyLXJhZGl1czogMC4ycmVtO1xcbiAgYm9yZGVyOiA2cHggZG91YmxlIHZhcigtLXNlY29uZGFyeS1jb2xvcik7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZ2FwOiAxcmVtO1xcbn1cXG5cXG4ubG9naW4gLmxpbmsge1xcbiAgbWFyZ2luLXRvcDogMC41cmVtO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4ubG9naW4gLmxvYWRpbmcge1xcbiAgY29sb3I6IHZhcigtLXNlY29uZGFyeS1jb2xvcik7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiAwLjVyZW07XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ubG9naW4gLmxvYWRpbmctaW1nIHtcXG4gIHdpZHRoOiAxLjVyZW07XFxufVxcblxcbkBtZWRpYSAobWF4LWhlaWdodDogNTc1cHgpIHtcXG4gIC5sb2dpbiB7XFxuICAgIG1hcmdpbjogMXJlbTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XFxuICAubG9naW4ge1xcbiAgICBtYXJnaW46IDAuMjVyZW07XFxuICAgIHBhZGRpbmc6IDAuNXJlbTtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnNldHRpbmdzIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHotaW5kZXg6IDE7XFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZzogMnJlbTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43NSk7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogc3RhcnQ7XFxufVxcblxcbi5zZXR0aW5ncyBmb3JtIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgbWFyZ2luOiA0cmVtIDA7XFxuICBtaW4td2lkdGg6IDQ1dnc7XFxuICBwYWRkaW5nOiAwLjVyZW0gMC41cmVtIDEuNXJlbTtcXG4gIGJvcmRlci1yYWRpdXM6IDAuMnJlbTtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLXNlY29uZGFyeS1jb2xvcik7XFxufVxcblxcbi5zZXR0aW5ncyAuaGlkZSB7XFxuICBqdXN0aWZ5LXNlbGY6IGVuZDtcXG4gIHBhZGRpbmc6IDAuMjVyZW07XFxuICBoZWlnaHQ6IDJyZW07XFxuICB3aWR0aDogMnJlbTtcXG4gIGZvbnQtd2VpZ2h0OiA5MDA7XFxufVxcblxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MTVweCkge1xcbiAgLnNldHRpbmdzIGZvcm0ge1xcbiAgICBtYXJnaW46IDA7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWF4LXdpZHRoOiAzNzVweCkge1xcbiAgLnNldHRpbmdzIHtcXG4gICAgcGFkZGluZzogMXJlbTtcXG4gICAganVzdGlmeS1jb250ZW50OiBzdHJldGNoO1xcbiAgfVxcblxcbiAgLnNldHRpbmdzIGZvcm0ge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cXG5cXG4gIC5zZXR0aW5ncyBzZWxlY3Qge1xcbiAgICBtaW4td2lkdGg6IDE2cmVtO1xcbiAgfVxcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL3NldHRpbmdzLXZpZXcuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixpQkFBaUI7RUFDakIsV0FBVztFQUNYLGFBQWE7RUFDYixxQ0FBcUM7RUFDckMsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIsY0FBYztFQUNkLGVBQWU7RUFDZiw2QkFBNkI7RUFDN0IscUJBQXFCO0VBQ3JCLHdDQUF3QztBQUMxQzs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRTtJQUNFLFNBQVM7RUFDWDtBQUNGOztBQUVBO0VBQ0U7SUFDRSxhQUFhO0lBQ2Isd0JBQXdCO0VBQzFCOztFQUVBO0lBQ0UsV0FBVztFQUNiOztFQUVBO0lBQ0UsZ0JBQWdCO0VBQ2xCO0FBQ0ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnNldHRpbmdzIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHotaW5kZXg6IDE7XFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZzogMnJlbTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43NSk7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogc3RhcnQ7XFxufVxcblxcbi5zZXR0aW5ncyBmb3JtIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgbWFyZ2luOiA0cmVtIDA7XFxuICBtaW4td2lkdGg6IDQ1dnc7XFxuICBwYWRkaW5nOiAwLjVyZW0gMC41cmVtIDEuNXJlbTtcXG4gIGJvcmRlci1yYWRpdXM6IDAuMnJlbTtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLXNlY29uZGFyeS1jb2xvcik7XFxufVxcblxcbi5zZXR0aW5ncyAuaGlkZSB7XFxuICBqdXN0aWZ5LXNlbGY6IGVuZDtcXG4gIHBhZGRpbmc6IDAuMjVyZW07XFxuICBoZWlnaHQ6IDJyZW07XFxuICB3aWR0aDogMnJlbTtcXG4gIGZvbnQtd2VpZ2h0OiA5MDA7XFxufVxcblxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MTVweCkge1xcbiAgLnNldHRpbmdzIGZvcm0ge1xcbiAgICBtYXJnaW46IDA7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWF4LXdpZHRoOiAzNzVweCkge1xcbiAgLnNldHRpbmdzIHtcXG4gICAgcGFkZGluZzogMXJlbTtcXG4gICAganVzdGlmeS1jb250ZW50OiBzdHJldGNoO1xcbiAgfVxcblxcbiAgLnNldHRpbmdzIGZvcm0ge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cXG5cXG4gIC5zZXR0aW5ncyBzZWxlY3Qge1xcbiAgICBtaW4td2lkdGg6IDE2cmVtO1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIud2VhdGhlciB7XFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGdhcDogMnJlbTtcXG4gIHBhZGRpbmctYm90dG9tOiAxcmVtO1xcbn1cXG5cXG4ud2VhdGhlciA+ICoge1xcbiAgcGFkZGluZzogMXJlbTtcXG4gIGJvcmRlci1yYWRpdXM6IDAuMnJlbTtcXG4gIGJvcmRlcjogNnB4IGRvdWJsZSB2YXIoLS1zZWNvbmRhcnktY29sb3IpO1xcbn1cXG5cXG4ud2VhdGhlciA+IGZvcm0uc2VhcmNoIHtcXG4gIHBhZGRpbmc6IDEuNXJlbSAxcmVtO1xcbiAgd2lkdGg6IDEwMHZ3O1xcbiAgYm9yZGVyLXJhZGl1czogMDtcXG4gIGJvcmRlci10b3A6IG5vbmU7XFxuICBib3JkZXItbGVmdDogbm9uZTtcXG4gIGJvcmRlci1yaWdodDogbm9uZTtcXG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHZhcigtLWJveC1zaGFkb3ctY29sb3IpO1xcbiAgZ3JpZC10ZW1wbGF0ZTogMS4ycmVtIDJyZW0gbWF4LWNvbnRlbnQgLyByZXBlYXQoMywgbWF4LWNvbnRlbnQpO1xcbiAgY29sdW1uLWdhcDogMC41cmVtO1xcbiAgcm93LWdhcDogMDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XFxufVxcblxcbi53ZWF0aGVyIGZvcm0uc2VhcmNoIC5maWVsZCB7XFxuICBncmlkLXJvdzogMSAvIHNwYW4gMztcXG59XFxuXFxuLndlYXRoZXIgZm9ybS5zZWFyY2ggaW5wdXQge1xcbiAgaGVpZ2h0OiAycmVtO1xcbn1cXG5cXG4ud2VhdGhlciBmb3JtLnNlYXJjaCBidXR0b24ge1xcbiAgcGFkZGluZzogMC4yNXJlbSAwLjVyZW07XFxufVxcblxcbi53ZWF0aGVyIGZvcm0uc2VhcmNoIGJ1dHRvblt0eXBlPVxcXCJzdWJtaXRcXFwiXSB7XFxuICBncmlkLXJvdzogMjtcXG4gIGdyaWQtY29sdW1uOiAyO1xcbn1cXG5cXG4ud2VhdGhlciBmb3JtLnNlYXJjaCBidXR0b24uc2hvdy1zZXR0aW5ncyB7XFxuICBncmlkLXJvdzogMjtcXG4gIGdyaWQtY29sdW1uOiAzO1xcbn1cXG5cXG4ud2VhdGhlciA+IC5sb2FkaW5nLmxvYWRpbmcge1xcbiAgYm9yZGVyOiBub25lO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LWNvbG9yKTtcXG4gIG1hcmdpbi10b3A6IDVyZW07XFxuICBmb250LXNpemU6IDNyZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiAwLjVyZW07XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi53ZWF0aGVyIC5sb2FkaW5nLWltZyB7XFxuICB3aWR0aDogNXJlbTtcXG59XFxuXFxuLndlYXRoZXIgLndlYXRoZXItYm9keSB7XFxuICBtYXgtd2lkdGg6IDk1dnc7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogMXJlbTtcXG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHZhcigtLWJveC1zaGFkb3ctY29sb3IpO1xcbn1cXG5cXG4ud2VhdGhlciAud2VhdGhlci1ib2R5IC5tYWluIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiAycmVtO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBmb250LXdlaWdodDogODAwO1xcbn1cXG5cXG4ud2VhdGhlciAud2VhdGhlci1ib2R5IC5tYWluLWltZy1jb250YWluZXIge1xcbiAgbWF4LXdpZHRoOiA0NXZ3O1xcbiAgaGVpZ2h0OiAzMHZoO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLndlYXRoZXIgLndlYXRoZXItYm9keSAubWFpbi1pbWcge1xcbiAgYm9yZGVyLXJhZGl1czogMC4ycmVtO1xcbiAgb2JqZWN0LWZpdDogY292ZXI7XFxuICBtYXgtd2lkdGg6IDQ1dnc7XFxuICBoZWlnaHQ6IDMwdmg7XFxufVxcblxcbi53ZWF0aGVyIC53ZWF0aGVyLWJvZHkgLm1haW4taW5mbyB7XFxuICBmb250LXNpemU6IDNyZW07XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi53ZWF0aGVyIC53ZWF0aGVyLWJvZHkgLmRldGFpbHMge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGU6IHJlcGVhdCgyLCBtYXgtY29udGVudCkgLyByZXBlYXQoMiwgbWF4LWNvbnRlbnQpO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxuICBjb2x1bW4tZ2FwOiAxcmVtO1xcbn1cXG5cXG4ud2VhdGhlciAud2VhdGhlci1ib2R5IC50ZW1wZXJhdHVyZXMge1xcbiAgZ3JpZC1yb3c6IDEgLyBzcGFuIDI7XFxufVxcblxcbi53ZWF0aGVyW2RhdGEtd2VhdGhlcj0nU3VubnknXSA+ICoge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc3VubnktY29sb3IpO1xcbiAgY29sb3I6IHZhcigtLXN1bm55LWZvbnQtY29sb3IpO1xcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1zdW5ueS1mb250LWNvbG9yKTtcXG59XFxuXFxuLndlYXRoZXJbZGF0YS13ZWF0aGVyPSdTdW5ueSddIGJ1dHRvbjpub3QoOmhvdmVyKSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zdW5ueS1mb250LWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS1zdW5ueS1jb2xvcik7XFxufVxcblxcbi53ZWF0aGVyW2RhdGEtd2VhdGhlcj0nQ2xvdWRzJ10+KiB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbG91ZC1jb2xvcik7XFxuICBjb2xvcjogdmFyKC0tY2xvdWQtZm9udC1jb2xvcik7XFxuICBib3JkZXItY29sb3I6IHZhcigtLWNsb3VkLWZvbnQtY29sb3IpO1xcbn1cXG5cXG4ud2VhdGhlcltkYXRhLXdlYXRoZXI9J0Nsb3VkcyddIGJ1dHRvbjpub3QoOmhvdmVyKSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbG91ZC1mb250LWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS1jbG91ZC1jb2xvcik7XFxufVxcblxcbi53ZWF0aGVyW2RhdGEtd2VhdGhlcj0nRm9nZ3knXSA+ICosXFxuLndlYXRoZXJbZGF0YS13ZWF0aGVyPSdEdXN0eSddID4gKiB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1sb3dWaXMtY29sb3IpO1xcbiAgY29sb3I6IHZhcigtLWxvd1Zpcy1mb250LWNvbG9yKTtcXG4gIGJvcmRlci1jb2xvcjogdmFyKC0tbG93VmlzLWZvbnQtY29sb3IpO1xcbn1cXG5cXG4ud2VhdGhlcltkYXRhLXdlYXRoZXI9J0ZvZ2d5J10gYnV0dG9uOm5vdCg6aG92ZXIpLFxcbi53ZWF0aGVyW2RhdGEtd2VhdGhlcj0nRHVzdHknXSBidXR0b246bm90KDpob3Zlcikge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbG93VmlzLWZvbnQtY29sb3IpO1xcbiAgY29sb3I6IHZhcigtLWxvd1Zpcy1jb2xvcik7XFxufVxcblxcbi53ZWF0aGVyW2RhdGEtd2VhdGhlcj0nUmFpbiddID4gKiB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1yYWluLWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS1yYWluLWZvbnQtY29sb3IpO1xcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1yYWluLWZvbnQtY29sb3IpO1xcbn1cXG5cXG4ud2VhdGhlcltkYXRhLXdlYXRoZXI9J1JhaW4nXSBidXR0b246bm90KDpob3Zlcikge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcmFpbi1mb250LWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS1yYWluLWNvbG9yKTtcXG59XFxuXFxuLndlYXRoZXJbZGF0YS13ZWF0aGVyPSdTbm93J10gPiAqIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNub3ctY29sb3IpO1xcbiAgY29sb3I6IHZhcigtLXNub3ctZm9udC1jb2xvcik7XFxuICBib3JkZXItY29sb3I6IHZhcigtLXNub3ctZm9udC1jb2xvcik7XFxufVxcblxcbi53ZWF0aGVyW2RhdGEtd2VhdGhlcj0nU25vdyddIGJ1dHRvbjpub3QoOmhvdmVyKSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zbm93LWZvbnQtY29sb3IpO1xcbiAgY29sb3I6IHZhcigtLXNub3ctY29sb3IpO1xcbn1cXG5cXG4ud2VhdGhlcltkYXRhLXdlYXRoZXI9J1RodW5kZXJzdG9ybSddID4gKiB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aHVuZGVyLWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS10aHVuZGVyLWZvbnQtY29sb3IpO1xcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS10aHVuZGVyLWZvbnQtY29sb3IpO1xcbn1cXG5cXG4ud2VhdGhlcltkYXRhLXdlYXRoZXI9J1RodW5kZXJzdG9ybSddIGJ1dHRvbjpub3QoOmhvdmVyKSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aHVuZGVyLWZvbnQtY29sb3IpO1xcbiAgY29sb3I6IHZhcigtLXRodW5kZXItY29sb3IpO1xcbn1cXG5cXG5AbWVkaWEgKG1heC13aWR0aDogNTc1cHgpIHtcXG4gIC53ZWF0aGVyIHtcXG4gICAgZ2FwOiAxcmVtO1xcbiAgfVxcblxcbiAgLndlYXRoZXIgLndlYXRoZXItYm9keSB7XFxuICAgIGdhcDogMC41cmVtO1xcbiAgfVxcblxcbiAgLndlYXRoZXIgLndlYXRoZXItYm9keSAubWFpbiB7XFxuICAgIGdhcDogMXJlbTtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWF4LXdpZHRoOiA1MTVweCkge1xcbiAgLndlYXRoZXIgZm9ybS5zZWFyY2gge1xcbiAgICBjb2x1bW4tZ2FwOiAwLjI1cmVtO1xcbiAgICBncmlkLXRlbXBsYXRlOiAxLjJyZW0gMnJlbSBtYXgtY29udGVudCAvIDFmciBtYXgtY29udGVudCBtYXgtY29udGVudDtcXG4gICAganVzdGlmeS1pdGVtczogc3RyZXRjaDtcXG4gIH1cXG5cXG4gIC53ZWF0aGVyIGZvcm0uc2VhcmNoIGlucHV0IHtcXG4gICAgbWluLXdpZHRoOiAxNHJlbTtcXG4gIH1cXG5cXG4gIC53ZWF0aGVyIGZvcm0uc2VhcmNoIGJ1dHRvblt0eXBlPVxcXCJzdWJtaXRcXFwiXSxcXG4gIC53ZWF0aGVyIGZvcm0uc2VhcmNoIGJ1dHRvbi5zaG93LXNldHRpbmdzIHtcXG4gICAgcGFkZGluZzogMC4yNXJlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIH1cXG5cXG4gIC53ZWF0aGVyIC53ZWF0aGVyLWJvZHkgLm1haW4taW5mbyB7XFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcbiAgfVxcblxcbiAgLndlYXRoZXIgLndlYXRoZXItYm9keSAuZGV0YWlscyB7XFxuICAgIGdyaWQtdGVtcGxhdGU6IHJlcGVhdCgzLCBtYXgtY29udGVudCkgLyBtYXgtY29udGVudDtcXG4gIH1cXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy93ZWF0aGVyLXZpZXcuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLFNBQVM7RUFDVCxvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IscUJBQXFCO0VBQ3JCLHlDQUF5QztBQUMzQzs7QUFFQTtFQUNFLG9CQUFvQjtFQUNwQixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLDRDQUE0QztFQUM1QywrREFBK0Q7RUFDL0Qsa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVix1QkFBdUI7RUFDdkIsb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFlBQVk7RUFDWiw2QkFBNkI7RUFDN0IsNkJBQTZCO0VBQzdCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsYUFBYTtFQUNiLFdBQVc7RUFDWCx1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsU0FBUztFQUNULDRDQUE0QztBQUM5Qzs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsU0FBUztFQUNULHVCQUF1QjtFQUN2QixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsWUFBWTtFQUNaLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4REFBOEQ7RUFDOUQsNkJBQTZCO0VBQzdCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLG9DQUFvQztFQUNwQyw4QkFBOEI7RUFDOUIscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UseUNBQXlDO0VBQ3pDLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLG9DQUFvQztFQUNwQyw4QkFBOEI7RUFDOUIscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UseUNBQXlDO0VBQ3pDLHlCQUF5QjtBQUMzQjs7QUFFQTs7RUFFRSxxQ0FBcUM7RUFDckMsK0JBQStCO0VBQy9CLHNDQUFzQztBQUN4Qzs7QUFFQTs7RUFFRSwwQ0FBMEM7RUFDMUMsMEJBQTBCO0FBQzVCOztBQUVBO0VBQ0UsbUNBQW1DO0VBQ25DLDZCQUE2QjtFQUM3QixvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSx3Q0FBd0M7RUFDeEMsd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsbUNBQW1DO0VBQ25DLDZCQUE2QjtFQUM3QixvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSx3Q0FBd0M7RUFDeEMsd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0Usc0NBQXNDO0VBQ3RDLGdDQUFnQztFQUNoQyx1Q0FBdUM7QUFDekM7O0FBRUE7RUFDRSwyQ0FBMkM7RUFDM0MsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0U7SUFDRSxTQUFTO0VBQ1g7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxTQUFTO0lBQ1QsNkJBQTZCO0VBQy9CO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLG1CQUFtQjtJQUNuQixvRUFBb0U7SUFDcEUsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsZ0JBQWdCO0VBQ2xCOztFQUVBOztJQUVFLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsbURBQW1EO0VBQ3JEO0FBQ0ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLndlYXRoZXIge1xcbiAgbWluLWhlaWdodDogMTAwdmg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDJyZW07XFxuICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcXG59XFxuXFxuLndlYXRoZXIgPiAqIHtcXG4gIHBhZGRpbmc6IDFyZW07XFxuICBib3JkZXItcmFkaXVzOiAwLjJyZW07XFxuICBib3JkZXI6IDZweCBkb3VibGUgdmFyKC0tc2Vjb25kYXJ5LWNvbG9yKTtcXG59XFxuXFxuLndlYXRoZXIgPiBmb3JtLnNlYXJjaCB7XFxuICBwYWRkaW5nOiAxLjVyZW0gMXJlbTtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGJvcmRlci1yYWRpdXM6IDA7XFxuICBib3JkZXItdG9wOiBub25lO1xcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XFxuICBib3JkZXItcmlnaHQ6IG5vbmU7XFxuICBib3gtc2hhZG93OiAwIDAgMTBweCB2YXIoLS1ib3gtc2hhZG93LWNvbG9yKTtcXG4gIGdyaWQtdGVtcGxhdGU6IDEuMnJlbSAycmVtIG1heC1jb250ZW50IC8gcmVwZWF0KDMsIG1heC1jb250ZW50KTtcXG4gIGNvbHVtbi1nYXA6IDAuNXJlbTtcXG4gIHJvdy1nYXA6IDA7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xcbn1cXG5cXG4ud2VhdGhlciBmb3JtLnNlYXJjaCAuZmllbGQge1xcbiAgZ3JpZC1yb3c6IDEgLyBzcGFuIDM7XFxufVxcblxcbi53ZWF0aGVyIGZvcm0uc2VhcmNoIGlucHV0IHtcXG4gIGhlaWdodDogMnJlbTtcXG59XFxuXFxuLndlYXRoZXIgZm9ybS5zZWFyY2ggYnV0dG9uIHtcXG4gIHBhZGRpbmc6IDAuMjVyZW0gMC41cmVtO1xcbn1cXG5cXG4ud2VhdGhlciBmb3JtLnNlYXJjaCBidXR0b25bdHlwZT1cXFwic3VibWl0XFxcIl0ge1xcbiAgZ3JpZC1yb3c6IDI7XFxuICBncmlkLWNvbHVtbjogMjtcXG59XFxuXFxuLndlYXRoZXIgZm9ybS5zZWFyY2ggYnV0dG9uLnNob3ctc2V0dGluZ3Mge1xcbiAgZ3JpZC1yb3c6IDI7XFxuICBncmlkLWNvbHVtbjogMztcXG59XFxuXFxuLndlYXRoZXIgPiAubG9hZGluZy5sb2FkaW5nIHtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgY29sb3I6IHZhcigtLXNlY29uZGFyeS1jb2xvcik7XFxuICBtYXJnaW4tdG9wOiA1cmVtO1xcbiAgZm9udC1zaXplOiAzcmVtO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGdhcDogMC41cmVtO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ud2VhdGhlciAubG9hZGluZy1pbWcge1xcbiAgd2lkdGg6IDVyZW07XFxufVxcblxcbi53ZWF0aGVyIC53ZWF0aGVyLWJvZHkge1xcbiAgbWF4LXdpZHRoOiA5NXZ3O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBnYXA6IDFyZW07XFxuICBib3gtc2hhZG93OiAwIDAgMTBweCB2YXIoLS1ib3gtc2hhZG93LWNvbG9yKTtcXG59XFxuXFxuLndlYXRoZXIgLndlYXRoZXItYm9keSAubWFpbiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGdhcDogMnJlbTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgZm9udC13ZWlnaHQ6IDgwMDtcXG59XFxuXFxuLndlYXRoZXIgLndlYXRoZXItYm9keSAubWFpbi1pbWctY29udGFpbmVyIHtcXG4gIG1heC13aWR0aDogNDV2dztcXG4gIGhlaWdodDogMzB2aDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi53ZWF0aGVyIC53ZWF0aGVyLWJvZHkgLm1haW4taW1nIHtcXG4gIGJvcmRlci1yYWRpdXM6IDAuMnJlbTtcXG4gIG9iamVjdC1maXQ6IGNvdmVyO1xcbiAgbWF4LXdpZHRoOiA0NXZ3O1xcbiAgaGVpZ2h0OiAzMHZoO1xcbn1cXG5cXG4ud2VhdGhlciAud2VhdGhlci1ib2R5IC5tYWluLWluZm8ge1xcbiAgZm9udC1zaXplOiAzcmVtO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4ud2VhdGhlciAud2VhdGhlci1ib2R5IC5kZXRhaWxzIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlOiByZXBlYXQoMiwgbWF4LWNvbnRlbnQpIC8gcmVwZWF0KDIsIG1heC1jb250ZW50KTtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcbiAgY29sdW1uLWdhcDogMXJlbTtcXG59XFxuXFxuLndlYXRoZXIgLndlYXRoZXItYm9keSAudGVtcGVyYXR1cmVzIHtcXG4gIGdyaWQtcm93OiAxIC8gc3BhbiAyO1xcbn1cXG5cXG4ud2VhdGhlcltkYXRhLXdlYXRoZXI9J1N1bm55J10gPiAqIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXN1bm55LWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS1zdW5ueS1mb250LWNvbG9yKTtcXG4gIGJvcmRlci1jb2xvcjogdmFyKC0tc3VubnktZm9udC1jb2xvcik7XFxufVxcblxcbi53ZWF0aGVyW2RhdGEtd2VhdGhlcj0nU3VubnknXSBidXR0b246bm90KDpob3Zlcikge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc3VubnktZm9udC1jb2xvcik7XFxuICBjb2xvcjogdmFyKC0tc3VubnktY29sb3IpO1xcbn1cXG5cXG4ud2VhdGhlcltkYXRhLXdlYXRoZXI9J0Nsb3VkcyddPioge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2xvdWQtY29sb3IpO1xcbiAgY29sb3I6IHZhcigtLWNsb3VkLWZvbnQtY29sb3IpO1xcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jbG91ZC1mb250LWNvbG9yKTtcXG59XFxuXFxuLndlYXRoZXJbZGF0YS13ZWF0aGVyPSdDbG91ZHMnXSBidXR0b246bm90KDpob3Zlcikge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2xvdWQtZm9udC1jb2xvcik7XFxuICBjb2xvcjogdmFyKC0tY2xvdWQtY29sb3IpO1xcbn1cXG5cXG4ud2VhdGhlcltkYXRhLXdlYXRoZXI9J0ZvZ2d5J10gPiAqLFxcbi53ZWF0aGVyW2RhdGEtd2VhdGhlcj0nRHVzdHknXSA+ICoge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbG93VmlzLWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS1sb3dWaXMtZm9udC1jb2xvcik7XFxuICBib3JkZXItY29sb3I6IHZhcigtLWxvd1Zpcy1mb250LWNvbG9yKTtcXG59XFxuXFxuLndlYXRoZXJbZGF0YS13ZWF0aGVyPSdGb2dneSddIGJ1dHRvbjpub3QoOmhvdmVyKSxcXG4ud2VhdGhlcltkYXRhLXdlYXRoZXI9J0R1c3R5J10gYnV0dG9uOm5vdCg6aG92ZXIpIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWxvd1Zpcy1mb250LWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS1sb3dWaXMtY29sb3IpO1xcbn1cXG5cXG4ud2VhdGhlcltkYXRhLXdlYXRoZXI9J1JhaW4nXSA+ICoge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcmFpbi1jb2xvcik7XFxuICBjb2xvcjogdmFyKC0tcmFpbi1mb250LWNvbG9yKTtcXG4gIGJvcmRlci1jb2xvcjogdmFyKC0tcmFpbi1mb250LWNvbG9yKTtcXG59XFxuXFxuLndlYXRoZXJbZGF0YS13ZWF0aGVyPSdSYWluJ10gYnV0dG9uOm5vdCg6aG92ZXIpIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXJhaW4tZm9udC1jb2xvcik7XFxuICBjb2xvcjogdmFyKC0tcmFpbi1jb2xvcik7XFxufVxcblxcbi53ZWF0aGVyW2RhdGEtd2VhdGhlcj0nU25vdyddID4gKiB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zbm93LWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS1zbm93LWZvbnQtY29sb3IpO1xcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1zbm93LWZvbnQtY29sb3IpO1xcbn1cXG5cXG4ud2VhdGhlcltkYXRhLXdlYXRoZXI9J1Nub3cnXSBidXR0b246bm90KDpob3Zlcikge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc25vdy1mb250LWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS1zbm93LWNvbG9yKTtcXG59XFxuXFxuLndlYXRoZXJbZGF0YS13ZWF0aGVyPSdUaHVuZGVyc3Rvcm0nXSA+ICoge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGh1bmRlci1jb2xvcik7XFxuICBjb2xvcjogdmFyKC0tdGh1bmRlci1mb250LWNvbG9yKTtcXG4gIGJvcmRlci1jb2xvcjogdmFyKC0tdGh1bmRlci1mb250LWNvbG9yKTtcXG59XFxuXFxuLndlYXRoZXJbZGF0YS13ZWF0aGVyPSdUaHVuZGVyc3Rvcm0nXSBidXR0b246bm90KDpob3Zlcikge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGh1bmRlci1mb250LWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS10aHVuZGVyLWNvbG9yKTtcXG59XFxuXFxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NXB4KSB7XFxuICAud2VhdGhlciB7XFxuICAgIGdhcDogMXJlbTtcXG4gIH1cXG5cXG4gIC53ZWF0aGVyIC53ZWF0aGVyLWJvZHkge1xcbiAgICBnYXA6IDAuNXJlbTtcXG4gIH1cXG5cXG4gIC53ZWF0aGVyIC53ZWF0aGVyLWJvZHkgLm1haW4ge1xcbiAgICBnYXA6IDFyZW07XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgKG1heC13aWR0aDogNTE1cHgpIHtcXG4gIC53ZWF0aGVyIGZvcm0uc2VhcmNoIHtcXG4gICAgY29sdW1uLWdhcDogMC4yNXJlbTtcXG4gICAgZ3JpZC10ZW1wbGF0ZTogMS4ycmVtIDJyZW0gbWF4LWNvbnRlbnQgLyAxZnIgbWF4LWNvbnRlbnQgbWF4LWNvbnRlbnQ7XFxuICAgIGp1c3RpZnktaXRlbXM6IHN0cmV0Y2g7XFxuICB9XFxuXFxuICAud2VhdGhlciBmb3JtLnNlYXJjaCBpbnB1dCB7XFxuICAgIG1pbi13aWR0aDogMTRyZW07XFxuICB9XFxuXFxuICAud2VhdGhlciBmb3JtLnNlYXJjaCBidXR0b25bdHlwZT1cXFwic3VibWl0XFxcIl0sXFxuICAud2VhdGhlciBmb3JtLnNlYXJjaCBidXR0b24uc2hvdy1zZXR0aW5ncyB7XFxuICAgIHBhZGRpbmc6IDAuMjVyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICB9XFxuXFxuICAud2VhdGhlciAud2VhdGhlci1ib2R5IC5tYWluLWluZm8ge1xcbiAgICBmb250LXNpemU6IDEuNXJlbTtcXG4gIH1cXG5cXG4gIC53ZWF0aGVyIC53ZWF0aGVyLWJvZHkgLmRldGFpbHMge1xcbiAgICBncmlkLXRlbXBsYXRlOiByZXBlYXQoMywgbWF4LWNvbnRlbnQpIC8gbWF4LWNvbnRlbnQ7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYWxsLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYWxsLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9mb3JtLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZm9ybS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbG9naW4tdmlldy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2xvZ2luLXZpZXcuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3NldHRpbmdzLXZpZXcuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zZXR0aW5ncy12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi93ZWF0aGVyLXZpZXcuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi93ZWF0aGVyLXZpZXcuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGNvbnN0IGFwaUtleXMgPSB7fTtcbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVBcGlLZXlzKG5ld0tleXMpIHtcbiAgT2JqZWN0LmFzc2lnbihhcGlLZXlzLCBuZXdLZXlzKTtcbn1cblxuZXhwb3J0IGNvbnN0IHVuaXRTZXR0aW5ncyA9IHsgdGVtcDogMSwgc3BlZWQ6IDEsIHRpbWU6IDEgfTtcbmV4cG9ydCBjb25zdCB0ZW1wVW5pdHMgPSBbJ0snLCAnwrBGJywgJ8KwQyddO1xuZXhwb3J0IGNvbnN0IHNwZWVkVW5pdHMgPSBbJ21ldGVyLHNlY29uZCcsICdtaWxlLGhvdXInXTtcbmV4cG9ydCBjb25zdCB0aW1lVW5pdHMgPSBbJ2hyMjQnLCAnaHIxMiddO1xuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVVuaXRTZXR0aW5ncyhuZXdTZXR0aW5ncykge1xuICBPYmplY3Qua2V5cyhuZXdTZXR0aW5ncykuZm9yRWFjaCgoc2V0dGluZykgPT4ge1xuICAgIHVuaXRTZXR0aW5nc1tzZXR0aW5nXSA9ICtuZXdTZXR0aW5nc1tzZXR0aW5nXTtcbiAgfSk7XG59XG5cbmV4cG9ydCBjb25zdCBsb2NhdGlvblNldHRpbmdzID0geyBkZWZhdWx0Q2l0eTogJ05ldyBZb3JrIENpdHknIH07XG4iLCJleHBvcnQgZnVuY3Rpb24gcm91bmQobnVtLCBwbGFjZSkge1xuICByZXR1cm4gTnVtYmVyKG51bSkudG9GaXhlZChwbGFjZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYXBpdGFsaXplKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nXG4gICAgLnNwbGl0KCcgJylcbiAgICAubWFwKCh3b3JkKSA9PiB3b3JkWzBdLnRvVXBwZXJDYXNlKCkgKyB3b3JkLnNsaWNlKDEpKVxuICAgIC5qb2luKCcgJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkdXJhdGlvbihtaWxsaXNlY29uZHMsIC4uLnByb21pc2VzKSB7XG4gIGNvbnN0IHRpbWVvdXQgPSBuZXcgUHJvbWlzZSgoXywgcmVqZWN0KSA9PiB7XG4gICAgc2V0VGltZW91dChcbiAgICAgICgpID0+IHJlamVjdChuZXcgRXJyb3IoJ1RpbWVkIG91dC4gUGxlYXNlIHRyeSBhZ2Fpbi4nKSksXG4gICAgICBtaWxsaXNlY29uZHNcbiAgICApO1xuICB9KTtcblxuICByZXR1cm4gUHJvbWlzZS5yYWNlKFsuLi5wcm9taXNlcywgdGltZW91dF0pO1xufVxuIiwiaW1wb3J0IHsgYXBpS2V5cyB9IGZyb20gJy4vc2V0dGluZ3MnO1xuaW1wb3J0IHsgZHVyYXRpb24gfSBmcm9tICcuL3V0aWxpdGllcyc7XG5cbmZ1bmN0aW9uIHBhcmFtZXRlcml6ZUxvY2F0aW9uKGxvY2F0aW9uKSB7XG4gIHJldHVybiBsb2NhdGlvbi5yZXBsYWNlKCcgJywgJysnKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gb3BlbldlYXRoZXJNYXBBUElQcm92aWRlcihcbiAgbG9jYXRpb24sXG4gIGFwaUtleSA9IGFwaUtleXMub3BlbldlYXRoZXJNYXBcbikge1xuICBjb25zdCBsb2NhdGlvblBhcmFtID0gcGFyYW1ldGVyaXplTG9jYXRpb24obG9jYXRpb24pO1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGR1cmF0aW9uKFxuICAgIDgwMDAsXG4gICAgZmV0Y2goXG4gICAgICBgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/YXBwaWQ9JHthcGlLZXl9JnE9JHtsb2NhdGlvblBhcmFtfWBcbiAgICApXG4gICk7XG4gIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIEFQSSBLZXknKTtcbiAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA0KSB0aHJvdyBuZXcgRXJyb3IoJ0NpdHkgbm90IGZvdW5kJyk7XG5cbiAgY29uc3Qge1xuICAgIG5hbWUsXG4gICAgbWFpbjogeyBmZWVsc19saWtlLCB0ZW1wLCB0ZW1wX21heCwgdGVtcF9taW4gfSxcbiAgICBzeXM6IHsgY291bnRyeSwgc3VucmlzZSwgc3Vuc2V0IH0sXG4gICAgdGltZXpvbmUsXG4gICAgd2VhdGhlcjogW3sgbWFpbiwgZGVzY3JpcHRpb24gfV0sXG4gICAgd2luZDogeyBkZWcsIHNwZWVkIH0sXG4gIH0gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lLFxuICAgIGNvdW50cnksXG4gICAgd2VhdGhlcjogZGVzY3JpcHRpb24sXG4gICAgd2VhdGhlcktleXdvcmQ6IG1haW4gPT09ICdBdG1vc3BoZXJlJyA/IGRlc2NyaXB0aW9uIDogbWFpbixcbiAgICB0ZW1wLFxuICAgIHRlbXBNaW46IHRlbXBfbWluLFxuICAgIHRlbXBNYXg6IHRlbXBfbWF4LFxuICAgIHRlbXBGZWVsczogZmVlbHNfbGlrZSxcbiAgICB3aW5kU3BlZWQ6IHNwZWVkLFxuICAgIHdpbmREaXJlY3Rpb246IGRlZyxcbiAgICBzdW5yaXNlLFxuICAgIHN1bnNldCxcbiAgICB0aW1lWm9uZU9mZnNldDogdGltZXpvbmUsXG4gIH07XG59XG4iLCJpbXBvcnQgeyByb3VuZCB9IGZyb20gJy4vdXRpbGl0aWVzJztcbmltcG9ydCB7IHVuaXRTZXR0aW5ncywgdGVtcFVuaXRzIH0gZnJvbSAnLi9zZXR0aW5ncyc7XG5cbmZ1bmN0aW9uIHJvdW5kVGVtcCh0ZW1wKSB7XG4gIHJldHVybiByb3VuZCh0ZW1wLCAwKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGtlbHZpblRvQ2Vsc2l1cyh0ZW1wKSB7XG4gIHJldHVybiByb3VuZFRlbXAodGVtcCAtIDI3My4xNSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjZWxzaXVzVG9LZWx2aW4odGVtcCkge1xuICByZXR1cm4gcm91bmRUZW1wKHRlbXAgKyAyNzMuMTUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmFocmVuaGVpdFRvQ2Vsc2l1cyh0ZW1wKSB7XG4gIHJldHVybiByb3VuZFRlbXAoKHRlbXAgLSAzMikgKiAoNSAvIDkpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNlbHNpdXNUb0ZhaHJlbmhlaXQodGVtcCkge1xuICByZXR1cm4gcm91bmRUZW1wKHRlbXAgKiAoOSAvIDUpICsgMzIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24ga2VsdmluVG9GYWhyZW5oZWl0KHRlbXApIHtcbiAgcmV0dXJuIHJvdW5kVGVtcChjZWxzaXVzVG9GYWhyZW5oZWl0KGtlbHZpblRvQ2Vsc2l1cyh0ZW1wKSkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmFocmVuaGVpdFRvS2VsdmluKHRlbXApIHtcbiAgcmV0dXJuIHJvdW5kVGVtcChjZWxzaXVzVG9LZWx2aW4oZmFocmVuaGVpdFRvQ2Vsc2l1cyh0ZW1wKSkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb252ZXJ0VGVtcChcbiAgdGVtcFZhbCxcbiAgZnJvbVRlbXBVbml0LFxuICB0b1RlbXBVbml0ID0gdGVtcFVuaXRzW3VuaXRTZXR0aW5ncy50ZW1wXVxuKSB7XG4gIGNvbnN0IHRlbXAgPVxuICAgIHR5cGVvZiB0ZW1wVmFsID09PSAnbnVtYmVyJ1xuICAgICAgPyB0ZW1wVmFsXG4gICAgICA6IE51bWJlcih0ZW1wVmFsLm1hdGNoKC9cXGQrKFxcLlxcZCspPy8pWzBdKTtcbiAgY29uc3QgZGVmYXVsdENvbnZlcnRGbiA9ICh2YWwpID0+IHZhbDtcbiAgY29uc3QgY29udmVydEZuID1cbiAgICB7XG4gICAgICAnSy3CsEYnOiBrZWx2aW5Ub0ZhaHJlbmhlaXQsXG4gICAgICAnSy3CsEMnOiBrZWx2aW5Ub0NlbHNpdXMsXG4gICAgICAnwrBGLUsnOiBmYWhyZW5oZWl0VG9LZWx2aW4sXG4gICAgICAnwrBGLcKwQyc6IGZhaHJlbmhlaXRUb0NlbHNpdXMsXG4gICAgICAnwrBDLUsnOiBjZWxzaXVzVG9LZWx2aW4sXG4gICAgICAnwrBDLcKwRic6IGNlbHNpdXNUb0ZhaHJlbmhlaXQsXG4gICAgfVtgJHtmcm9tVGVtcFVuaXR9LSR7dG9UZW1wVW5pdH1gXSB8fCBkZWZhdWx0Q29udmVydEZuO1xuICByZXR1cm4gY29udmVydEZuKHRlbXApICsgdG9UZW1wVW5pdDtcbn1cbiIsImltcG9ydCB7IHJvdW5kIH0gZnJvbSAnLi91dGlsaXRpZXMnO1xuaW1wb3J0IHsgdW5pdFNldHRpbmdzLCBzcGVlZFVuaXRzIH0gZnJvbSAnLi9zZXR0aW5ncyc7XG5cbmZ1bmN0aW9uIHJvdW5kU3BlZWQoc3BlZWQpIHtcbiAgcmV0dXJuIHJvdW5kKHNwZWVkLCAyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1ldGVyc1NlY29uZHNUb01pbGVzSG91cnMoc3BlZWQpIHtcbiAgcmV0dXJuIHJvdW5kU3BlZWQoc3BlZWQgKiAyLjIzNyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtaWxlc0hvdXJzVG9NZXRlcnNTZWNvbmRzKHNwZWVkKSB7XG4gIHJldHVybiByb3VuZFNwZWVkKHNwZWVkIC8gMi4yMzcpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb252ZXJ0U3BlZWQoXG4gIHNwZWVkVmFsLFxuICBmcm9tU3BlZWRVbml0LFxuICB0b1NwZWVkVW5pdCA9IHNwZWVkVW5pdHNbdW5pdFNldHRpbmdzLnNwZWVkXVxuKSB7XG4gIGNvbnN0IHNwZWVkID1cbiAgICB0eXBlb2Ygc3BlZWRWYWwgPT09ICdudW1iZXInXG4gICAgICA/IHNwZWVkVmFsXG4gICAgICA6IE51bWJlcihzcGVlZFZhbC5tYXRjaCgvXFxkKyhcXC5cXGQrKT8vKVswXSk7XG4gIGNvbnN0IGRlZmF1bHRDb252ZXJ0Rm4gPSAodmFsKSA9PiB2YWw7XG4gIGNvbnN0IGNvbnZlcnRGbiA9XG4gICAge1xuICAgICAgJ21ldGVyLHNlY29uZC1taWxlLGhvdXInOiBtZXRlcnNTZWNvbmRzVG9NaWxlc0hvdXJzLFxuICAgICAgJ21pbGUsaG91ci1tZXRlcixzZWNvbmQnOiBtaWxlc0hvdXJzVG9NZXRlcnNTZWNvbmRzLFxuICAgIH1bYCR7ZnJvbVNwZWVkVW5pdH0tJHt0b1NwZWVkVW5pdH1gXSB8fCBkZWZhdWx0Q29udmVydEZuO1xuICBjb25zdCBjb252ZXJ0ZWRTcGVlZCA9IGNvbnZlcnRGbihzcGVlZCk7XG4gIGNvbnN0IHNwZWVkVW5pdFdvcmRzID0gdG9TcGVlZFVuaXQuc3BsaXQoJywnKTtcbiAgcmV0dXJuIGAke2NvbnZlcnRlZFNwZWVkfSAke3NwZWVkVW5pdFdvcmRzWzBdfSR7XG4gICAgY29udmVydGVkU3BlZWQgPT09IDEgPyAnJyA6ICdzJ1xuICB9IHBlciAke3NwZWVkVW5pdFdvcmRzWzFdfWA7XG59XG4iLCJpbXBvcnQgeyB1bml0U2V0dGluZ3MsIHRpbWVVbml0cyB9IGZyb20gJy4vc2V0dGluZ3MnO1xuXG5mdW5jdGlvbiBwYWRNaW51dGUobWludXRlKSB7XG4gIHJldHVybiBTdHJpbmcobWludXRlKS5wYWRTdGFydCgyLCAnMCcpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbm9QYWRkaW5nKHRpbWUpIHtcbiAgY29uc3QgW2hvdXIsIHJlc3RdID0gdGltZS5zcGxpdCgnOicpO1xuICByZXR1cm4gYCR7TnVtYmVyKGhvdXIpfToke3Jlc3R9YDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhyMjRUb0hyMTIodGltZSkge1xuICBjb25zdCBbaG91ciwgbWludXRlXSA9IHRpbWUuc3BsaXQoJzonKS5tYXAoTnVtYmVyKTtcbiAgbGV0IFthbXBtLCBvZmZzZXRdID0gaG91ciA8PSAxMSA/IFsnQU0nLCAwXSA6IFsnUE0nLCAxXTtcbiAgaWYgKGhvdXIgPT09IDApIG9mZnNldCArPSAxMjtcbiAgcmV0dXJuIGAkeyhob3VyICUgMTMpICsgb2Zmc2V0fToke3BhZE1pbnV0ZShtaW51dGUpfSAke2FtcG19YDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhyMTJUb0hyMjQodGltZSkge1xuICBjb25zdCBbbnVtVGltZSwgYW1wbV0gPSB0aW1lLnNwbGl0KCcgJyk7XG4gIGNvbnN0IFtob3VyLCBtaW51dGVdID0gbnVtVGltZS5zcGxpdCgnOicpLm1hcChOdW1iZXIpO1xuICBsZXQgb2Zmc2V0ID0gYW1wbSA9PT0gJ1BNJyA/IDEyIDogMDtcbiAgaWYgKGhvdXIgPT09IDEyICYmIGFtcG0gPT09ICdBTScpIG9mZnNldCAtPSAxMjtcbiAgcmV0dXJuIGAke2hvdXIgKyBvZmZzZXR9OiR7cGFkTWludXRlKG1pbnV0ZSl9YDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVuaXhUb0hyMjQodGltZSwgdGltZVpvbmVPZmZzZXQpIHtcbiAgY29uc3QgbG9jYWxUaW1lID0gTnVtYmVyKHRpbWUpICsgTnVtYmVyKHRpbWVab25lT2Zmc2V0KTtcbiAgcmV0dXJuIG5vUGFkZGluZyhuZXcgRGF0ZShsb2NhbFRpbWUgKiAxMDAwKS50b0lTT1N0cmluZygpLnNsaWNlKDExLCAxNikpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdW5peFRvSHIxMih0aW1lLCB0aW1lWm9uZU9mZnNldCkge1xuICByZXR1cm4gaHIyNFRvSHIxMih1bml4VG9IcjI0KHRpbWUsIHRpbWVab25lT2Zmc2V0KSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbnZlcnRUaW1lKFxuICB0aW1lVmFsLFxuICB0aW1lWm9uZU9mZnNldCxcbiAgZnJvbVRpbWVVbml0LFxuICB0b1RpbWVVbml0ID0gdGltZVVuaXRzW3VuaXRTZXR0aW5ncy50aW1lXVxuKSB7XG4gIGNvbnN0IGNvbnZlcnRGbiA9XG4gICAge1xuICAgICAgJ3VuaXgtaHIyNCc6IHVuaXhUb0hyMjQsXG4gICAgICAndW5peC1ocjEyJzogdW5peFRvSHIxMixcbiAgICAgICdocjI0LWhyMTInOiBocjI0VG9IcjEyLFxuICAgICAgJ2hyMTItaHIyNCc6IGhyMTJUb0hyMjQsXG4gICAgfVtgJHtmcm9tVGltZVVuaXR9LSR7dG9UaW1lVW5pdH1gXSB8fCBub1BhZGRpbmc7XG4gIHJldHVybiBjb252ZXJ0Rm4odGltZVZhbCwgdGltZVpvbmVPZmZzZXQpO1xufVxuIiwiaW1wb3J0IG9wZW5XZWF0aGVyTWFwQVBJUHJvdmlkZXIgZnJvbSAnLi9vcGVuLXdlYXRoZXItbWFwLWFwaS1wcm92aWRlcic7XG5pbXBvcnQgeyB0ZW1wVW5pdHMsIHNwZWVkVW5pdHMsIHRpbWVVbml0cyB9IGZyb20gJy4vc2V0dGluZ3MnO1xuaW1wb3J0IHsgY2FwaXRhbGl6ZSB9IGZyb20gJy4vdXRpbGl0aWVzJztcbmltcG9ydCBjb252ZXJ0VGVtcCBmcm9tICcuL3RlbXAtY29udmVydCc7XG5pbXBvcnQgY29udmVydFNwZWVkIGZyb20gJy4vc3BlZWQtY29udmVydCc7XG5pbXBvcnQgY29udmVydFRpbWUgZnJvbSAnLi90aW1lLWNvbnZlcnQnO1xuaW1wb3J0IGNvbnZlcnREaXJlY3Rpb24gZnJvbSAnLi93aW5kLWRpcmVjdGlvbi1jb252ZXJ0JztcblxuY29uc3Qgd2VhdGhlckRhdGEgPSB7IGJvZHk6IHt9LCBlcnJvcjogJycgfTtcbmV4cG9ydCBkZWZhdWx0IHdlYXRoZXJEYXRhO1xuXG5mdW5jdGlvbiBzdGFuZGFyZGl6ZVdlYXRoZXJEYXRhTWFpbih3ZWF0aGVyRGF0YUJvZHkpIHtcbiAgY29uc3QgbWFpblZhbCA9IHdlYXRoZXJEYXRhQm9keS53ZWF0aGVyO1xuICBpZiAoIW1haW5WYWwpIHJldHVybjtcblxuICB3ZWF0aGVyRGF0YUJvZHkud2VhdGhlciA9IGNhcGl0YWxpemUobWFpblZhbCk7XG59XG5cbmZ1bmN0aW9uIHN0YW5kYXJkaXplV2VhdGhlckRhdGFLZXl3b3JkKHdlYXRoZXJEYXRhQm9keSkge1xuICBjb25zdCB3ZWF0aGVyS2V5d29yZHMgPSBPYmplY3QuZW50cmllcyh7XG4gICAgU3Vubnk6IFsnQ2xlYXInLCAnQ2xlYXIgU2t5JywgJ1N1bm55JywgJ1N1biddLFxuICAgIFJhaW46IFsnUmFpbicsICdEcml6emxlJywgJ1Nob3dlciddLFxuICAgIENsb3VkczogWydDbG91ZCddLFxuICAgIEZvZ2d5OiBbJ0hhemUnLCAnTWlzdCcsICdTbW9rZScsICdGb2cnXSxcbiAgICBEdXN0eTogWydEdXN0JywgJ0FzaCcsICdTYW5kJ10sXG4gICAgU25vdzogWydTbm93JywgJ1NsZWV0JywgJ0hhaWwnXSxcbiAgICBUaHVuZGVyc3Rvcm06IFsnVGh1bmRlcicsICdUaHVuZGVyc3Rvcm0nLCAnTGlnaHRuaW5nJ10sXG4gIH0pO1xuXG4gIGxldCBrZXl3b3JkVmFsID0gd2VhdGhlckRhdGFCb2R5LndlYXRoZXJLZXl3b3JkO1xuICBpZiAoIWtleXdvcmRWYWwpIHJldHVybjtcblxuICBrZXl3b3JkVmFsID0gY2FwaXRhbGl6ZShrZXl3b3JkVmFsKTtcbiAgd2VhdGhlckRhdGFCb2R5LndlYXRoZXJLZXl3b3JkID0ga2V5d29yZFZhbDtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHdlYXRoZXJLZXl3b3Jkcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGNvbnN0IFt3ZWF0aGVyS2V5d29yZCwgcG9zc2libGVXb3Jkc10gPSB3ZWF0aGVyS2V5d29yZHNbaV07XG4gICAgY29uc3QgbWF0Y2ggPSBwb3NzaWJsZVdvcmRzLnNvbWUoKHBvc3NpYmxlV29yZCkgPT5cbiAgICAgIGtleXdvcmRWYWwuaW5jbHVkZXMocG9zc2libGVXb3JkKVxuICAgICk7XG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICB3ZWF0aGVyRGF0YUJvZHkud2VhdGhlcktleXdvcmQgPSB3ZWF0aGVyS2V5d29yZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gc3RhbmRhcmRpemVXZWF0aGVyRGF0YSh3ZWF0aGVyRGF0YUJvZHkpIHtcbiAgc3RhbmRhcmRpemVXZWF0aGVyRGF0YU1haW4od2VhdGhlckRhdGFCb2R5KTtcbiAgc3RhbmRhcmRpemVXZWF0aGVyRGF0YUtleXdvcmQod2VhdGhlckRhdGFCb2R5KTtcbn1cblxuZnVuY3Rpb24gY29udmVydFdlYXRoZXJEYXRhVGVtcHMod2VhdGhlckRhdGFCb2R5LCBmcm9tVGVtcFVuaXQpIHtcbiAgWyd0ZW1wJywgJ3RlbXBNYXgnLCAndGVtcE1pbicsICd0ZW1wRmVlbHMnXS5mb3JFYWNoKCh0ZW1wUHJvcCkgPT4ge1xuICAgIGNvbnN0IHRlbXBWYWwgPSB3ZWF0aGVyRGF0YUJvZHlbdGVtcFByb3BdO1xuICAgIGlmICh0ZW1wVmFsKSB3ZWF0aGVyRGF0YUJvZHlbdGVtcFByb3BdID0gY29udmVydFRlbXAodGVtcFZhbCwgZnJvbVRlbXBVbml0KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNvbnZlcnRXZWF0aGVyRGF0YVRpbWVzKHdlYXRoZXJEYXRhQm9keSwgZnJvbVRpbWVVbml0KSB7XG4gIFsnc3VucmlzZScsICdzdW5zZXQnXS5mb3JFYWNoKCh0aW1lUHJvcCkgPT4ge1xuICAgIGNvbnN0IHRpbWVWYWwgPSB3ZWF0aGVyRGF0YUJvZHlbdGltZVByb3BdO1xuICAgIGlmICh0aW1lVmFsKVxuICAgICAgd2VhdGhlckRhdGFCb2R5W3RpbWVQcm9wXSA9IGNvbnZlcnRUaW1lKFxuICAgICAgICB0aW1lVmFsLFxuICAgICAgICB3ZWF0aGVyRGF0YUJvZHkudGltZVpvbmVPZmZzZXQgfHwgMCxcbiAgICAgICAgZnJvbVRpbWVVbml0XG4gICAgICApO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gY29udmVydFdlYXRoZXJEYXRhU3BlZWRzKHdlYXRoZXJEYXRhQm9keSwgZnJvbVNwZWVkVW5pdCkge1xuICBjb25zdCBzcGVlZFZhbCA9IHdlYXRoZXJEYXRhQm9keS53aW5kU3BlZWQ7XG4gIGlmIChzcGVlZFZhbClcbiAgICB3ZWF0aGVyRGF0YUJvZHkud2luZFNwZWVkID0gY29udmVydFNwZWVkKHNwZWVkVmFsLCBmcm9tU3BlZWRVbml0KTtcbn1cblxuZnVuY3Rpb24gY29udmVydFdlYXRoZXJEYXRhRGlyZWN0aW9ucyh3ZWF0aGVyRGF0YUJvZHkpIHtcbiAgY29uc3QgZGlyZWN0aW9uVmFsID0gd2VhdGhlckRhdGFCb2R5LndpbmREaXJlY3Rpb247XG4gIGlmIChkaXJlY3Rpb25WYWwpXG4gICAgd2VhdGhlckRhdGFCb2R5LndpbmREaXJlY3Rpb24gPSBjb252ZXJ0RGlyZWN0aW9uKGRpcmVjdGlvblZhbCk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFdlYXRoZXJEYXRhQm9keSh3ZWF0aGVyRGF0YUJvZHkpIHtcbiAgc3RhbmRhcmRpemVXZWF0aGVyRGF0YSh3ZWF0aGVyRGF0YUJvZHkpO1xuICBjb252ZXJ0V2VhdGhlckRhdGFUZW1wcyh3ZWF0aGVyRGF0YUJvZHksICdLJyk7XG4gIGNvbnZlcnRXZWF0aGVyRGF0YVRpbWVzKHdlYXRoZXJEYXRhQm9keSwgJ3VuaXgnKTtcbiAgY29udmVydFdlYXRoZXJEYXRhU3BlZWRzKHdlYXRoZXJEYXRhQm9keSwgJ21ldGVyLHNlY29uZCcpO1xuICBjb252ZXJ0V2VhdGhlckRhdGFEaXJlY3Rpb25zKHdlYXRoZXJEYXRhQm9keSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRXZWF0aGVyKFxuICBsb2NhdGlvbixcbiAgd2VhdGhlclByb3ZpZGVyID0gb3BlbldlYXRoZXJNYXBBUElQcm92aWRlclxuKSB7XG4gIHdlYXRoZXJEYXRhLmVycm9yID0gJyc7XG4gIHRyeSB7XG4gICAgY29uc3Qgd2VhdGhlckRhdGFCb2R5ID0gYXdhaXQgd2VhdGhlclByb3ZpZGVyKGxvY2F0aW9uKTtcbiAgICBmb3JtYXRXZWF0aGVyRGF0YUJvZHkod2VhdGhlckRhdGFCb2R5KTtcbiAgICB3ZWF0aGVyRGF0YS5ib2R5ID0gd2VhdGhlckRhdGFCb2R5O1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICB3ZWF0aGVyRGF0YS5lcnJvciA9IGVyci5tZXNzYWdlO1xuICB9XG4gIHJldHVybiB3ZWF0aGVyRGF0YTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRXZWF0aGVyKG9sZFVuaXRTZXR0aW5ncykge1xuICBjb25zdCB3ZWF0aGVyRGF0YUJvZHkgPSB3ZWF0aGVyRGF0YS5ib2R5O1xuICBjb252ZXJ0V2VhdGhlckRhdGFUZW1wcyh3ZWF0aGVyRGF0YUJvZHksIHRlbXBVbml0c1tvbGRVbml0U2V0dGluZ3MudGVtcF0pO1xuICBjb252ZXJ0V2VhdGhlckRhdGFUaW1lcyh3ZWF0aGVyRGF0YUJvZHksIHRpbWVVbml0c1tvbGRVbml0U2V0dGluZ3MudGltZV0pO1xuICBjb252ZXJ0V2VhdGhlckRhdGFTcGVlZHMod2VhdGhlckRhdGFCb2R5LCBzcGVlZFVuaXRzW29sZFVuaXRTZXR0aW5ncy5zcGVlZF0pO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29udmVydERpcmVjdGlvbihkZWdyZWVzKSB7XG4gIGNvbnN0IGFkanVzdGVkID0gZGVncmVlcyAtIDIyLjU7XG4gIHJldHVybiBbJ04nLCAnTkUnLCAnRScsICdTRScsICdTJywgJ1NXJywgJ1cnLCAnTlcnXVtcbiAgICBhZGp1c3RlZCA+IDAgJiYgYWRqdXN0ZWQgPCAzMTUgPyBNYXRoLmNlaWwoYWRqdXN0ZWQgLyA0NSkgOiAwXG4gIF07XG59XG4iLCJleHBvcnQgY29uc3QgbG9naW5FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxvZ2luJyk7XG5leHBvcnQgY29uc3QgbG9naW5Gb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxvZ2luIGZvcm0nKTtcbmV4cG9ydCBjb25zdCBsb2dpbkJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICcubG9naW4gZm9ybSBidXR0b25bdHlwZT1cInN1Ym1pdFwiXSdcbik7XG5leHBvcnQgY29uc3QgbG9naW5Mb2FkaW5nRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sb2dpbiAubG9hZGluZycpO1xuZXhwb3J0IGNvbnN0IHdlYXRoZXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndlYXRoZXInKTtcbmV4cG9ydCBjb25zdCB3ZWF0aGVyRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53ZWF0aGVyIGZvcm0uc2VhcmNoJyk7XG5leHBvcnQgY29uc3Qgd2VhdGhlckVycm9yRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53ZWF0aGVyIC5lcnJvcicpO1xuZXhwb3J0IGNvbnN0IHdlYXRoZXJGb3JtQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgJy53ZWF0aGVyIGZvcm0uc2VhcmNoIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdJ1xuKTtcbmV4cG9ydCBjb25zdCB3ZWF0aGVyTG9hZGluZ0VsZW1lbnQgPVxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2VhdGhlciAubG9hZGluZycpO1xuZXhwb3J0IGNvbnN0IHdlYXRoZXJCb2R5RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICcud2VhdGhlciAud2VhdGhlci1ib2R5J1xuKTtcbmV4cG9ydCBjb25zdCBzZXR0aW5nc0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbi5zaG93LXNldHRpbmdzJyk7XG5leHBvcnQgY29uc3Qgc2V0dGluZ3NFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNldHRpbmdzJyk7XG5leHBvcnQgY29uc3Qgc2V0dGluZ3NGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNldHRpbmdzIGZvcm0nKTtcbmV4cG9ydCBjb25zdCBoaWRlU2V0dGluZ3NCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2V0dGluZ3MgLmhpZGUnKTtcbmV4cG9ydCBjb25zdCBjaXR5RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53ZWF0aGVyIC5jaXR5Jyk7XG5leHBvcnQgY29uc3QgY291bnRyeUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2VhdGhlciAuY291bnRyeScpO1xuZXhwb3J0IGNvbnN0IG1haW5UZW1wRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICcud2VhdGhlciAubWFpbi10ZW1wZXJhdHVyZSdcbik7XG5leHBvcnQgY29uc3QgbWFpbldlYXRoZXJJbWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2VhdGhlciAubWFpbi1pbWcnKTtcbmV4cG9ydCBjb25zdCBtYWluV2VhdGhlckxvYWRpbmdJbWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAnLndlYXRoZXIgLm1haW4taW1nLWNvbnRhaW5lciAubG9hZGluZy1pbWcnXG4pO1xuZXhwb3J0IGNvbnN0IG1haW5XZWF0aGVyRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICcud2VhdGhlciAubWFpbi13ZWF0aGVyJ1xuKTtcbmV4cG9ydCBjb25zdCBmZWVsc1RlbXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgJy53ZWF0aGVyIC5mZWVscy10ZW1wZXJhdHVyZSdcbik7XG5leHBvcnQgY29uc3QgbWluVGVtcEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAnLndlYXRoZXIgLm1pbi10ZW1wZXJhdHVyZSdcbik7XG5leHBvcnQgY29uc3QgbWF4VGVtcEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAnLndlYXRoZXIgLm1heC10ZW1wZXJhdHVyZSdcbik7XG5leHBvcnQgY29uc3Qgd2luZFNwZWVkRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53ZWF0aGVyIC53aW5kLXNwZWVkJyk7XG5leHBvcnQgY29uc3Qgd2luZERpcmVjdGlvbkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAnLndlYXRoZXIgLndpbmQtZGlyZWN0aW9uJ1xuKTtcbmV4cG9ydCBjb25zdCBzdW5yaXNlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53ZWF0aGVyIC5zdW5yaXNlJyk7XG5leHBvcnQgY29uc3Qgc3Vuc2V0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53ZWF0aGVyIC5zdW5zZXQnKTtcbiIsImltcG9ydCB7IGFwaUtleXMgfSBmcm9tICcuL3NldHRpbmdzJztcbmltcG9ydCB7IGR1cmF0aW9uIH0gZnJvbSAnLi91dGlsaXRpZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBnaXBoeUFQSVByb3ZpZGVyKHNlYXJjaCwgYXBpS2V5ID0gYXBpS2V5cy5naXBoeSkge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGR1cmF0aW9uKFxuICAgIDgwMDAsXG4gICAgZmV0Y2goXG4gICAgICBgaHR0cHM6Ly9hcGkuZ2lwaHkuY29tL3YxL2dpZnMvdHJhbnNsYXRlP2FwaV9rZXk9JHthcGlLZXl9JnM9JHtzZWFyY2h9YFxuICAgIClcbiAgKTtcbiAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgQVBJIEtleScpO1xuXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gIHJldHVybiBkYXRhLmRhdGEuaW1hZ2VzLm9yaWdpbmFsLnVybDtcbn1cbiIsImltcG9ydCBvcGVuV2VhdGhlck1hcEFQSVByb3ZpZGVyIGZyb20gJy4vb3Blbi13ZWF0aGVyLW1hcC1hcGktcHJvdmlkZXInO1xuaW1wb3J0IGdpcGh5QVBJUHJvdmlkZXIgZnJvbSAnLi9naXBoeS1hcGktcHJvdmlkZXInO1xuXG5mdW5jdGlvbiBjbGVhckZvcm1FcnJvcnMoaW5wdXRzLCBlcnJvckVsZW1lbnRzKSB7XG4gIGlucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4gaW5wdXQuc2V0Q3VzdG9tVmFsaWRpdHkoJycpKTtcbiAgZXJyb3JFbGVtZW50cy5mb3JFYWNoKChlcnJvckVsZW1lbnQpID0+IHtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gIH0pO1xufVxuXG5hc3luYyBmdW5jdGlvbiB2YWxpZGF0ZUFwaUtleShpbnB1dCkge1xuICBpZiAoIWlucHV0LmNoZWNrVmFsaWRpdHkoKSkgcmV0dXJuO1xuXG4gIGNvbnN0IFthcGlQcm92aWRlciwgZHVtbXlQYXJhbXNdID0ge1xuICAgICdvcGVuLXdlYXRoZXItbWFwJzogW29wZW5XZWF0aGVyTWFwQVBJUHJvdmlkZXIsIFsnTmV3IFlvcmsnXV0sXG4gICAgZ2lwaHk6IFtnaXBoeUFQSVByb3ZpZGVyLCBbJ2NhdHMnXV0sXG4gIH1baW5wdXQuaWQucmVwbGFjZSgnLWFwaS1rZXknLCAnJyldO1xuICBpZiAoIWFwaVByb3ZpZGVyKSByZXR1cm47XG5cbiAgdHJ5IHtcbiAgICBhd2FpdCBhcGlQcm92aWRlciguLi5kdW1teVBhcmFtcywgaW5wdXQudmFsdWUpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBpbnB1dC5zZXRDdXN0b21WYWxpZGl0eShlcnIubWVzc2FnZSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gdmFsaWRhdGUoZm9ybSkge1xuICBjb25zdCBlcnJvckVsZW1lbnRzID0gZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcuZXJyb3InKTtcbiAgY29uc3QgaW5wdXRzID0gWy4uLmZvcm0ucXVlcnlTZWxlY3RvckFsbCgnaW5wdXQnKV07XG4gIGNsZWFyRm9ybUVycm9ycyhpbnB1dHMsIGVycm9yRWxlbWVudHMpO1xuXG4gIGF3YWl0IFByb21pc2UuYWxsKFxuICAgIGlucHV0cy5tYXAoKGlucHV0KSA9PlxuICAgICAgaW5wdXQuaWQuaW5jbHVkZXMoJ2FwaS1rZXknKSA/IHZhbGlkYXRlQXBpS2V5KGlucHV0KSA6IFByb21pc2UucmVzb2x2ZSgpXG4gICAgKVxuICApO1xuXG4gIGlucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgIGlmICghaW5wdXQuY2hlY2tWYWxpZGl0eSgpKSB7XG4gICAgICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfSsuZXJyb3JgKTtcbiAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGlucHV0LnZhbGlkYXRpb25NZXNzYWdlO1xuICAgICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGZvcm0uY2hlY2tWYWxpZGl0eSgpO1xufVxuIiwiaW1wb3J0IGdpcGh5QVBJUHJvdmlkZXIgZnJvbSAnLi9naXBoeS1hcGktcHJvdmlkZXInO1xuXG5jb25zdCB3ZWF0aGVyR2lmID0geyB1cmw6ICcjJyB9O1xuZXhwb3J0IGRlZmF1bHQgd2VhdGhlckdpZjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFdlYXRoZXJHaWYod2VhdGhlciwgZ2lmUHJvdmlkZXIgPSBnaXBoeUFQSVByb3ZpZGVyKSB7XG4gIHRyeSB7XG4gICAgd2VhdGhlckdpZi51cmwgPSBhd2FpdCBnaWZQcm92aWRlcih3ZWF0aGVyKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgd2VhdGhlckdpZi51cmwgPSAnIyc7XG4gIH1cbiAgcmV0dXJuIHdlYXRoZXJHaWY7XG59XG4iLCJpbXBvcnQgKiBhcyBkb20gZnJvbSAnLi9kb20tZWxlbWVudHMnO1xuaW1wb3J0IHsgd2VhdGhlckRhdGEgfSBmcm9tICcuL2FwcGxpY2F0aW9uJztcbmltcG9ydCB3ZWF0aGVyR2lmLCB7IGdldFdlYXRoZXJHaWYgfSBmcm9tICcuL3dlYXRoZXItZ2lmJztcbmltcG9ydCBnZXRXZWF0aGVyV2hpdGVJY29uIGZyb20gJy4uL2ltYWdlcy9nZXQtd2VhdGhlci13aGl0ZS5zdmcnO1xuaW1wb3J0IHNldHRpbmdzV2hpdGVJY29uIGZyb20gJy4uL2ltYWdlcy9zZXR0aW5ncy13aGl0ZS5zdmcnO1xuaW1wb3J0IGdldFdlYXRoZXJCbGFja0ljb24gZnJvbSAnLi4vaW1hZ2VzL2dldC13ZWF0aGVyLWJsYWNrLnN2Zyc7XG5pbXBvcnQgc2V0dGluZ3NCbGFja0ljb24gZnJvbSAnLi4vaW1hZ2VzL3NldHRpbmdzLWJsYWNrLnN2Zyc7XG5cbmZ1bmN0aW9uIGNsZWFyV2VhdGhlckVycm9yKCkge1xuICBkb20ud2VhdGhlckVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9ICcnO1xuICBkb20ud2VhdGhlckVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbn1cblxuZnVuY3Rpb24gZ2V0V2VhdGhlckNvbG9yU2NoZW1lKGVsZW1lbnQpIHtcbiAgY29uc3Qgd2VhdGhlclR5cGUgPSBlbGVtZW50LmNsb3Nlc3QoJy53ZWF0aGVyJykuZGF0YXNldC53ZWF0aGVyO1xuICByZXR1cm4gWydGb2dneScsICdEdXN0eScsICdUaHVuZGVyc3Rvcm0nXS5pbmNsdWRlcyh3ZWF0aGVyVHlwZSlcbiAgICA/ICdhbHRlcm5hdGUnXG4gICAgOiAncmVndWxhcic7XG59XG5cbmNvbnN0IGljb25zID0gW1xuICB7XG4gICAgbmFtZTogJ2dldC13ZWF0aGVyJyxcbiAgICByZWd1bGFyOiBnZXRXZWF0aGVyV2hpdGVJY29uLFxuICAgIGFsdGVybmF0ZTogZ2V0V2VhdGhlckJsYWNrSWNvbixcbiAgICBob3ZlcjogZ2V0V2VhdGhlckJsYWNrSWNvbixcbiAgfSxcbiAge1xuICAgIG5hbWU6ICdzaG93LXNldHRpbmdzJyxcbiAgICByZWd1bGFyOiBzZXR0aW5nc1doaXRlSWNvbixcbiAgICBhbHRlcm5hdGU6IHNldHRpbmdzQmxhY2tJY29uLFxuICAgIGhvdmVyOiBzZXR0aW5nc0JsYWNrSWNvbixcbiAgfSxcbl07XG5cbmV4cG9ydCBmdW5jdGlvbiBjb2xvcml6ZUljb24oXG4gIGVsZW1lbnQsXG4gIGljb25UeXBlID0gZ2V0V2VhdGhlckNvbG9yU2NoZW1lKGVsZW1lbnQpXG4pIHtcbiAgZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuaWNvbicpLnNyYyA9IGljb25zLmZpbmQoKHsgbmFtZSB9KSA9PlxuICAgIGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKG5hbWUpXG4gIClbaWNvblR5cGVdO1xufVxuXG5mdW5jdGlvbiBwb3B1bGF0ZVdlYXRoZXIoZGF0YSkge1xuICBkb20ud2VhdGhlckVsZW1lbnQuZGF0YXNldC53ZWF0aGVyID0gZGF0YS53ZWF0aGVyS2V5d29yZDtcbiAgZG9tLmNpdHlFbGVtZW50LnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICBkb20uY291bnRyeUVsZW1lbnQudGV4dENvbnRlbnQgPSBkYXRhLmNvdW50cnk7XG4gIGRvbS5tYWluVGVtcEVsZW1lbnQudGV4dENvbnRlbnQgPSBkYXRhLnRlbXA7XG4gIGRvbS5tYWluV2VhdGhlckVsZW1lbnQudGV4dENvbnRlbnQgPSBkYXRhLndlYXRoZXI7XG4gIGRvbS5mZWVsc1RlbXBFbGVtZW50LnRleHRDb250ZW50ID0gZGF0YS50ZW1wRmVlbHM7XG4gIGRvbS5taW5UZW1wRWxlbWVudC50ZXh0Q29udGVudCA9IGRhdGEudGVtcE1pbjtcbiAgZG9tLm1heFRlbXBFbGVtZW50LnRleHRDb250ZW50ID0gZGF0YS50ZW1wTWF4O1xuICBkb20ud2luZFNwZWVkRWxlbWVudC50ZXh0Q29udGVudCA9IGRhdGEud2luZFNwZWVkO1xuICBkb20ud2luZERpcmVjdGlvbkVsZW1lbnQudGV4dENvbnRlbnQgPSBkYXRhLndpbmREaXJlY3Rpb247XG4gIGRvbS5zdW5yaXNlRWxlbWVudC50ZXh0Q29udGVudCA9IGRhdGEuc3VucmlzZTtcbiAgZG9tLnN1bnNldEVsZW1lbnQudGV4dENvbnRlbnQgPSBkYXRhLnN1bnNldDtcbn1cblxuZnVuY3Rpb24gcG9wdWxhdGVXZWF0aGVyQ29sb3JzKCkge1xuICBbZG9tLndlYXRoZXJGb3JtQnV0dG9uLCBkb20uc2V0dGluZ3NCdXR0b25dLmZvckVhY2goKGJ1dHRvbikgPT5cbiAgICBjb2xvcml6ZUljb24oYnV0dG9uKVxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd2VhdGhlckltYWdlVmlldygpIHtcbiAgZG9tLm1haW5XZWF0aGVyTG9hZGluZ0ltZy5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgZG9tLm1haW5XZWF0aGVySW1nLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBwb3B1bGF0ZVdlYXRoZXJJbWFnZShkYXRhKSB7XG4gIGRvbS5tYWluV2VhdGhlckxvYWRpbmdJbWcuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gIGRvbS5tYWluV2VhdGhlckltZy5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcblxuICBhd2FpdCBnZXRXZWF0aGVyR2lmKGRhdGEud2VhdGhlcktleXdvcmQpO1xuICBkb20ubWFpbldlYXRoZXJJbWcuc3JjID0gd2VhdGhlckdpZi51cmw7XG4gIGlmICh3ZWF0aGVyR2lmLnVybCA9PT0gJyMnKSB3ZWF0aGVySW1hZ2VWaWV3KCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3ZWF0aGVyTG9hZGluZ1ZpZXcoKSB7XG4gIGRvbS53ZWF0aGVyTG9hZGluZ0VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gIGRvbS53ZWF0aGVyQm9keUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoaWRlV2VhdGhlckxvYWRpbmdWaWV3KCkge1xuICBkb20ud2VhdGhlckxvYWRpbmdFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICBkb20ud2VhdGhlckJvZHlFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdFdlYXRoZXJWaWV3KCkge1xuICBkb20ubG9naW5FbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICBkb20uc2V0dGluZ3NFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICBkb20ud2VhdGhlckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gIGNsZWFyV2VhdGhlckVycm9yKCk7XG4gIGhpZGVXZWF0aGVyTG9hZGluZ1ZpZXcoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdlYXRoZXJWaWV3KHsgd2l0aEltYWdlID0gdHJ1ZSB9ID0ge30pIHtcbiAgZGVmYXVsdFdlYXRoZXJWaWV3KCk7XG5cbiAgaWYgKHdlYXRoZXJEYXRhLmVycm9yKSB7XG4gICAgZG9tLndlYXRoZXJFcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSB3ZWF0aGVyRGF0YS5lcnJvcjtcbiAgICBkb20ud2VhdGhlckVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgICByZXR1cm47XG4gIH1cbiAgcG9wdWxhdGVXZWF0aGVyKHdlYXRoZXJEYXRhLmJvZHkpO1xuICBwb3B1bGF0ZVdlYXRoZXJDb2xvcnMoKTtcbiAgaWYgKHdpdGhJbWFnZSkgcG9wdWxhdGVXZWF0aGVySW1hZ2Uod2VhdGhlckRhdGEuYm9keSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3ZWF0aGVyQnV0dG9uc0ljb25WaWV3KCkge1xuICBbZG9tLndlYXRoZXJGb3JtQnV0dG9uLCBkb20uc2V0dGluZ3NCdXR0b25dLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgIGJ1dHRvbi5xdWVyeVNlbGVjdG9yKCcudGV4dCcpLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgIGJ1dHRvbi5xdWVyeVNlbGVjdG9yKCcuaWNvbicpLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdlYXRoZXJCdXR0b25zVGV4dFZpZXcoKSB7XG4gIFtkb20ud2VhdGhlckZvcm1CdXR0b24sIGRvbS5zZXR0aW5nc0J1dHRvbl0uZm9yRWFjaCgoYnV0dG9uKSA9PiB7XG4gICAgYnV0dG9uLnF1ZXJ5U2VsZWN0b3IoJy50ZXh0JykuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gICAgYnV0dG9uLnF1ZXJ5U2VsZWN0b3IoJy5pY29uJykuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbG9naW5WaWV3KCkge1xuICBkb20ubG9naW5FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICBkb20ubG9naW5CdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gIGRvbS5sb2dpbkxvYWRpbmdFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbG9naW5Mb2FkaW5nVmlldygpIHtcbiAgZG9tLmxvZ2luTG9hZGluZ0VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gIGRvbS5sb2dpbkJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldHRpbmdzVmlldygpIHtcbiAgZG9tLnNldHRpbmdzRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbn1cbiIsImltcG9ydCB7IGdldFdlYXRoZXIsIGNvbnZlcnRXZWF0aGVyIH0gZnJvbSAnLi93ZWF0aGVyJztcbmltcG9ydCB7XG4gIHVwZGF0ZUFwaUtleXMsXG4gIHVuaXRTZXR0aW5ncyxcbiAgdXBkYXRlVW5pdFNldHRpbmdzLFxuICBsb2NhdGlvblNldHRpbmdzLFxufSBmcm9tICcuL3NldHRpbmdzJztcbmltcG9ydCB7XG4gIGxvZ2luRm9ybSxcbiAgd2VhdGhlckZvcm0sXG4gIHdlYXRoZXJGb3JtQnV0dG9uLFxuICBtYWluV2VhdGhlckltZyxcbiAgc2V0dGluZ3NCdXR0b24sXG4gIHNldHRpbmdzRm9ybSxcbiAgaGlkZVNldHRpbmdzQnV0dG9uLFxufSBmcm9tICcuL2RvbS1lbGVtZW50cyc7XG5pbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi9mb3JtLXZhbGlkYXRpb24nO1xuaW1wb3J0IHtcbiAgY29sb3JpemVJY29uLFxuICBsb2dpblZpZXcsXG4gIGxvZ2luTG9hZGluZ1ZpZXcsXG4gIGRlZmF1bHRXZWF0aGVyVmlldyxcbiAgd2VhdGhlclZpZXcsXG4gIHNldHRpbmdzVmlldyxcbiAgd2VhdGhlckxvYWRpbmdWaWV3LFxuICB3ZWF0aGVyQnV0dG9uc0ljb25WaWV3LFxuICB3ZWF0aGVyQnV0dG9uc1RleHRWaWV3LFxuICBoaWRlV2VhdGhlckxvYWRpbmdWaWV3LFxuICB3ZWF0aGVySW1hZ2VWaWV3LFxufSBmcm9tICcuL3ZpZXdzJztcblxuYXN5bmMgZnVuY3Rpb24gbG9naW4oZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIGxvZ2luTG9hZGluZ1ZpZXcoKTtcbiAgaWYgKCEoYXdhaXQgdmFsaWRhdGUobG9naW5Gb3JtKSkpIHJldHVybiBsb2dpblZpZXcoKTtcblxuICB1cGRhdGVBcGlLZXlzKHtcbiAgICBvcGVuV2VhdGhlck1hcDogbG9naW5Gb3JtLnF1ZXJ5U2VsZWN0b3IoJyNvcGVuLXdlYXRoZXItbWFwLWFwaS1rZXknKS52YWx1ZSxcbiAgICBnaXBoeTogbG9naW5Gb3JtLnF1ZXJ5U2VsZWN0b3IoJyNnaXBoeS1hcGkta2V5JykudmFsdWUsXG4gIH0pO1xuXG4gIGRlZmF1bHRXZWF0aGVyVmlldygpO1xuICB3ZWF0aGVyTG9hZGluZ1ZpZXcoKTtcbiAgYXdhaXQgZ2V0V2VhdGhlcihsb2NhdGlvblNldHRpbmdzLmRlZmF1bHRDaXR5KTtcbiAgd2VhdGhlclZpZXcoKTtcbn1cbmxvZ2luRm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBsb2dpbik7XG5cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVdlYXRoZXIoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIHdlYXRoZXJMb2FkaW5nVmlldygpO1xuICBpZiAoIShhd2FpdCB2YWxpZGF0ZSh3ZWF0aGVyRm9ybSkpKSByZXR1cm4gaGlkZVdlYXRoZXJMb2FkaW5nVmlldygpO1xuXG4gIGF3YWl0IGdldFdlYXRoZXIod2VhdGhlckZvcm0ucXVlcnlTZWxlY3RvcignI2xvY2F0aW9uJykudmFsdWUpO1xuICB3ZWF0aGVyVmlldygpO1xufVxud2VhdGhlckZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgdXBkYXRlV2VhdGhlcik7XG5cbmZ1bmN0aW9uIHNob3dTZXR0aW5ncyhlKSB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgc2V0dGluZ3NWaWV3KCk7XG59XG5zZXR0aW5nc0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNob3dTZXR0aW5ncyk7XG5cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVNldHRpbmdzKGUpIHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBpZiAoIShhd2FpdCB2YWxpZGF0ZShzZXR0aW5nc0Zvcm0pKSkgcmV0dXJuO1xuXG4gIGNvbnN0IG9sZFVuaXRTZXR0aW5ncyA9IHsgLi4udW5pdFNldHRpbmdzIH07XG4gIHVwZGF0ZVVuaXRTZXR0aW5ncyhPYmplY3QuZnJvbUVudHJpZXMobmV3IEZvcm1EYXRhKHNldHRpbmdzRm9ybSkuZW50cmllcygpKSk7XG4gIGNvbnZlcnRXZWF0aGVyKG9sZFVuaXRTZXR0aW5ncyk7XG4gIHdlYXRoZXJWaWV3KHsgd2l0aEltYWdlOiBmYWxzZSB9KTtcbn1cbnNldHRpbmdzRm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB1cGRhdGVTZXR0aW5ncyk7XG5cbmZ1bmN0aW9uIGhpZGVTZXR0aW5ncyhlKSB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgZGVmYXVsdFdlYXRoZXJWaWV3KCk7XG59XG5oaWRlU2V0dGluZ3NCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoaWRlU2V0dGluZ3MpO1xuXG5mdW5jdGlvbiBzd2l0Y2hCdXR0b25zKCkge1xuICAod2luZG93LmlubmVyV2lkdGggPD0gNTE1XG4gICAgPyB3ZWF0aGVyQnV0dG9uc0ljb25WaWV3XG4gICAgOiB3ZWF0aGVyQnV0dG9uc1RleHRWaWV3KSgpO1xufVxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBzd2l0Y2hCdXR0b25zKTtcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBzd2l0Y2hCdXR0b25zKTtcblxuZnVuY3Rpb24gYnV0dG9uSWNvbk5vcm1hbChlKSB7XG4gIGNvbG9yaXplSWNvbihlLnRhcmdldC5jbG9zZXN0KCdidXR0b24nKSk7XG59XG5cbmZ1bmN0aW9uIGJ1dHRvbkljb25Ib3ZlcihlKSB7XG4gIGNvbG9yaXplSWNvbihlLnRhcmdldC5jbG9zZXN0KCdidXR0b24nKSwgJ2hvdmVyJyk7XG59XG5cblt3ZWF0aGVyRm9ybUJ1dHRvbiwgc2V0dGluZ3NCdXR0b25dLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgYnV0dG9uSWNvbkhvdmVyKTtcbiAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3V0JywgYnV0dG9uSWNvbk5vcm1hbCk7XG59KTtcblxubWFpbldlYXRoZXJJbWcuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIHdlYXRoZXJJbWFnZVZpZXcpO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInJlcGxhY2UiLCJwIiwibmMiLCJhcGlLZXlzIiwidW5pdFNldHRpbmdzIiwidGVtcCIsInNwZWVkIiwidGltZSIsInRlbXBVbml0cyIsInNwZWVkVW5pdHMiLCJ0aW1lVW5pdHMiLCJyb3VuZCIsIm51bSIsInBsYWNlIiwiTnVtYmVyIiwidG9GaXhlZCIsImNhcGl0YWxpemUiLCJzdHJpbmciLCJzcGxpdCIsIndvcmQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwiZHVyYXRpb24iLCJtaWxsaXNlY29uZHMiLCJwcm9taXNlcyIsInRpbWVvdXQiLCJQcm9taXNlIiwiXyIsInJlamVjdCIsInNldFRpbWVvdXQiLCJyYWNlIiwiYXN5bmMiLCJvcGVuV2VhdGhlck1hcEFQSVByb3ZpZGVyIiwiYXBpS2V5Iiwib3BlbldlYXRoZXJNYXAiLCJsb2NhdGlvblBhcmFtIiwicGFyYW1ldGVyaXplTG9jYXRpb24iLCJyZXNwb25zZSIsImZldGNoIiwic3RhdHVzIiwibmFtZSIsIm1haW4iLCJmZWVsc19saWtlIiwidGVtcF9tYXgiLCJ0ZW1wX21pbiIsInN5cyIsImNvdW50cnkiLCJzdW5yaXNlIiwic3Vuc2V0IiwidGltZXpvbmUiLCJ3ZWF0aGVyIiwiZGVzY3JpcHRpb24iLCJ3aW5kIiwiZGVnIiwianNvbiIsIndlYXRoZXJLZXl3b3JkIiwidGVtcE1pbiIsInRlbXBNYXgiLCJ0ZW1wRmVlbHMiLCJ3aW5kU3BlZWQiLCJ3aW5kRGlyZWN0aW9uIiwidGltZVpvbmVPZmZzZXQiLCJyb3VuZFRlbXAiLCJrZWx2aW5Ub0NlbHNpdXMiLCJjZWxzaXVzVG9LZWx2aW4iLCJmYWhyZW5oZWl0VG9DZWxzaXVzIiwiY2Vsc2l1c1RvRmFocmVuaGVpdCIsImtlbHZpblRvRmFocmVuaGVpdCIsImZhaHJlbmhlaXRUb0tlbHZpbiIsInJvdW5kU3BlZWQiLCJtZXRlcnNTZWNvbmRzVG9NaWxlc0hvdXJzIiwibWlsZXNIb3Vyc1RvTWV0ZXJzU2Vjb25kcyIsInBhZE1pbnV0ZSIsIm1pbnV0ZSIsIlN0cmluZyIsInBhZFN0YXJ0Iiwibm9QYWRkaW5nIiwiaG91ciIsInJlc3QiLCJocjI0VG9IcjEyIiwiYW1wbSIsIm9mZnNldCIsImhyMTJUb0hyMjQiLCJudW1UaW1lIiwidW5peFRvSHIyNCIsImxvY2FsVGltZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInVuaXhUb0hyMTIiLCJ3ZWF0aGVyRGF0YSIsImJvZHkiLCJlcnJvciIsImNvbnZlcnRXZWF0aGVyRGF0YVRlbXBzIiwid2VhdGhlckRhdGFCb2R5IiwiZnJvbVRlbXBVbml0IiwiZm9yRWFjaCIsInRlbXBQcm9wIiwidGVtcFZhbCIsInRvVGVtcFVuaXQiLCJtYXRjaCIsInZhbCIsImNvbnZlcnRUZW1wIiwiY29udmVydFdlYXRoZXJEYXRhVGltZXMiLCJmcm9tVGltZVVuaXQiLCJ0aW1lUHJvcCIsInRpbWVWYWwiLCJ0b1RpbWVVbml0IiwiY29udmVydFRpbWUiLCJjb252ZXJ0V2VhdGhlckRhdGFTcGVlZHMiLCJmcm9tU3BlZWRVbml0Iiwic3BlZWRWYWwiLCJ0b1NwZWVkVW5pdCIsImNvbnZlcnRlZFNwZWVkIiwic3BlZWRVbml0V29yZHMiLCJjb252ZXJ0U3BlZWQiLCJnZXRXZWF0aGVyIiwid2VhdGhlclByb3ZpZGVyIiwibWFpblZhbCIsInN0YW5kYXJkaXplV2VhdGhlckRhdGFNYWluIiwid2VhdGhlcktleXdvcmRzIiwiZW50cmllcyIsIlN1bm55IiwiUmFpbiIsIkNsb3VkcyIsIkZvZ2d5IiwiRHVzdHkiLCJTbm93IiwiVGh1bmRlcnN0b3JtIiwia2V5d29yZFZhbCIsInBvc3NpYmxlV29yZHMiLCJzb21lIiwicG9zc2libGVXb3JkIiwiaW5jbHVkZXMiLCJzdGFuZGFyZGl6ZVdlYXRoZXJEYXRhS2V5d29yZCIsInN0YW5kYXJkaXplV2VhdGhlckRhdGEiLCJkaXJlY3Rpb25WYWwiLCJkZWdyZWVzIiwiYWRqdXN0ZWQiLCJNYXRoIiwiY2VpbCIsImNvbnZlcnREaXJlY3Rpb24iLCJjb252ZXJ0V2VhdGhlckRhdGFEaXJlY3Rpb25zIiwiZm9ybWF0V2VhdGhlckRhdGFCb2R5IiwiZXJyIiwibWVzc2FnZSIsImxvZ2luRWxlbWVudCIsImxvZ2luRm9ybSIsImxvZ2luQnV0dG9uIiwibG9naW5Mb2FkaW5nRWxlbWVudCIsIndlYXRoZXJFbGVtZW50Iiwid2VhdGhlckZvcm0iLCJ3ZWF0aGVyRXJyb3JFbGVtZW50Iiwid2VhdGhlckZvcm1CdXR0b24iLCJ3ZWF0aGVyTG9hZGluZ0VsZW1lbnQiLCJ3ZWF0aGVyQm9keUVsZW1lbnQiLCJzZXR0aW5nc0J1dHRvbiIsInNldHRpbmdzRWxlbWVudCIsInNldHRpbmdzRm9ybSIsImhpZGVTZXR0aW5nc0J1dHRvbiIsImNpdHlFbGVtZW50IiwiY291bnRyeUVsZW1lbnQiLCJtYWluVGVtcEVsZW1lbnQiLCJtYWluV2VhdGhlckltZyIsIm1haW5XZWF0aGVyTG9hZGluZ0ltZyIsIm1haW5XZWF0aGVyRWxlbWVudCIsImZlZWxzVGVtcEVsZW1lbnQiLCJtaW5UZW1wRWxlbWVudCIsIm1heFRlbXBFbGVtZW50Iiwid2luZFNwZWVkRWxlbWVudCIsIndpbmREaXJlY3Rpb25FbGVtZW50Iiwic3VucmlzZUVsZW1lbnQiLCJzdW5zZXRFbGVtZW50IiwiZ2lwaHlBUElQcm92aWRlciIsInNlYXJjaCIsImdpcGh5IiwiaW1hZ2VzIiwib3JpZ2luYWwiLCJ1cmwiLCJ2YWxpZGF0ZSIsImZvcm0iLCJlcnJvckVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0cyIsImlucHV0Iiwic2V0Q3VzdG9tVmFsaWRpdHkiLCJlcnJvckVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsImNsYXNzTGlzdCIsImFkZCIsImNsZWFyRm9ybUVycm9ycyIsImFsbCIsImNoZWNrVmFsaWRpdHkiLCJhcGlQcm92aWRlciIsImR1bW15UGFyYW1zIiwidmFsdWUiLCJ2YWxpZGF0ZUFwaUtleSIsInJlc29sdmUiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIndlYXRoZXJHaWYiLCJpY29ucyIsInJlZ3VsYXIiLCJhbHRlcm5hdGUiLCJob3ZlciIsImNvbG9yaXplSWNvbiIsImljb25UeXBlIiwid2VhdGhlclR5cGUiLCJjbG9zZXN0IiwiZGF0YXNldCIsImdldFdlYXRoZXJDb2xvclNjaGVtZSIsImZpbmQiLCJjb250YWlucyIsIndlYXRoZXJJbWFnZVZpZXciLCJ3ZWF0aGVyTG9hZGluZ1ZpZXciLCJoaWRlV2VhdGhlckxvYWRpbmdWaWV3IiwiZGVmYXVsdFdlYXRoZXJWaWV3Iiwid2VhdGhlclZpZXciLCJ3aXRoSW1hZ2UiLCJidXR0b24iLCJnaWZQcm92aWRlciIsImdldFdlYXRoZXJHaWYiLCJwb3B1bGF0ZVdlYXRoZXJJbWFnZSIsIndlYXRoZXJCdXR0b25zSWNvblZpZXciLCJ3ZWF0aGVyQnV0dG9uc1RleHRWaWV3Iiwic3dpdGNoQnV0dG9ucyIsImlubmVyV2lkdGgiLCJidXR0b25JY29uTm9ybWFsIiwiYnV0dG9uSWNvbkhvdmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsInByZXZlbnREZWZhdWx0IiwibmV3S2V5cyIsImFzc2lnbiIsIm9sZFVuaXRTZXR0aW5ncyIsIm5ld1NldHRpbmdzIiwiZnJvbUVudHJpZXMiLCJGb3JtRGF0YSIsImtleXMiLCJzZXR0aW5nIiwiY29udmVydFdlYXRoZXIiXSwic291cmNlUm9vdCI6IiJ9