(()=>{"use strict";var n={689:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,":root {\n  --site-font: 'Helvetica', sans-serif;\n  --background-color: rgb(255, 255, 165);\n  --secondary-color: rgb(0, 70, 162);\n  --light-secondary-color: rgb(200, 224, 255);\n  --sunny-color: rgb(255, 255, 165);\n  --sunny-font-color: black;\n  --cloud-color: rgb(165, 204, 255);\n  --cloud-font-color: black;\n  --lowVis-color: rgb(70, 70, 70);\n  --lowVis-font-color: white;\n  --rain-color: rgb(0, 70, 162);\n  --rain-font-color: rgb(200, 224, 255);\n  --snow-color: white;\n  --snow-font-color: black;\n  --thunder-color: black;\n  --thunder-font-color: yellow;\n}\n\nhtml {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: var(--site-font);\n  min-height: 100vh;\n  background-color: var(--sunny-color);\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\na {\n  color: var(--secondary-color);\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\nbutton {\n  font-size: 1rem;\n  padding: 0.5rem 1.5rem;\n  cursor: pointer;\n  background-color: var(--secondary-color);\n  color: white;\n  border-radius: 0.2rem;\n}\n\nbutton:hover {\n  background-color: var(--light-secondary-color);\n  color: black;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.error {\n  color: red;\n}\n","",{version:3,sources:["webpack://./src/styles/all.css"],names:[],mappings:"AAAA;EACE,oCAAoC;EACpC,sCAAsC;EACtC,kCAAkC;EAClC,2CAA2C;EAC3C,iCAAiC;EACjC,yBAAyB;EACzB,iCAAiC;EACjC,yBAAyB;EACzB,+BAA+B;EAC/B,0BAA0B;EAC1B,6BAA6B;EAC7B,qCAAqC;EACrC,mBAAmB;EACnB,wBAAwB;EACxB,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,6BAA6B;EAC7B,iBAAiB;EACjB,oCAAoC;EACpC,SAAS;EACT,UAAU;EACV,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,6BAA6B;EAC7B,qBAAqB;AACvB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,eAAe;EACf,sBAAsB;EACtB,eAAe;EACf,wCAAwC;EACxC,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,8CAA8C;EAC9C,YAAY;AACd;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,UAAU;AACZ",sourcesContent:[":root {\n  --site-font: 'Helvetica', sans-serif;\n  --background-color: rgb(255, 255, 165);\n  --secondary-color: rgb(0, 70, 162);\n  --light-secondary-color: rgb(200, 224, 255);\n  --sunny-color: rgb(255, 255, 165);\n  --sunny-font-color: black;\n  --cloud-color: rgb(165, 204, 255);\n  --cloud-font-color: black;\n  --lowVis-color: rgb(70, 70, 70);\n  --lowVis-font-color: white;\n  --rain-color: rgb(0, 70, 162);\n  --rain-font-color: rgb(200, 224, 255);\n  --snow-color: white;\n  --snow-font-color: black;\n  --thunder-color: black;\n  --thunder-font-color: yellow;\n}\n\nhtml {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: var(--site-font);\n  min-height: 100vh;\n  background-color: var(--sunny-color);\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\na {\n  color: var(--secondary-color);\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\nbutton {\n  font-size: 1rem;\n  padding: 0.5rem 1.5rem;\n  cursor: pointer;\n  background-color: var(--secondary-color);\n  color: white;\n  border-radius: 0.2rem;\n}\n\nbutton:hover {\n  background-color: var(--light-secondary-color);\n  color: black;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.error {\n  color: red;\n}\n"],sourceRoot:""}]);const c=i},713:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,"form {\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  row-gap: 1rem;\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n  gap: 0.1rem;\n}\n\ninput, select {\n  min-width: 18rem;\n  min-height: 1rem;\n  padding: 0.25rem;\n  font-size: 1rem;\n}\n\nselect {\n  cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/styles/form.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,qBAAqB;EACrB,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB",sourcesContent:["form {\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  row-gap: 1rem;\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n  gap: 0.1rem;\n}\n\ninput, select {\n  min-width: 18rem;\n  min-height: 1rem;\n  padding: 0.25rem;\n  font-size: 1rem;\n}\n\nselect {\n  cursor: pointer;\n}\n"],sourceRoot:""}]);const c=i},176:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".login {\n  margin: 4rem 1rem 0;\n  height: max-content;\n  padding: 2rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.login .link {\n  margin-top: 0.5rem;\n  text-align: center;\n}\n","",{version:3,sources:["webpack://./src/styles/login-view.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,mBAAmB;EACnB,oBAAoB;EACpB,qBAAqB;EACrB,wCAAwC;EACxC,uBAAuB;EACvB,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB",sourcesContent:[".login {\n  margin: 4rem 1rem 0;\n  height: max-content;\n  padding: 2rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.login .link {\n  margin-top: 0.5rem;\n  text-align: center;\n}\n"],sourceRoot:""}]);const c=i},607:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".settings {\n  position: absolute;\n  z-index: 1;\n  min-height: 100vh;\n  width: 100%;\n  padding: 2rem;\n  background-color: rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: center;\n  align-items: start;\n}\n\n.settings form {\n  background-color: white;\n  margin: 4rem 0;\n  min-width: 45vw;\n  padding: 0.5rem 0.5rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n}\n\n.settings .hide {\n  justify-self: end;\n  padding: 0.25rem;\n  height: 2rem;\n  width: 2rem;\n  font-weight: 900;\n}\n","",{version:3,sources:["webpack://./src/styles/settings-view.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,UAAU;EACV,iBAAiB;EACjB,WAAW;EACX,aAAa;EACb,qCAAqC;EACrC,aAAa;EACb,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,cAAc;EACd,eAAe;EACf,6BAA6B;EAC7B,qBAAqB;EACrB,wCAAwC;AAC1C;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,gBAAgB;AAClB",sourcesContent:[".settings {\n  position: absolute;\n  z-index: 1;\n  min-height: 100vh;\n  width: 100%;\n  padding: 2rem;\n  background-color: rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: center;\n  align-items: start;\n}\n\n.settings form {\n  background-color: white;\n  margin: 4rem 0;\n  min-width: 45vw;\n  padding: 0.5rem 0.5rem 1.5rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--secondary-color);\n}\n\n.settings .hide {\n  justify-self: end;\n  padding: 0.25rem;\n  height: 2rem;\n  width: 2rem;\n  font-weight: 900;\n}\n"],sourceRoot:""}]);const c=i},67:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".weather {\n  min-height: 100vh;\n  width: max-content;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.weather form.search {\n  grid-template: 1.2rem 2rem max-content / repeat(3, max-content);\n  column-gap: 0.5rem;\n  row-gap: 0;\n  justify-content: center;\n}\n\n.weather form.search .field {\n  grid-row: 1 / span 3;\n}\n\n.weather form.search input {\n  height: 2rem;\n}\n\n.weather form.search button {\n  padding: 0.25rem 0.5rem;\n}\n\n.weather form.search button[type=\"submit\"] {\n  grid-row: 2;\n  grid-column: 2;\n}\n\n.weather form.search button.show-settings {\n  grid-row: 2;\n  grid-column: 3;\n}\n\n.weather[data-weather='Sunny'] {\n  background-color: var(--sunny-color);\n  color: var(--sunny-font-color);\n}\n\n.weather[data-weather='Clouds'] {\n  background-color: var(--cloud-color);\n  color: var(--cloud-font-color);\n}\n\n.weather[data-weather='Foggy'],\n.weather[data-weather='Dusty'] {\n  background-color: var(--lowVis-color);\n  color: var(--lowVis-font-color);\n}\n\n.weather[data-weather='Rain'] {\n  background-color: var(--rain-color);\n  color: var(--rain-font-color);\n}\n\n.weather[data-weather='Snow'] {\n  background-color: var(--snow-color);\n  color: var(--snow-font-color);\n}\n\n.weather[data-weather='Thunderstorm'] {\n  background-color: var(--thunder-color);\n  color: var(--thunder-font-color);\n}\n","",{version:3,sources:["webpack://./src/styles/weather-view.css"],names:[],mappings:"AAAA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,+DAA+D;EAC/D,kBAAkB;EAClB,UAAU;EACV,uBAAuB;AACzB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,oCAAoC;EACpC,8BAA8B;AAChC;;AAEA;EACE,oCAAoC;EACpC,8BAA8B;AAChC;;AAEA;;EAEE,qCAAqC;EACrC,+BAA+B;AACjC;;AAEA;EACE,mCAAmC;EACnC,6BAA6B;AAC/B;;AAEA;EACE,mCAAmC;EACnC,6BAA6B;AAC/B;;AAEA;EACE,sCAAsC;EACtC,gCAAgC;AAClC",sourcesContent:[".weather {\n  min-height: 100vh;\n  width: max-content;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.weather form.search {\n  grid-template: 1.2rem 2rem max-content / repeat(3, max-content);\n  column-gap: 0.5rem;\n  row-gap: 0;\n  justify-content: center;\n}\n\n.weather form.search .field {\n  grid-row: 1 / span 3;\n}\n\n.weather form.search input {\n  height: 2rem;\n}\n\n.weather form.search button {\n  padding: 0.25rem 0.5rem;\n}\n\n.weather form.search button[type=\"submit\"] {\n  grid-row: 2;\n  grid-column: 2;\n}\n\n.weather form.search button.show-settings {\n  grid-row: 2;\n  grid-column: 3;\n}\n\n.weather[data-weather='Sunny'] {\n  background-color: var(--sunny-color);\n  color: var(--sunny-font-color);\n}\n\n.weather[data-weather='Clouds'] {\n  background-color: var(--cloud-color);\n  color: var(--cloud-font-color);\n}\n\n.weather[data-weather='Foggy'],\n.weather[data-weather='Dusty'] {\n  background-color: var(--lowVis-color);\n  color: var(--lowVis-font-color);\n}\n\n.weather[data-weather='Rain'] {\n  background-color: var(--rain-color);\n  color: var(--rain-font-color);\n}\n\n.weather[data-weather='Snow'] {\n  background-color: var(--snow-color);\n  color: var(--snow-font-color);\n}\n\n.weather[data-weather='Thunderstorm'] {\n  background-color: var(--thunder-color);\n  color: var(--thunder-font-color);\n}\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);t&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],A=t.base?s[0]+t.base:s[0],l=a[A]||0,u="".concat(A," ").concat(l);a[A]=l+1;var d=r(u),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(m);else{var h=o(m,t);t.byIndex=c,e.splice(c,0,{identifier:u,updater:h,references:1})}i.push(u)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=r(a[i]);e[c].references--}for(var s=t(n,o),A=0;A<a.length;A++){var l=r(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},609:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0;var t={};(()=>{r.d(t,{S:()=>X});var n=r(379),e=r.n(n),o=r(795),a=r.n(o),i=r(569),c=r.n(i),s=r(565),A=r.n(s),l=r(609),u=r.n(l),d=r(589),m=r.n(d),h=r(689),p={};p.styleTagTransform=m(),p.setAttributes=A(),p.insert=c().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=u(),e()(h.Z,p),h.Z&&h.Z.locals&&h.Z.locals;var C=r(713),f={};f.styleTagTransform=m(),f.setAttributes=A(),f.insert=c().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=u(),e()(C.Z,f),C.Z&&C.Z.locals&&C.Z.locals;var g=r(176),E={};E.styleTagTransform=m(),E.setAttributes=A(),E.insert=c().bind(null,"head"),E.domAPI=a(),E.insertStyleElement=u(),e()(g.Z,E),g.Z&&g.Z.locals&&g.Z.locals;var w=r(607),y={};y.styleTagTransform=m(),y.setAttributes=A(),y.insert=c().bind(null,"head"),y.domAPI=a(),y.insertStyleElement=u(),e()(w.Z,y),w.Z&&w.Z.locals&&w.Z.locals;var B=r(67),b={};b.styleTagTransform=m(),b.setAttributes=A(),b.insert=c().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=u(),e()(B.Z,b),B.Z&&B.Z.locals&&B.Z.locals;const v={},x={temp:1,speed:1,time:1},S=["K","°F","°C"],k=["meter,second","mile,hour"],q=["hr24","hr12"];async function j(n){const e=v.openWeatherMap,r=function(n){return n.replace(" ","+")}(n),t=await fetch(`https://api.openweathermap.org/data/2.5/weather?appid=${e}&q=${r}`);if(401===t.status)throw new Error("Invalid API Key");if(404===t.status)throw new Error("City not found");const{name:o,main:{feels_like:a,temp:i,temp_max:c,temp_min:s},sys:{country:A,sunrise:l,sunset:u},timezone:d,weather:[{main:m,description:h}],wind:{deg:p,speed:C}}=await t.json();return{name:o,country:A,weather:h,weatherKeyword:"Atmosphere"===m?h:m,temp:i,tempMin:s,tempMax:c,tempFeels:a,windSpeed:C,windDirection:p,sunrise:l,sunset:u,timeZoneOffset:d}}function Z(n,e){return Number(n).toFixed(e)}function M(n){return n.split(" ").map((n=>n[0].toUpperCase()+n.slice(1))).join(" ")}function T(n){return Z(n,0)}function $(n){return T(n-273.15)}function D(n){return T(n+273.15)}function z(n){return T(5/9*(n-32))}function L(n){return T(1.8*n+32)}function N(n){return T(L($(n)))}function F(n){return T(D(z(n)))}function I(n){return Z(n,2)}function R(n){return I(2.237*n)}function W(n){return I(n/2.237)}function K(n){return String(n).padStart(2,"0")}function U(n){const[e,r]=n.split(":");return`${Number(e)}:${r}`}function V(n){const[e,r]=n.split(":").map(Number);let[t,o]=e<=11?["AM",0]:["PM",1];return 0===e&&(o+=12),`${e%13+o}:${K(r)} ${t}`}function O(n){const[e,r]=n.split(" "),[t,o]=e.split(":").map(Number);let a="PM"===r?12:0;return 12===t&&"AM"===r&&(a-=12),`${t+a}:${K(o)}`}function P(n,e){const r=Number(n)+Number(e);return U(new Date(1e3*r).toISOString().slice(11,16))}function Y(n,e){return V(P(n,e))}const H={body:{},error:""},X=H;function _(n,e){["temp","tempMax","tempMin","tempFeels"].forEach((r=>{const t=n[r];t&&(n[r]=function(n,e,r=S[x.temp]){const t="number"==typeof n?n:Number(n.match(/\d+(\.\d+)?/)[0]);return({"K-°F":N,"K-°C":$,"°F-K":F,"°F-°C":z,"°C-K":D,"°C-°F":L}[`${e}-${r}`]||(n=>n))(t)+r}(t,e))}))}function J(n,e){["sunrise","sunset"].forEach((r=>{const t=n[r];t&&(n[r]=function(n,e,r,t=q[x.time]){return({"unix-hr24":P,"unix-hr12":Y,"hr24-hr12":V,"hr12-hr24":O}[`${r}-${t}`]||U)(n,e)}(t,n.timeZoneOffset||0,e))}))}function G(n,e){const r=n.windSpeed;r&&(n.windSpeed=function(n,e,r=k[x.speed]){const t="number"==typeof n?n:Number(n.match(/\d+(\.\d+)?/)[0]),o=({"meter,second-mile,hour":R,"mile,hour-meter,second":W}[`${e}-${r}`]||(n=>n))(t),a=r.split(",");return`${o} ${a[0]}${1===o?"":"s"} per ${a[1]}`}(r,e))}async function Q(n,e=j){H.error="";try{const r=await e(n);!function(n){(function(n){!function(n){const e=n.weather;e&&(n.weather=M(e))}(n),function(n){const e=Object.entries({Sunny:["Clear","Clear Sky","Sunny","Sun"],Rain:["Rain","Drizzle","Shower"],Clouds:["Cloud"],Foggy:["Haze","Mist","Smoke","Fog"],Dusty:["Dust","Ash","Sand"],Snow:["Snow","Sleet","Hail"],Thunderstorm:["Thunder","Thunderstorm","Lightning"]});let r=n.weatherKeyword;if(r){r=M(r),n.weatherKeyword=r;for(let t=0;t<e.length;t+=1){const[o,a]=e[t];if(a.some((n=>r.includes(n))))return void(n.weatherKeyword=o)}}}(n)})(n),_(n,"K"),J(n,"unix"),G(n,"meter,second"),function(n){const e=n.windDirection;e&&(n.windDirection=function(n){const e=n-22.5;return["N","NE","E","SE","S","SW","W","NW"][e>0&&e<315?Math.ceil(e/45):0]}(e))}(n)}(r),H.body=r}catch(n){H.error=n.message}return H}const nn=document.querySelector(".login"),en=document.querySelector(".login form"),rn=document.querySelector(".weather"),tn=document.querySelector(".weather form.search"),on=document.querySelector(".weather .error"),an=document.querySelector("button.show-settings"),cn=document.querySelector(".settings"),sn=document.querySelector(".settings form"),An=document.querySelector(".weather .city"),ln=document.querySelector(".weather .country"),un=document.querySelector(".weather .main-temperature"),dn=document.querySelector(".weather .main-img"),mn=document.querySelector(".weather .main-weather"),hn=document.querySelector(".weather .feels-temperature"),pn=document.querySelector(".weather .min-temperature"),Cn=document.querySelector(".weather .max-temperature"),fn=document.querySelector(".weather .wind-speed"),gn=document.querySelector(".weather .wind-direction"),En=document.querySelector(".weather .sunrise"),wn=document.querySelector(".weather .sunset");function yn(n){const e=n.querySelectorAll(".error"),r=n.querySelectorAll("input");return e.forEach((n=>{n.textContent="",n.classList.add("hidden")})),r.forEach((e=>{if(!e.checkValidity()){const r=n.querySelector(`#${e.id}+.error`);r.textContent=e.validationMessage,r.classList.remove("hidden")}})),n.checkValidity()}async function Bn(n){const e=v.giphy,r=await fetch(`https://api.giphy.com/v1/gifs/translate?api_key=${e}&s=${n}`);if(401===r.status)throw new Error("Invalid API Key");return(await r.json()).data.images.original.url}const bn={url:"#"},vn=bn;async function xn(n,e=Bn){try{bn.url=await e(n)}catch(n){bn.url="#"}return bn}function Sn(){nn.classList.add("hidden"),cn.classList.add("hidden"),rn.classList.remove("hidden"),on.textContent="",on.classList.add("hidden")}function kn(){if(Sn(),X.error)return on.textContent=X.error,void on.classList.remove("hidden");var n;n=X.body,rn.dataset.weather=n.weatherKeyword,An.textContent=n.name,ln.textContent=n.country,un.textContent=n.temp,mn.textContent=n.weather,hn.textContent=n.tempFeels,pn.textContent=n.tempMin,Cn.textContent=n.tempMax,fn.textContent=n.windSpeed,gn.textContent=n.windDirection,En.textContent=n.sunrise,wn.textContent=n.sunset,async function(n){await xn(n.weatherKeyword),dn.src=vn.url}(X.body)}en.addEventListener("submit",(async function(n){var e;n.preventDefault(),yn(en)&&(e={openWeatherMap:en.querySelector("#open-weather-map-api-key").value,giphy:en.querySelector("#giphy-api-key").value},Object.assign(v,e),Sn(),await Q("New York City"),kn())})),tn.addEventListener("submit",(async function(n){n.preventDefault(),yn(tn)&&(await Q(tn.querySelector("#location").value),kn())})),an.addEventListener("click",(function(n){n.preventDefault(),cn.classList.remove("hidden")})),sn.addEventListener("submit",(function(n){if(n.preventDefault(),!yn(sn))return;const e={...x};var r;r=Object.fromEntries(new FormData(sn).entries()),Object.keys(r).forEach((n=>{x[n]=+r[n]})),function(n){const e=H.body;_(e,S[n.temp]),J(e,q[n.time]),G(e,k[n.speed])}(e),kn()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,